(self["webpackChunkdashboard_template"] = self["webpackChunkdashboard_template"] || []).push([[272],{

/***/ 7111:
/*!********************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/components/detail-rekam-medis/detail-rekam-medis.component.ts ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DetailRekamMedisComponent": () => (/* binding */ DetailRekamMedisComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 37716);

const _c0 = ["*"];
class DetailRekamMedisComponent {
    constructor() { }
    ngOnInit() {
    }
}
DetailRekamMedisComponent.ɵfac = function DetailRekamMedisComponent_Factory(t) { return new (t || DetailRekamMedisComponent)(); };
DetailRekamMedisComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: DetailRekamMedisComponent, selectors: [["app-detail-rekam-medis"]], inputs: { DetailId: "DetailId", DetailCaption: "DetailCaption" }, ngContentSelectors: _c0, decls: 8, vars: 6, consts: [[1, "accordion", "shadow-sm", 3, "id"], [1, "accordion-item"], ["id", "headingOne", 1, "accordion-header"], ["type", "button", "data-bs-toggle", "collapse", "aria-expanded", "false", 1, "accordion-button", "px-3", "py-2"], ["aria-labelledby", "headingOne", 1, "accordion-collapse", "collapse", 3, "id"], [1, "accordion-body", "px-3", "py-2"]], template: function DetailRekamMedisComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "h2", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "button", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("id", "accordion" + ctx.DetailId);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("data-bs-target", "#" + ctx.DetailId)("aria-controls", ctx.DetailId);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.DetailCaption, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("id", ctx.DetailId);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("data-bs-parent", "#accordion" + ctx.DetailId);
    } }, styles: ["button.accordion-button[_ngcontent-%COMP%] {\r\n  border: none !important;\r\n  outline: none !important;\r\n  box-shadow: none !important;\r\n}"] });


/***/ }),

/***/ 75117:
/*!****************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/components/informasi-pasien/informasi-pasien.component.ts ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InformasiPasienComponent": () => (/* binding */ InformasiPasienComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/modules/shared/services/navigation.service */ 35908);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/dashboard-dokter.service */ 27410);
/* harmony import */ var src_app_modules_PIS_services_IRJA_pendaftaran_pasien_baru_pendaftaran_pasien_baru_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/PIS/services/IRJA/pendaftaran-pasien-baru/pendaftaran-pasien-baru.service */ 20990);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 38583);







function InformasiPasienComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](2, "img", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](3, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](4, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](5, "h5", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](7, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](8, "p", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](9);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipe"](10, "titlecase");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](11, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](12, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](13, "p", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](14, "Tgl. Lahir");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](15, "div", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](16, "p", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](17);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipe"](18, "date");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](19, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](20, "div", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](21, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](22, "p", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](23, "No. RM");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](24, "div", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](25, "p", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](26);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](27, "div", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](28, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](29, "p", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](30, "No. Reg");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](31, "div", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](32, "p", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](33);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](34, "div", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](35, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](36, "p", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](37, "Tgl. Masuk");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](38, "div", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](39, "p", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](40);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](41, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](42, "div", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](43, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](44, "p", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](45, "DPJP");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](46, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](47, "p", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](48);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](49, "div", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](50, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](51, "p", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](52, "PPJP");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](53, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](54, "p", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](55, " : \u00A0 ");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](56, "div", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](57, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](58, "p", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](59, "Debitur");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](60, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](61, "p", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](62);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("hidden", ctx_r0.ToggleVisibility);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("src", ctx_r0.daftarPasienService.ActivePasien.value.photo_url, _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵsanitizeUrl"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassMap"](ctx_r0.screenWidth >= 1920 ? "col-lg-2 col-md-3 col-sm-3 col-xs-3" : "col-lg-3 col-md-3 col-sm-3 col-xs-3");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" ", ctx_r0.daftarPasienService.ActivePasien.value.nama_pasien, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate2"](" ", ctx_r0.daftarPasienService.ActivePasien.value.umur, " / ", _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipeBind1"](10, 29, ctx_r0.daftarPasienService.ActivePasien.value.gender), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" : \u00A0 ", _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipeBind2"](18, 31, ctx_r0.daftarPasienService.ActivePasien.value.tanggal_lahir, "dd/MM/yyyy"), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassMap"](ctx_r0.screenWidth >= 1920 ? "col-lg-2 col-md-3 col-sm-3 col-xs-3" : "col-lg-3 col-md-3 col-sm-3 col-xs-3");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" : \u00A0 ", ctx_r0.daftarPasienService.ActivePasien.value.no_rekam_medis, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" : \u00A0 ", ctx_r0.daftarPasienService.ActivePasien.value.no_register, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" : \u00A0 ", ctx_r0.daftarPasienService.ActivePasien.value.tgl_admisi, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassMap"](ctx_r0.screenWidth >= 1920 ? "col-lg-4 col-md-4 col-sm-4 col-xs-4" : "col-lg-3 col-md-3 col-sm-3 col-xs-3");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassMap"](ctx_r0.screenWidth >= 1920 ? "col-lg-2 col-md-2 col-sm-2 col-xs-2" : "col-lg-4 col-md-4 col-sm-4 col-xs-4");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassMap"](ctx_r0.screenWidth >= 1920 ? "col-lg-10 col-md-10 col-sm-10 col-xs-10" : "col-lg-8 col-md-8 col-sm-8 col-xs-8");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" : \u00A0 ", ctx_r0.daftarPasienService.ActivePasien.value.dpjp, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassMap"](ctx_r0.screenWidth >= 1920 ? "col-lg-2 col-md-2 col-sm-2 col-xs-2" : "col-lg-4 col-md-4 col-sm-4 col-xs-4");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassMap"](ctx_r0.screenWidth >= 1920 ? "col-lg-10 col-md-10 col-sm-10 col-xs-10" : "col-lg-8 col-md-8 col-sm-8 col-xs-8");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassMap"](ctx_r0.screenWidth >= 1920 ? "col-lg-2 col-md-2 col-sm-2 col-xs-2" : "col-lg-4 col-md-4 col-sm-4 col-xs-4");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassMap"](ctx_r0.screenWidth >= 1920 ? "col-lg-10 col-md-10 col-sm-10 col-xs-10" : "col-lg-8 col-md-8 col-sm-8 col-xs-8");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" : \u00A0 ", ctx_r0.daftarPasienService.ActivePasien.value.nama_debitur, " ");
} }
class InformasiPasienComponent {
    constructor(navigationService, daftarPasienService, dashboardDokterService, pendaftaranPasienBaruService) {
        this.navigationService = navigationService;
        this.daftarPasienService = daftarPasienService;
        this.dashboardDokterService = dashboardDokterService;
        this.pendaftaranPasienBaruService = pendaftaranPasienBaruService;
        // ** Toggling Properties
        this.ToggleVisibility = false;
        this.onToggledVisibility = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.photo_pasien = "";
    }
    onResize(event) {
        this.onDetectScreenSize(event.srcElement.innerWidth);
    }
    ngOnInit() {
        this.onTogglingVisibility();
        this.daftarPasienService.onGetActivePasien();
        this.onDetectScreenSize(window.innerWidth);
    }
    ngAfterViewInit() {
        // this.onGetFotoPasien();
    }
    onGetFotoPasien() {
        // this.pendaftaranPasienBaruService.onGetLinkFotoPerson(this.daftarPasienService.ActivePasien.value.id_person)
        //     .subscribe((result) => {
        //         this.photo_pasien = result.data;
        //     })
    }
    onDetectScreenSize(screenWidth) {
        this.screenWidth = screenWidth;
    }
    onTogglingVisibility() {
        this.ToggleVisibility = !this.ToggleVisibility;
        let elem = document.getElementById("ArrowVisibilty");
        if (this.ToggleVisibility == true) {
            elem.classList.remove("fa-chevron-circle-up");
            elem.classList.add("fa-chevron-circle-down");
        }
        else {
            elem.classList.remove("fa-chevron-circle-down");
            elem.classList.add("fa-chevron-circle-up");
        }
        this.onToggledVisibility.emit(this.ToggleVisibility);
    }
    onGetHideTopMenuSubject() {
        this.navigationService.onGetHideTopMenuSubject()
            .subscribe((_result) => {
            if (_result === true) {
                this.ToggleVisibility = _result;
                let elem = document.getElementById("ArrowVisibilty");
                if (this.ToggleVisibility == true) {
                    elem.classList.remove("fa-chevron-circle-up");
                    elem.classList.add("fa-chevron-circle-down");
                }
                this.onToggledVisibility.emit(_result);
            }
        }, (error) => {
            console.log(error);
        }, () => {
        });
    }
}
InformasiPasienComponent.ɵfac = function InformasiPasienComponent_Factory(t) { return new (t || InformasiPasienComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_0__.NavigationService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_1__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_2__.DashboardDokterService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_app_modules_PIS_services_IRJA_pendaftaran_pasien_baru_pendaftaran_pasien_baru_service__WEBPACK_IMPORTED_MODULE_3__.PendaftaranPasienBaruService)); };
InformasiPasienComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({ type: InformasiPasienComponent, selectors: [["dd-informasi-pasien"]], hostBindings: function InformasiPasienComponent_HostBindings(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("resize", function InformasiPasienComponent_resize_HostBindingHandler($event) { return ctx.onResize($event); }, false, _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵresolveWindow"]);
    } }, inputs: { ToggleVisibility: "ToggleVisibility" }, outputs: { onToggledVisibility: "onToggledVisibility" }, decls: 10, vars: 10, consts: [[1, "card", "shadow-sm", "border-0", "bg-white", "py-0"], [1, "card-body", "px-1", "py-0"], [1, "row", "px-0", "mx-0", 3, "hidden"], [1, "col-11", "pe-0", "py-2"], ["class", "row", 3, "hidden", 4, "ngIf"], [1, "col-1"], [1, "row", "text-end", "align-items-end", 2, "height", "100%"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "cursor-pointer", 3, "click"], ["id", "ArrowVisibilty", 1, "fas", "fa-chevron-circle-up", "fa-lg", "text-biru-muda"], [1, "row", 3, "hidden"], [1, "col-lg-1", "col-md-3", "col-sm-3", "col-xs-3", "px-2", "text-center"], ["alt", "", 2, "height", "5.4rem", "max-height", "5.4rem", 3, "src"], [1, "mb-2"], [1, "text-biru-muda", "mb-0"], [1, "text-hitam-muda", "mb-0", "informasi-pasien-text"], [1, "row"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [1, "text-abu-tua", "mb-0", "informasi-pasien-text"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], [1, "row", "mb-2"], [1, "row", "mb-1"]], template: function InformasiPasienComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipe"](3, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](4, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](5, InformasiPasienComponent_div_5_Template, 63, 34, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](6, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](7, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](8, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function InformasiPasienComponent_Template_div_click_8_listener() { return ctx.onTogglingVisibility(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](9, "i", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassMap"](ctx.ToggleVisibility ? "card-header-hidding-dd" : "card-header-dd");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("hidden", _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipeBind1"](3, 8, ctx.dashboardDokterService.ShowInformasiPasien$));
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassMap"](ctx.ToggleVisibility ? "" : "height-6rem");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx.daftarPasienService.ActivePasien.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassMap"](ctx.ToggleVisibility ? "py-0" : "py-1");
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.NgIf], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.AsyncPipe, _angular_common__WEBPACK_IMPORTED_MODULE_5__.TitleCasePipe, _angular_common__WEBPACK_IMPORTED_MODULE_5__.DatePipe], styles: [".card-header-dd[_ngcontent-%COMP%] {\r\n  height: 6.25rem;\r\n  max-height: 6.25rem;\r\n  transition: all 0.25s;\r\n}\r\n\r\n.card-header-hidding-dd[_ngcontent-%COMP%] {\r\n  height: 1rem !important;\r\n  max-height: 1rem !important;\r\n  transition: all 0.25s;\r\n}\r\n\r\n.card-top-menu[_ngcontent-%COMP%] {\r\n  background-color: #f6f4f7;\r\n}\r\n\r\n.card-top-menu[_ngcontent-%COMP%]:hover {\r\n  background-color: var(--biru-muda);\r\n  transition: all 0.25s;\r\n}\r\n\r\nsvg[_ngcontent-%COMP%] {\r\n  color: var(--biru-muda);\r\n}\r\n\r\np.font-cabin.mb-0[_ngcontent-%COMP%] {\r\n  font-size: 14px;\r\n  color: var(--biru-muda);\r\n}\r\n\r\n.card-top-menu[_ngcontent-%COMP%]:hover    > .card-body[_ngcontent-%COMP%]    > .row[_ngcontent-%COMP%]    > .col-lg-12[_ngcontent-%COMP%]    > svg[_ngcontent-%COMP%], .card-top-menu[_ngcontent-%COMP%]:hover    > .card-body[_ngcontent-%COMP%]    > .row[_ngcontent-%COMP%]    > .col-lg-12[_ngcontent-%COMP%]    > p[_ngcontent-%COMP%] {\r\n  color: white !important;\r\n}\r\n\r\n.height-6rem[_ngcontent-%COMP%] {\r\n  height: 6.25rem;\r\n  max-height: 6.25rem;\r\n}\r\n\r\n.card-child[_ngcontent-%COMP%] {\r\n  height: 4rem;\r\n}\r\n\r\np.informasi-pasien-text[_ngcontent-%COMP%] {\r\n  font-size: 15px;\r\n}"] });


/***/ }),

/***/ 82541:
/*!*****************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/dashboard-dokter-routing.module.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DashboarDokterRoutingModule": () => (/* binding */ DashboarDokterRoutingModule)
/* harmony export */ });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var _Pharmacy_pages_resep_formularium_resep_formularium_irda_daftar_resep_formularium_irda_daftar_resep_formularium_irda_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Pharmacy/pages/resep-formularium/resep-formularium-irda/daftar-resep-formularium-irda/daftar-resep-formularium-irda.component */ 5140);
/* harmony import */ var _Pharmacy_pages_resep_formularium_resep_formularium_irda_input_resep_formularium_irda_input_resep_formularium_irda_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Pharmacy/pages/resep-formularium/resep-formularium-irda/input-resep-formularium-irda/input-resep-formularium-irda.component */ 72742);
/* harmony import */ var _Pharmacy_pages_resep_formularium_resep_formularium_irda_pulang_resep_formularium_irda_pulang_resep_formularium_irda_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Pharmacy/pages/resep-formularium/resep-formularium-irda/pulang-resep-formularium-irda/pulang-resep-formularium-irda.component */ 64961);
/* harmony import */ var _Pharmacy_pages_resep_formularium_resep_formularium_irda_view_resep_formularium_irda_view_resep_formularium_irda_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Pharmacy/pages/resep-formularium/resep-formularium-irda/view-resep-formularium-irda/view-resep-formularium-irda.component */ 25622);
/* harmony import */ var _Pharmacy_pages_resep_formularium_resep_formularium_irja_input_resep_formularium_irja_input_resep_formularium_irja_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Pharmacy/pages/resep-formularium/resep-formularium-irja/input-resep-formularium-irja/input-resep-formularium-irja.component */ 72169);
/* harmony import */ var _Pharmacy_pages_resep_formularium_resep_formularium_irna_daftar_resep_formularium_irna_daftar_resep_formularium_irna_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Pharmacy/pages/resep-formularium/resep-formularium-irna/daftar-resep-formularium-irna/daftar-resep-formularium-irna.component */ 68700);
/* harmony import */ var _Pharmacy_pages_resep_formularium_resep_formularium_irna_input_resep_formularium_input_resep_formularium_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Pharmacy/pages/resep-formularium/resep-formularium-irna/input-resep-formularium/input-resep-formularium.component */ 45965);
/* harmony import */ var _Pharmacy_pages_resep_formularium_resep_formularium_irna_pulang_resep_formularium_irna_pulang_resep_formularium_irna_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Pharmacy/pages/resep-formularium/resep-formularium-irna/pulang-resep-formularium-irna/pulang-resep-formularium-irna.component */ 28825);
/* harmony import */ var _Pharmacy_pages_resep_formularium_resep_formularium_irna_view_resep_formularium_irna_view_resep_formularium_irna_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Pharmacy/pages/resep-formularium/resep-formularium-irna/view-resep-formularium-irna/view-resep-formularium-irna.component */ 99746);
/* harmony import */ var _dashboard_dokter_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dashboard-dokter.component */ 3587);
/* harmony import */ var _pages_alergi_alergi_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./pages/alergi/alergi.component */ 54775);
/* harmony import */ var _pages_assesmen_awal_assesmen_awal_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./pages/assesmen-awal/assesmen-awal.component */ 8533);
/* harmony import */ var _pages_beranda_dokter_beranda_dokter_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./pages/beranda-dokter/beranda-dokter.component */ 71489);
/* harmony import */ var _pages_daftar_pasien_per_dokter_daftar_pasien_per_dokter_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./pages/daftar-pasien-per-dokter/daftar-pasien-per-dokter.component */ 34712);
/* harmony import */ var _pages_diagnosa_diagnosa_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./pages/diagnosa/diagnosa.component */ 17874);
/* harmony import */ var _pages_konsul_konsul_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./pages/konsul/konsul.component */ 30182);
/* harmony import */ var _pages_laboratorium_input_order_baru_input_order_baru_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./pages/laboratorium/input-order-baru/input-order-baru.component */ 59985);
/* harmony import */ var _pages_laboratorium_laboratorium_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./pages/laboratorium/laboratorium.component */ 72670);
/* harmony import */ var _pages_laboratorium_riwayat_pemeriksaan_riwayat_pemeriksaan_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./pages/laboratorium/riwayat-pemeriksaan/riwayat-pemeriksaan.component */ 60998);
/* harmony import */ var _pages_radiologi_input_order_baru_input_order_baru_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./pages/radiologi/input-order-baru/input-order-baru.component */ 23932);
/* harmony import */ var _pages_radiologi_radiologi_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./pages/radiologi/radiologi.component */ 45498);
/* harmony import */ var _pages_radiologi_riwayat_pemeriksaan_riwayat_pemeriksaan_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./pages/radiologi/riwayat-pemeriksaan/riwayat-pemeriksaan.component */ 70581);
/* harmony import */ var _pages_resep_irda_daftar_resep_irda_daftar_resep_irda_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./pages/resep-irda/daftar-resep-irda/daftar-resep-irda.component */ 21469);
/* harmony import */ var _pages_resep_irda_input_resep_irda_input_resep_irda_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./pages/resep-irda/input-resep-irda/input-resep-irda.component */ 63477);
/* harmony import */ var _pages_resep_irda_pulang_resep_irda_pulang_resep_irda_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./pages/resep-irda/pulang-resep-irda/pulang-resep-irda.component */ 91002);
/* harmony import */ var _pages_resep_irda_view_resep_irda_view_resep_irda_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./pages/resep-irda/view-resep-irda/view-resep-irda.component */ 35446);
/* harmony import */ var _pages_resep_irna_daftar_resep_irna_daftar_resep_irna_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./pages/resep-irna/daftar-resep-irna/daftar-resep-irna.component */ 79840);
/* harmony import */ var _pages_resep_irna_input_resep_irna_input_resep_irna_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./pages/resep-irna/input-resep-irna/input-resep-irna.component */ 55062);
/* harmony import */ var _pages_resep_irna_pulang_resep_irna_pulang_resep_irna_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./pages/resep-irna/pulang-resep-irna/pulang-resep-irna.component */ 25552);
/* harmony import */ var _pages_resep_irna_view_resep_irna_view_resep_irna_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./pages/resep-irna/view-resep-irna/view-resep-irna.component */ 5852);
/* harmony import */ var _pages_resep_resep_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./pages/resep/resep.component */ 47977);
/* harmony import */ var _pages_surat_perintah_mondok_surat_perintah_mondok_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./pages/surat-perintah-mondok/surat-perintah-mondok.component */ 23142);
/* harmony import */ var _pages_vital_sign_vital_sign_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./pages/vital-sign/vital-sign.component */ 97577);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @angular/core */ 37716);




































const dashboarDokterRoutes = [
    {
        path: "", component: _dashboard_dokter_component__WEBPACK_IMPORTED_MODULE_9__.DashboardDokterComponent, data: { title: "Dashboard Dokter" },
        children: [
            { path: "beranda", component: _pages_beranda_dokter_beranda_dokter_component__WEBPACK_IMPORTED_MODULE_12__.BerandaDokterComponent, data: { title: "Beranda Dokter" } },
            { path: "daftar-pasien", component: _pages_daftar_pasien_per_dokter_daftar_pasien_per_dokter_component__WEBPACK_IMPORTED_MODULE_13__.DaftarPasienPerDokterComponent, data: { title: "Daftar Pasien" } },
            { path: "asesmen-awal", component: _pages_assesmen_awal_assesmen_awal_component__WEBPACK_IMPORTED_MODULE_11__.AssesmenAwalComponent, data: { title: "Riwayat Pemeriksaan Pasien" } },
            { path: "konsul", component: _pages_konsul_konsul_component__WEBPACK_IMPORTED_MODULE_15__.KonsulComponent, data: { title: "Konsul Pasien" } },
            { path: "diagnosa", component: _pages_diagnosa_diagnosa_component__WEBPACK_IMPORTED_MODULE_14__.DiagnosaComponent, data: { title: "Diagnosa Pasien" } },
            {
                path: "radiologi", component: _pages_radiologi_radiologi_component__WEBPACK_IMPORTED_MODULE_20__.RadiologiComponent, data: { title: "Pemeriksaan Radiologi Pasien" },
                children: [
                    { path: "riwayat-pemeriksaan", component: _pages_radiologi_riwayat_pemeriksaan_riwayat_pemeriksaan_component__WEBPACK_IMPORTED_MODULE_21__.RiwayatPemeriksaanRadComponent, data: { title: "Riwayat Pemeriksaan Radiologi" } },
                    { path: "input-order-pemeriksaan", component: _pages_radiologi_input_order_baru_input_order_baru_component__WEBPACK_IMPORTED_MODULE_19__.InputOrderBaruRadComponent, data: { title: "Input Order Radiologi Baru" } },
                ]
            },
            {
                path: "laboratorium", component: _pages_laboratorium_laboratorium_component__WEBPACK_IMPORTED_MODULE_17__.LaboratoriumComponent, data: { title: "Pemeriksaan Laboratorium Pasien" },
                children: [
                    { path: "riwayat-pemeriksaan", component: _pages_laboratorium_riwayat_pemeriksaan_riwayat_pemeriksaan_component__WEBPACK_IMPORTED_MODULE_18__.RiwayatPemeriksaanLabComponent, data: { title: "Riwayat Pemeriksaan Laboratorium" } },
                    { path: "input-order-pemeriksaan", component: _pages_laboratorium_input_order_baru_input_order_baru_component__WEBPACK_IMPORTED_MODULE_16__.InputOrderBaruLabComponent, data: { title: "Input Order Laboratorium Baru" } },
                ]
            },
            {
                path: "resep", component: _pages_resep_resep_component__WEBPACK_IMPORTED_MODULE_30__.ResepComponent, data: { title: "Resep Pasien" },
            },
            {
                path: "resep-irna", component: null, data: { title: "Pemeriksaan Laboratorium Pasien" },
                children: [
                    { path: "daftar-resep-irna", component: _pages_resep_irna_daftar_resep_irna_daftar_resep_irna_component__WEBPACK_IMPORTED_MODULE_26__.DaftarResepIrnaComponent, data: { title: "Daftar Resep Active" } },
                    { path: "input-resep-irna", component: _pages_resep_irna_input_resep_irna_input_resep_irna_component__WEBPACK_IMPORTED_MODULE_27__.InputResepIrnaComponent, data: { title: "Form Resep Rawat Inap" } },
                    { path: "view-resep-irna/:id/:key", component: _pages_resep_irna_view_resep_irna_view_resep_irna_component__WEBPACK_IMPORTED_MODULE_29__.ViewResepIrnaComponent, data: { title: "Detail Resep Rawat Inap" } },
                    { path: "ubah-resep-irna/:id/:key", component: _pages_resep_irna_input_resep_irna_input_resep_irna_component__WEBPACK_IMPORTED_MODULE_27__.InputResepIrnaComponent, data: { title: "Ubah Resep Rawat Inap" } },
                    { path: "pulang-resep-irna", component: _pages_resep_irna_pulang_resep_irna_pulang_resep_irna_component__WEBPACK_IMPORTED_MODULE_28__.PulangResepIrnaComponent, data: { title: "Form Resep Pulang Rawat Inap" } },
                ]
            },
            {
                path: "resep-irda", component: null, data: { title: "Resep Irda" },
                children: [
                    { path: "daftar-resep-irda", component: _pages_resep_irda_daftar_resep_irda_daftar_resep_irda_component__WEBPACK_IMPORTED_MODULE_22__.DaftarResepIrdaComponent, data: { title: "Daftar Resep Active" } },
                    { path: "input-resep-irda", component: _pages_resep_irda_input_resep_irda_input_resep_irda_component__WEBPACK_IMPORTED_MODULE_23__.InputResepIrdaComponent, data: { title: "Form Resep Rawat Darurat" } },
                    { path: "view-resep-irda/:id/:key", component: _pages_resep_irda_view_resep_irda_view_resep_irda_component__WEBPACK_IMPORTED_MODULE_25__.ViewResepIrdaComponent, data: { title: "Detail Resep Rawat Darurat" } },
                    { path: "ubah-resep-irda/:id/:key", component: _pages_resep_irda_input_resep_irda_input_resep_irda_component__WEBPACK_IMPORTED_MODULE_23__.InputResepIrdaComponent, data: { title: "Ubah Resep Rawat Darurat" } },
                    { path: "pulang-resep-irda", component: _pages_resep_irda_pulang_resep_irda_pulang_resep_irda_component__WEBPACK_IMPORTED_MODULE_24__.PulangResepIrdaComponent, data: { title: "Form Resep Rawat Darurat" } },
                ]
            },
            {
                path: "resep-formularium-irja", component: null, data: { title: "Resep Formularium IRJA" },
                children: [
                    { path: "input-resep-formularium-irja", component: _Pharmacy_pages_resep_formularium_resep_formularium_irja_input_resep_formularium_irja_input_resep_formularium_irja_component__WEBPACK_IMPORTED_MODULE_4__.InputResepFormulariumIrjaComponent, data: { title: "Input Resep Formularium Rawat Jalan" } },
                ]
            },
            {
                path: "resep-formularium-irna", component: null, data: { title: "Resep Formularium IRNA" },
                children: [
                    { path: "daftar-resep-formularium-irna", component: _Pharmacy_pages_resep_formularium_resep_formularium_irna_daftar_resep_formularium_irna_daftar_resep_formularium_irna_component__WEBPACK_IMPORTED_MODULE_5__.DaftarResepFormulariumIrnaComponent, data: { title: "Daftar Resep Formularium Rawat Inap" } },
                    { path: "input-resep-formularium-irna", component: _Pharmacy_pages_resep_formularium_resep_formularium_irna_input_resep_formularium_input_resep_formularium_component__WEBPACK_IMPORTED_MODULE_6__.InputResepFormulariumComponent, data: { title: "Input Resep Formularium Rawat Inap" } },
                    { path: "view-resep-formularium-irna/:id/:key", component: _Pharmacy_pages_resep_formularium_resep_formularium_irna_view_resep_formularium_irna_view_resep_formularium_irna_component__WEBPACK_IMPORTED_MODULE_8__.ViewResepFormulariumIrnaComponent, data: { title: "View Resep Formularium Rawat Inap" } },
                    { path: "ubah-resep-formularium-irna/:id/:key", component: _Pharmacy_pages_resep_formularium_resep_formularium_irna_input_resep_formularium_input_resep_formularium_component__WEBPACK_IMPORTED_MODULE_6__.InputResepFormulariumComponent, data: { title: "Ubah Resep Formularium Rawat Inap" } },
                    { path: "pulang-resep-formularium-irna", component: _Pharmacy_pages_resep_formularium_resep_formularium_irna_pulang_resep_formularium_irna_pulang_resep_formularium_irna_component__WEBPACK_IMPORTED_MODULE_7__.PulangResepFormulariumIrnaComponent, data: { title: "Resep Pulang Formularium Rawat Inap" } },
                ]
            },
            {
                path: "resep-formularium-irda", component: null, data: { title: "Resep Formularium IRDA" },
                children: [
                    { path: "daftar-resep-formularium-irda", component: _Pharmacy_pages_resep_formularium_resep_formularium_irda_daftar_resep_formularium_irda_daftar_resep_formularium_irda_component__WEBPACK_IMPORTED_MODULE_0__.DaftarResepFormulariumIrdaComponent, data: { title: "Daftar Resep Formularium Rawat Darurat" } },
                    { path: "input-resep-formularium-irda", component: _Pharmacy_pages_resep_formularium_resep_formularium_irda_input_resep_formularium_irda_input_resep_formularium_irda_component__WEBPACK_IMPORTED_MODULE_1__.InputResepFormulariumIrdaComponent, data: { title: "Input Resep Formularium Rawat Darurat" } },
                    { path: "view-resep-formularium-irda/:id/:key", component: _Pharmacy_pages_resep_formularium_resep_formularium_irda_view_resep_formularium_irda_view_resep_formularium_irda_component__WEBPACK_IMPORTED_MODULE_3__.ViewResepFormulariumIrdaComponent, data: { title: "View Resep Formularium Rawat Darurat" } },
                    { path: "ubah-resep-formularium-irda/:id/:key", component: _Pharmacy_pages_resep_formularium_resep_formularium_irda_input_resep_formularium_irda_input_resep_formularium_irda_component__WEBPACK_IMPORTED_MODULE_1__.InputResepFormulariumIrdaComponent, data: { title: "Ubah Resep Formularium Rawat Darurat" } },
                    { path: "pulang-resep-formularium-irda", component: _Pharmacy_pages_resep_formularium_resep_formularium_irda_pulang_resep_formularium_irda_pulang_resep_formularium_irda_component__WEBPACK_IMPORTED_MODULE_2__.PulangResepFormulariumIrdaComponent, data: { title: "Resep Pulang Formularium Rawat Darurat" } },
                ]
            },
            {
                path: "alergi", component: _pages_alergi_alergi_component__WEBPACK_IMPORTED_MODULE_10__.AlergiComponent, data: { title: "Alergi Pasien" },
            },
            {
                path: "vital-sign", component: _pages_vital_sign_vital_sign_component__WEBPACK_IMPORTED_MODULE_32__.VitalSignComponent, data: { title: "Vital Sign Pasien" },
            },
            {
                path: "surat-perintah-mondok", component: _pages_surat_perintah_mondok_surat_perintah_mondok_component__WEBPACK_IMPORTED_MODULE_31__.SuratPerintahMondokComponent, data: { title: "Surat Perintah Mondok" },
            },
        ]
    }
];
class DashboarDokterRoutingModule {
}
DashboarDokterRoutingModule.ɵfac = function DashboarDokterRoutingModule_Factory(t) { return new (t || DashboarDokterRoutingModule)(); };
DashboarDokterRoutingModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_33__["ɵɵdefineNgModule"]({ type: DashboarDokterRoutingModule });
DashboarDokterRoutingModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_33__["ɵɵdefineInjector"]({ imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_34__.RouterModule.forChild(dashboarDokterRoutes)], _angular_router__WEBPACK_IMPORTED_MODULE_34__.RouterModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_33__["ɵɵsetNgModuleScope"](DashboarDokterRoutingModule, { imports: [_angular_router__WEBPACK_IMPORTED_MODULE_34__.RouterModule], exports: [_angular_router__WEBPACK_IMPORTED_MODULE_34__.RouterModule] }); })();


/***/ }),

/***/ 3587:
/*!************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/dashboard-dokter.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DashboardDokterComponent": () => (/* binding */ DashboardDokterComponent)
/* harmony export */ });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ 45435);
/* harmony import */ var _core_components_sidebar_sidebar_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/components/sidebar/sidebar.component */ 10361);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/services/utility.service */ 26966);
/* harmony import */ var _shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/services/navigation.service */ 35908);
/* harmony import */ var _shared_services_notification_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shared/services/notification.service */ 49086);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./services/dashboard-dokter.service */ 27410);
/* harmony import */ var _core_components_navbar_navbar_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/components/navbar/navbar.component */ 35610);
/* harmony import */ var _components_informasi_pasien_informasi_pasien_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/informasi-pasien/informasi-pasien.component */ 75117);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ 38583);














const _c0 = ["TopMenuComponent"];
class DashboardDokterComponent {
    constructor(router, 
    // private socket: Socket,
    utilityService, activatedRoute, navigationService, notificationService, daftarPasienService, dashboardDokterService) {
        this.router = router;
        this.utilityService = utilityService;
        this.activatedRoute = activatedRoute;
        this.navigationService = navigationService;
        this.notificationService = notificationService;
        this.daftarPasienService = daftarPasienService;
        this.dashboardDokterService = dashboardDokterService;
        // ** Show Informasi Pasien
        this.ShowInformasiPasien = false;
        this.SidebarMenuDatasource = [];
        this.ToggleTopMenu = false;
        this.DashboardDokterState = false;
    }
    ngOnInit() {
        this.onCheckIsSidebarEmpty();
    }
    onClickNavbarBrand(args) {
        const type = args.type;
        this.SidebarCollapse = type === 'click' ? !this.SidebarCollapse : !this.SidebarCollapse;
    }
    // ** Ketika component Dashboard memuat component Baru
    // ** Misal ketika beralih dari Halaman Beranda ke Halaman About
    // ** Maka Dashboard Component memuat component About sebagai component Baru
    componentAdded(args) {
        this.router.events.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.filter)(event => event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_9__.NavigationEnd)).subscribe(() => {
            const routeData = this.getChild(this.activatedRoute);
            // ** Header Ribbon Hide ketika di halaman Beranda
            routeData.data.subscribe((data) => {
                if (data.title === 'Beranda Dokter' || data.title === "Daftar Pasien") {
                    this.dashboardDokterService.ShowInformasiPasien.next(true);
                }
                else {
                    this.dashboardDokterService.ShowInformasiPasien.next(false);
                }
            });
        });
    }
    getChild(activatedRoute) {
        if (activatedRoute.firstChild) {
            return this.getChild(activatedRoute.firstChild);
        }
        else {
            return activatedRoute;
        }
    }
    onCollapseSidebar() {
        this.SidebarCollapse = true;
        this.ToggleTopMenu = true;
    }
    onGetNotification() {
        // return this.socket.fromEvent('notification')
        //     .pipe(
        //         map((notify: any) => {
        //             return notify.data;
        //         })
        //     ).subscribe((_result) => {
        //         let header = 'Pemberitahuan Baru';
        //         let body = _result.Message;
        //         this.notificationService.onShowToast(header, body, { className: 'bg-primary text-light', delay: 10000 });
        //     });
    }
    onCheckIsSidebarEmpty() {
        this.navigationService.onGetActiveSidebarMenuSubject()
            .subscribe((result) => {
            if (result.length > 0) {
                setTimeout(() => {
                    this.SidebarCollapse = false;
                }, 250);
            }
        });
    }
    onClickBackToMainMenu(args) {
        console.log(args);
    }
    onTogglingTopMenu(args) {
        const sidebarSection = document.getElementById('sidebar-section');
        args === true ? sidebarSection.classList.add('hidding-top-menu') : sidebarSection.classList.remove('hidding-top-menu');
    }
    handleClickButtonSidebar(args) {
        this.dashboardDokterService.onPeriksaPasien()
            .subscribe((result) => {
            if (result) {
                this.utilityService.onShowingCustomAlert('success', `${this.daftarPasienService.ActivePasien.value.nama_pasien} Finish Periksa`, 'Kembali Ke Daftar Pasien')
                    .then((result) => {
                    this.router.navigateByUrl('Dokter/daftar-pasien');
                    if (!this.MolSidebarComponent.SidebarCollapse) {
                        this.MolSidebarComponent.SidebarCollapse = true;
                        let NavbarBrand = document.getElementById("NavbarBrand");
                        NavbarBrand.click();
                    }
                });
            }
        });
    }
}
DashboardDokterComponent.ɵfac = function DashboardDokterComponent_Factory(t) { return new (t || DashboardDokterComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_9__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_9__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_2__.NavigationService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_3__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_4__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_5__.DashboardDokterService)); };
DashboardDokterComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineComponent"]({ type: DashboardDokterComponent, selectors: [["app-dashboard-dokter"]], viewQuery: function DashboardDokterComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_core_components_sidebar_sidebar_component__WEBPACK_IMPORTED_MODULE_0__.MolSidebarComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.TopMenuComponent = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.MolSidebarComponent = _t.first);
    } }, decls: 15, vars: 10, consts: [["id", "dashboard-section"], [1, "wrapper"], [1, "row", "px-0", "mx-0"], ["id", "navbar-section", 1, "bg-white", "px-0"], [3, "onClickNavbarBrand"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "px-0"], ["id", "top-menu", 1, "bg-white"], ["id", "sidebar-section", 1, "p-0"], [3, "SidebarCollapse", "IsAdaButtonSidebar", "ButtonSidebarCaption", "ButtonSidebarIcon", "handleClickedButtonSidebar"], ["id", "content-section"], [3, "activate"]], template: function DashboardDokterComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](0, "section", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](3, "section", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](4, "atm-navbar", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("onClickNavbarBrand", function DashboardDokterComponent_Template_atm_navbar_onClickNavbarBrand_4_listener($event) { return ctx.onClickNavbarBrand($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](5, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](6, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](7, "section", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](8, "dd-informasi-pasien");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](9, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](10, "section", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](11, "mol-sidebar", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("handleClickedButtonSidebar", function DashboardDokterComponent_Template_mol_sidebar_handleClickedButtonSidebar_11_listener($event) { return ctx.handleClickButtonSidebar($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵpipe"](12, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](13, "section", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](14, "router-outlet", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("activate", function DashboardDokterComponent_Template_router_outlet_activate_14_listener($event) { return ctx.componentAdded($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵclassProp"]("collapse-sidebar", ctx.SidebarCollapse);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("SidebarCollapse", ctx.SidebarCollapse)("IsAdaButtonSidebar", _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵpipeBind1"](12, 8, ctx.navigationService.ButtonSidebarMenuState))("ButtonSidebarCaption", "Periksa Selesai")("ButtonSidebarIcon", "fa-check-double fa-sm");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵclassProp"]("expand-content", ctx.SidebarCollapse);
    } }, directives: [_core_components_navbar_navbar_component__WEBPACK_IMPORTED_MODULE_6__.AtmNavbarComponent, _components_informasi_pasien_informasi_pasien_component__WEBPACK_IMPORTED_MODULE_7__.InformasiPasienComponent, _core_components_sidebar_sidebar_component__WEBPACK_IMPORTED_MODULE_0__.MolSidebarComponent, _angular_router__WEBPACK_IMPORTED_MODULE_9__.RouterOutlet], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_11__.AsyncPipe], styles: ["section#navbar-section[_ngcontent-%COMP%] {\r\n  height: 3.5em;\r\n  max-height: 3.5em;\r\n  box-shadow: 2px 0 6px 0 #888;\r\n  transition: all 0.25s;\r\n  z-index: 3;\r\n}\r\n\r\nsection#sidebar-section[_ngcontent-%COMP%] {\r\n  width: 20%;\r\n  max-width: 20%;\r\n  height: calc(100vh - 4.5rem);\r\n  max-height: calc(100vh - 4.5rem);\r\n  z-index: 2;\r\n  box-shadow: 2px 0 2px -2px #888;\r\n  transition: all 0.25s;\r\n  background-color: #f6f4f7;\r\n  overflow-y: auto;\r\n}\r\n\r\nsection#sidebar-section.hidding-top-menu[_ngcontent-%COMP%] {\r\n  height: calc(100vh - 4.5rem) !important;\r\n  max-height: calc(100vh - 4.5rem) !important;\r\n}\r\n\r\n.collapse-sidebar[_ngcontent-%COMP%] {\r\n  width: 7.5% !important;\r\n  max-width: 7.5% !important;\r\n  overflow-y: hidden !important;\r\n}\r\n\r\nsection#content-section[_ngcontent-%COMP%] {\r\n  width: 80%;\r\n  max-width: 80%;\r\n  height: calc(100vh - 4.5rem);\r\n  max-height: calc(100vh - 4.5rem);\r\n  transition: all 0.25s;\r\n  padding: 0.5em 0.75em;\r\n}\r\n\r\n.expand-content[_ngcontent-%COMP%] {\r\n  width: 92.5% !important;\r\n  max-width: 92.5% !important;\r\n}\r\n\r\n.ngb-toasts[_ngcontent-%COMP%] {\r\n  margin: 4em 0.5em 0.5em 0.5em !important;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  z-index: 1200;\r\n}\r\n\r\n.ngb-toasts[_ngcontent-%COMP%]    > div.toast-header[_ngcontent-%COMP%]    > button.btn-close[_ngcontent-%COMP%] {\r\n  margin-right: 0 !important;\r\n  margin-left: auto !important;\r\n}\r\n\r\n.card-router-outlet[_ngcontent-%COMP%] {\r\n  border-top: 0.25em solid #1a73e8;\r\n}\r\n\r\n@media only screen and (min-width: 992.98px) and (max-width: 1199.98px) {\r\n  section#sidebar-section[_ngcontent-%COMP%] {\r\n    width: 20%;\r\n    max-width: 20%;\r\n    height: calc(100vh - 3.5em);\r\n    max-height: calc(100vh - 3.5em);\r\n    z-index: 2;\r\n    box-shadow: 2px 0 2px -2px #888;\r\n    transition: all 0.7s;\r\n  }\r\n\r\n  .collapse-sidebar[_ngcontent-%COMP%] {\r\n    width: 8% !important;\r\n    max-width: 8% !important;\r\n  }\r\n\r\n  section#content-section[_ngcontent-%COMP%] {\r\n    width: 80%;\r\n    max-width: 80%;\r\n    height: calc(100vh - 3.5em);\r\n    max-height: calc(100vh - 3.5em);\r\n    transition: all 0.7s;\r\n    padding: 0.5em 0.75em;\r\n  }\r\n\r\n  .expand-content[_ngcontent-%COMP%] {\r\n    width: 92% !important;\r\n    max-width: 92% !important;\r\n  }\r\n}\r\n\r\n@media only screen and (min-width: 1366.98px) {\r\n  section#sidebar-section[_ngcontent-%COMP%] {\r\n    width: 15%;\r\n    max-width: 15%;\r\n    height: calc(100vh - 4.5em);\r\n    max-height: calc(100vh - 4.5em);\r\n    z-index: 2;\r\n    box-shadow: 2px 0 2px -2px #888;\r\n    transition: all 0.7s;\r\n  }\r\n\r\n  .collapse-sidebar[_ngcontent-%COMP%] {\r\n    width: 5.25% !important;\r\n    max-width: 5.25% !important;\r\n  }\r\n\r\n  section#content-section[_ngcontent-%COMP%] {\r\n    width: 85%;\r\n    max-width: 85%;\r\n    height: calc(100vh - 4.5em);\r\n    max-height: calc(100vh - 4.5em);\r\n    transition: all 0.7s;\r\n    padding: 0.5em 0.75em;\r\n  }\r\n\r\n  .expand-content[_ngcontent-%COMP%] {\r\n    width: 94.75% !important;\r\n    max-width: 94.75% !important;\r\n  }\r\n}"] });


/***/ }),

/***/ 49272:
/*!*********************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/dashboard-dokter.module.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DashboardDokterModule": () => (/* binding */ DashboardDokterModule)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shared/shared.module */ 72271);
/* harmony import */ var _dashboard_dokter_routing_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dashboard-dokter-routing.module */ 82541);
/* harmony import */ var _dashboard_dokter_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dashboard-dokter.component */ 3587);
/* harmony import */ var _components_informasi_pasien_informasi_pasien_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/informasi-pasien/informasi-pasien.component */ 75117);
/* harmony import */ var _pages_diagnosa_diagnosa_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/diagnosa/diagnosa.component */ 17874);
/* harmony import */ var _pages_radiologi_radiologi_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pages/radiologi/radiologi.component */ 45498);
/* harmony import */ var _pages_radiologi_riwayat_pemeriksaan_riwayat_pemeriksaan_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pages/radiologi/riwayat-pemeriksaan/riwayat-pemeriksaan.component */ 70581);
/* harmony import */ var _pages_radiologi_input_order_baru_input_order_baru_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pages/radiologi/input-order-baru/input-order-baru.component */ 23932);
/* harmony import */ var _pages_laboratorium_laboratorium_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./pages/laboratorium/laboratorium.component */ 72670);
/* harmony import */ var _pages_laboratorium_riwayat_pemeriksaan_riwayat_pemeriksaan_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./pages/laboratorium/riwayat-pemeriksaan/riwayat-pemeriksaan.component */ 60998);
/* harmony import */ var _pages_laboratorium_input_order_baru_input_order_baru_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./pages/laboratorium/input-order-baru/input-order-baru.component */ 59985);
/* harmony import */ var _pages_resep_resep_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./pages/resep/resep.component */ 47977);
/* harmony import */ var _pages_resep_input_resep_input_resep_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./pages/resep/input-resep/input-resep.component */ 54911);
/* harmony import */ var _pages_resep_history_resep_history_resep_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./pages/resep/history-resep/history-resep.component */ 26237);
/* harmony import */ var _pages_beranda_dokter_beranda_dokter_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./pages/beranda-dokter/beranda-dokter.component */ 71489);
/* harmony import */ var _core_core_module__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../core/core.module */ 17396);
/* harmony import */ var _pages_daftar_pasien_per_dokter_daftar_pasien_per_dokter_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./pages/daftar-pasien-per-dokter/daftar-pasien-per-dokter.component */ 34712);
/* harmony import */ var _pages_assesmen_awal_assesmen_awal_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./pages/assesmen-awal/assesmen-awal.component */ 8533);
/* harmony import */ var _components_detail_rekam_medis_detail_rekam_medis_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./components/detail-rekam-medis/detail-rekam-medis.component */ 7111);
/* harmony import */ var _pages_konsul_konsul_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./pages/konsul/konsul.component */ 30182);
/* harmony import */ var _pages_alergi_alergi_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./pages/alergi/alergi.component */ 54775);
/* harmony import */ var _pages_vital_sign_vital_sign_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./pages/vital-sign/vital-sign.component */ 97577);
/* harmony import */ var _pages_bank_darah_bank_darah_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./pages/bank-darah/bank-darah.component */ 3488);
/* harmony import */ var _pages_resep_irna_input_resep_irna_input_resep_irna_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./pages/resep-irna/input-resep-irna/input-resep-irna.component */ 55062);
/* harmony import */ var _pages_resep_irna_daftar_resep_irna_daftar_resep_irna_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./pages/resep-irna/daftar-resep-irna/daftar-resep-irna.component */ 79840);
/* harmony import */ var _pages_resep_irna_view_resep_irna_view_resep_irna_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./pages/resep-irna/view-resep-irna/view-resep-irna.component */ 5852);
/* harmony import */ var _pages_surat_perintah_mondok_surat_perintah_mondok_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./pages/surat-perintah-mondok/surat-perintah-mondok.component */ 23142);
/* harmony import */ var _pages_resep_irna_pulang_resep_irna_pulang_resep_irna_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./pages/resep-irna/pulang-resep-irna/pulang-resep-irna.component */ 25552);
/* harmony import */ var _pages_resep_irda_daftar_resep_irda_daftar_resep_irda_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./pages/resep-irda/daftar-resep-irda/daftar-resep-irda.component */ 21469);
/* harmony import */ var _pages_resep_irda_input_resep_irda_input_resep_irda_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./pages/resep-irda/input-resep-irda/input-resep-irda.component */ 63477);
/* harmony import */ var _pages_resep_irda_view_resep_irda_view_resep_irda_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./pages/resep-irda/view-resep-irda/view-resep-irda.component */ 35446);
/* harmony import */ var _pages_resep_irda_pulang_resep_irda_pulang_resep_irda_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./pages/resep-irda/pulang-resep-irda/pulang-resep-irda.component */ 91002);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @angular/core */ 37716);



































class DashboardDokterModule {
}
DashboardDokterModule.ɵfac = function DashboardDokterModule_Factory(t) { return new (t || DashboardDokterModule)(); };
DashboardDokterModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_32__["ɵɵdefineNgModule"]({ type: DashboardDokterModule });
DashboardDokterModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_32__["ɵɵdefineInjector"]({ imports: [[
            _dashboard_dokter_routing_module__WEBPACK_IMPORTED_MODULE_1__.DashboarDokterRoutingModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_33__.FormsModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_33__.ReactiveFormsModule,
            _angular_common__WEBPACK_IMPORTED_MODULE_34__.CommonModule,
            _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__.SharedModule,
            _core_core_module__WEBPACK_IMPORTED_MODULE_15__.CoreModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_32__["ɵɵsetNgModuleScope"](DashboardDokterModule, { declarations: [_dashboard_dokter_component__WEBPACK_IMPORTED_MODULE_2__.DashboardDokterComponent,
        _components_informasi_pasien_informasi_pasien_component__WEBPACK_IMPORTED_MODULE_3__.InformasiPasienComponent,
        _pages_diagnosa_diagnosa_component__WEBPACK_IMPORTED_MODULE_4__.DiagnosaComponent,
        _pages_radiologi_radiologi_component__WEBPACK_IMPORTED_MODULE_5__.RadiologiComponent,
        _pages_radiologi_riwayat_pemeriksaan_riwayat_pemeriksaan_component__WEBPACK_IMPORTED_MODULE_6__.RiwayatPemeriksaanRadComponent,
        _pages_radiologi_input_order_baru_input_order_baru_component__WEBPACK_IMPORTED_MODULE_7__.InputOrderBaruRadComponent,
        _pages_laboratorium_laboratorium_component__WEBPACK_IMPORTED_MODULE_8__.LaboratoriumComponent,
        _pages_laboratorium_riwayat_pemeriksaan_riwayat_pemeriksaan_component__WEBPACK_IMPORTED_MODULE_9__.RiwayatPemeriksaanLabComponent,
        _pages_laboratorium_input_order_baru_input_order_baru_component__WEBPACK_IMPORTED_MODULE_10__.InputOrderBaruLabComponent,
        _pages_resep_resep_component__WEBPACK_IMPORTED_MODULE_11__.ResepComponent,
        _pages_resep_input_resep_input_resep_component__WEBPACK_IMPORTED_MODULE_12__.InputResepComponent,
        _pages_resep_history_resep_history_resep_component__WEBPACK_IMPORTED_MODULE_13__.HistoryResepComponent,
        _pages_beranda_dokter_beranda_dokter_component__WEBPACK_IMPORTED_MODULE_14__.BerandaDokterComponent,
        _pages_daftar_pasien_per_dokter_daftar_pasien_per_dokter_component__WEBPACK_IMPORTED_MODULE_16__.DaftarPasienPerDokterComponent,
        _pages_assesmen_awal_assesmen_awal_component__WEBPACK_IMPORTED_MODULE_17__.AssesmenAwalComponent,
        _components_detail_rekam_medis_detail_rekam_medis_component__WEBPACK_IMPORTED_MODULE_18__.DetailRekamMedisComponent,
        _pages_konsul_konsul_component__WEBPACK_IMPORTED_MODULE_19__.KonsulComponent,
        _pages_alergi_alergi_component__WEBPACK_IMPORTED_MODULE_20__.AlergiComponent,
        _pages_vital_sign_vital_sign_component__WEBPACK_IMPORTED_MODULE_21__.VitalSignComponent,
        _pages_bank_darah_bank_darah_component__WEBPACK_IMPORTED_MODULE_22__.BankDarahComponent,
        _pages_resep_irna_input_resep_irna_input_resep_irna_component__WEBPACK_IMPORTED_MODULE_23__.InputResepIrnaComponent,
        _pages_resep_irna_daftar_resep_irna_daftar_resep_irna_component__WEBPACK_IMPORTED_MODULE_24__.DaftarResepIrnaComponent,
        _pages_resep_irna_view_resep_irna_view_resep_irna_component__WEBPACK_IMPORTED_MODULE_25__.ViewResepIrnaComponent,
        _pages_surat_perintah_mondok_surat_perintah_mondok_component__WEBPACK_IMPORTED_MODULE_26__.SuratPerintahMondokComponent,
        _pages_resep_irna_pulang_resep_irna_pulang_resep_irna_component__WEBPACK_IMPORTED_MODULE_27__.PulangResepIrnaComponent,
        _pages_resep_irda_daftar_resep_irda_daftar_resep_irda_component__WEBPACK_IMPORTED_MODULE_28__.DaftarResepIrdaComponent,
        _pages_resep_irda_input_resep_irda_input_resep_irda_component__WEBPACK_IMPORTED_MODULE_29__.InputResepIrdaComponent,
        _pages_resep_irda_view_resep_irda_view_resep_irda_component__WEBPACK_IMPORTED_MODULE_30__.ViewResepIrdaComponent,
        _pages_resep_irda_pulang_resep_irda_pulang_resep_irda_component__WEBPACK_IMPORTED_MODULE_31__.PulangResepIrdaComponent], imports: [_dashboard_dokter_routing_module__WEBPACK_IMPORTED_MODULE_1__.DashboarDokterRoutingModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_33__.FormsModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_33__.ReactiveFormsModule,
        _angular_common__WEBPACK_IMPORTED_MODULE_34__.CommonModule,
        _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__.SharedModule,
        _core_core_module__WEBPACK_IMPORTED_MODULE_15__.CoreModule], exports: [_components_informasi_pasien_informasi_pasien_component__WEBPACK_IMPORTED_MODULE_3__.InformasiPasienComponent,
        _pages_diagnosa_diagnosa_component__WEBPACK_IMPORTED_MODULE_4__.DiagnosaComponent,
        _pages_radiologi_radiologi_component__WEBPACK_IMPORTED_MODULE_5__.RadiologiComponent,
        _pages_radiologi_riwayat_pemeriksaan_riwayat_pemeriksaan_component__WEBPACK_IMPORTED_MODULE_6__.RiwayatPemeriksaanRadComponent,
        _pages_radiologi_input_order_baru_input_order_baru_component__WEBPACK_IMPORTED_MODULE_7__.InputOrderBaruRadComponent,
        _pages_laboratorium_laboratorium_component__WEBPACK_IMPORTED_MODULE_8__.LaboratoriumComponent,
        _pages_laboratorium_riwayat_pemeriksaan_riwayat_pemeriksaan_component__WEBPACK_IMPORTED_MODULE_9__.RiwayatPemeriksaanLabComponent,
        _pages_laboratorium_input_order_baru_input_order_baru_component__WEBPACK_IMPORTED_MODULE_10__.InputOrderBaruLabComponent,
        _pages_resep_resep_component__WEBPACK_IMPORTED_MODULE_11__.ResepComponent,
        _pages_resep_input_resep_input_resep_component__WEBPACK_IMPORTED_MODULE_12__.InputResepComponent,
        _pages_resep_history_resep_history_resep_component__WEBPACK_IMPORTED_MODULE_13__.HistoryResepComponent,
        _pages_beranda_dokter_beranda_dokter_component__WEBPACK_IMPORTED_MODULE_14__.BerandaDokterComponent,
        _pages_daftar_pasien_per_dokter_daftar_pasien_per_dokter_component__WEBPACK_IMPORTED_MODULE_16__.DaftarPasienPerDokterComponent,
        _pages_assesmen_awal_assesmen_awal_component__WEBPACK_IMPORTED_MODULE_17__.AssesmenAwalComponent,
        _components_detail_rekam_medis_detail_rekam_medis_component__WEBPACK_IMPORTED_MODULE_18__.DetailRekamMedisComponent,
        _pages_konsul_konsul_component__WEBPACK_IMPORTED_MODULE_19__.KonsulComponent,
        _pages_alergi_alergi_component__WEBPACK_IMPORTED_MODULE_20__.AlergiComponent,
        _pages_vital_sign_vital_sign_component__WEBPACK_IMPORTED_MODULE_21__.VitalSignComponent,
        _pages_bank_darah_bank_darah_component__WEBPACK_IMPORTED_MODULE_22__.BankDarahComponent,
        _pages_resep_irna_input_resep_irna_input_resep_irna_component__WEBPACK_IMPORTED_MODULE_23__.InputResepIrnaComponent,
        _pages_resep_irna_daftar_resep_irna_daftar_resep_irna_component__WEBPACK_IMPORTED_MODULE_24__.DaftarResepIrnaComponent,
        _pages_resep_irna_view_resep_irna_view_resep_irna_component__WEBPACK_IMPORTED_MODULE_25__.ViewResepIrnaComponent,
        _pages_surat_perintah_mondok_surat_perintah_mondok_component__WEBPACK_IMPORTED_MODULE_26__.SuratPerintahMondokComponent,
        _pages_resep_irna_pulang_resep_irna_pulang_resep_irna_component__WEBPACK_IMPORTED_MODULE_27__.PulangResepIrnaComponent,
        _pages_resep_irda_daftar_resep_irda_daftar_resep_irda_component__WEBPACK_IMPORTED_MODULE_28__.DaftarResepIrdaComponent,
        _pages_resep_irda_input_resep_irda_input_resep_irda_component__WEBPACK_IMPORTED_MODULE_29__.InputResepIrdaComponent,
        _pages_resep_irda_view_resep_irda_view_resep_irda_component__WEBPACK_IMPORTED_MODULE_30__.ViewResepIrdaComponent,
        _pages_resep_irda_pulang_resep_irda_pulang_resep_irda_component__WEBPACK_IMPORTED_MODULE_31__.PulangResepIrdaComponent] }); })();


/***/ }),

/***/ 54775:
/*!***************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/alergi/alergi.component.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_alergi_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AlergiComponent": () => (/* binding */ AlergiComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _json_alergi_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/alergi.config.json */ 77676);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var _services_alergi_alergi_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../services/alergi/alergi.service */ 37539);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 26966);
/* harmony import */ var src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/navigation.service */ 35908);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../shared/components/organism/tabs/org-tabs-component/org-tabs-component.component */ 23021);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../shared/components/organism/tabs/org-tabs-item-component/org-tabs-item-component.component */ 38499);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../shared/components/organism/tabs/org-tabs-label-component/org-tabs-label-component.component */ 9212);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../shared/components/organism/tabs/org-tabs-body-component/org-tabs-body-component.component */ 62751);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../shared/components/molecules/grid/grid/grid.component */ 88594);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 27034);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../shared/components/atoms/form/atm-label/atm-label.component */ 49130);
/* harmony import */ var _syncfusion_ej2_angular_calendars__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @syncfusion/ej2-angular-calendars */ 28219);
/* harmony import */ var _shared_components_atoms_form_atm_validators_atm_validators_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../shared/components/atoms/form/atm-validators/atm-validators.component */ 77513);



















const _c0 = ["OrgTabsRef"];
const _c1 = function () { return []; };
class AlergiComponent {
    constructor(router, formBuilder, alergiService, utilityService, navigationService, daftarPasienService) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.alergiService = alergiService;
        this.utilityService = utilityService;
        this.navigationService = navigationService;
        this.daftarPasienService = daftarPasienService;
        this.ShowTitle = true;
        /**
         * Variable untuk menentukan component input
         * @val normal,edit,detail
        */
        this.inputFieldState = 'normal';
        /**
         * Variable untuk menentukan tap berada di posisi mana
         * @value data | input
        */
        this.TabId = 'Data';
        this.Config = /*#__PURE__*/ (_json_alergi_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_alergi_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_alergi_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
        this.GridData = null;
        this.GridDataEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
        this.FormInputData = this.formBuilder.group({
            id_register: [this.daftarPasienService.ActivePasien.value.id_register, [_angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required]],
            id_alergi: [0, []],
            alergi: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required]],
            tanggal_mulai_alergi: [new Date(), [_angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required]],
        });
    }
    ngOnInit() {
        this.GridDataToolbar = [
            { text: 'Add', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-sm', id: 'add' },
            { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
            { text: 'Detail', tooltipText: 'Detail', prefixIcon: 'fas fa-info-circle fa-sm', id: 'detail' },
            'Search'
        ];
        this.GetAllData();
        if ((this.router.url).includes('Dokter')) {
            this.ShowTitle = true;
        }
    }
    ngAfterViewInit() {
        setTimeout(() => {
            this.navigationService.ButtonSidebarMenuState.next(true);
        }, 1);
    }
    handleSelectedTabId(TabId) {
        this.TabId = TabId;
        if (TabId == 'Input') {
            // this.setNewForm();
        }
        else {
            this.GetAllData();
        }
    }
    InitalizedGrid(component) {
        this.GridData = component;
    }
    handleSelectedRow(args) {
        this.SelectedData = args.data;
    }
    handleActionComplete(event) {
        // console.log(event);
    }
    handleToolbarClick(args) {
        const item = args.item.id;
        switch (item) {
            case 'add':
                this.setNewForm();
                break;
            case 'edit':
                this.setEditForm();
                break;
            case 'detail':
                this.setViewForm();
                break;
            default:
                break;
        }
    }
    handleClickButtonNav(ButtonId) {
        switch (ButtonId) {
            case 'SaveAndNew':
                this.SaveAndNew();
                break;
            case 'Clear':
                this.Clear();
                break;
            case 'Cancel':
                this.Cancel();
                break;
            default:
                break;
        }
    }
    /** Method setting input new data */
    setNewForm() {
        this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
        this.inputFieldState = 'normal';
        this.FormInputData.reset();
        this.StatusFormNew = true;
        this.ButtonNav = [
            { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            { Id: 'Clear', Captions: 'Clear', Icons1: 'fa-redo-alt' },
            { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
        ];
    }
    ;
    /** Method setting edit data */
    setEditForm() {
        this.inputFieldState = 'edit';
        this.SetFrom(this.SelectedData);
        this.StatusFormNew = false;
        this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
        this.ButtonNav = [
            { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
        ];
    }
    ;
    /** Method setting lihat data detail */
    setViewForm() {
        this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
        this.inputFieldState = 'detail';
        this.SetFrom(this.SelectedData);
        this.ButtonNav = [
            { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
        ];
    }
    ResetFrom() {
        this.id_alergi.setValue(0);
        this.alergi.setValue("");
        this.tanggal_mulai_alergi.setValue(new Date());
    }
    /** Method Untuk Mereload Data Grid */
    GetAllData() {
        this.alergiService.onGetAllAlergi(this.daftarPasienService.ActivePasien.value.id_register)
            .subscribe((result) => {
            this.GridDatasource = result.data;
        });
    }
    /** Method Untuk Mengisikan data yang ada di form */
    SetFrom(Data) {
        this.FormInputData.setValue(Data);
    }
    /** Method menyimpan | menubah data */
    SaveAndNew() {
        const Data = this.FormInputData.value;
        if (this.inputFieldState == 'normal') {
            delete Data.id_alergi;
            Data.id_register = this.daftarPasienService.ActivePasien.value.id_register;
            console.log(Data);
            this.alergiService.onPostSaveAlergi(Data)
                .subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                    .then(() => {
                    this.Cancel();
                });
            });
        }
        else {
            this.alergiService.onPutUpdateAlergi(Data)
                .subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Berhasil Ubah Data', result.message)
                    .then(() => {
                    this.Cancel();
                });
            });
        }
    }
    Clear() {
        this.ResetFrom();
    }
    Cancel() {
        this.ResetFrom();
        this.OrgTabsRef.onNavigateTabUsingTabId(0, 'Data');
        this.GetAllData();
    }
    get id_register() { return this.FormInputData.get('id_register'); }
    get id_alergi() { return this.FormInputData.get('id_alergi'); }
    get alergi() { return this.FormInputData.get('alergi'); }
    get tanggal_mulai_alergi() { return this.FormInputData.get('tanggal_mulai_alergi'); }
}
AlergiComponent.ɵfac = function AlergiComponent_Factory(t) { return new (t || AlergiComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_16__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_14__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](_services_alergi_alergi_service__WEBPACK_IMPORTED_MODULE_1__.AlergiService), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_2__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_3__.NavigationService), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_4__.DaftarPasienService)); };
AlergiComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdefineComponent"]({ type: AlergiComponent, selectors: [["app-alergi"]], viewQuery: function AlergiComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵviewQuery"](_c0, 7);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵloadQuery"]()) && (ctx.OrgTabsRef = _t.first);
    } }, decls: 23, vars: 23, consts: [[3, "ButtonNav", "ShowTitle", "onClickButtonNav"], [3, "showHeader", "onGetSelectedTabId"], ["OrgTabsRef", ""], [3, "Id"], [3, "grid-height", "grid-DataSource", "grid-paging", "grid-editSettings", "grid-lines", "grid-toolbar", "columns", "row-selected", "toolbar-click", "initialized", "action-complete"], ["GridData", ""], [1, "p-2", 3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "mb-2"], ["formControlName", "alergi", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState"], [1, "row"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "LabelCaption"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], ["formControlName", "tanggal_mulai_alergi", 3, "format"], [3, "ValidatorsCaption", "IsFormControlInvalid", "IsFormControlTouched"]], template: function AlergiComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "org-card-layout", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onClickButtonNav", function AlergiComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.handleClickButtonNav($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](1, "org-tabs", 1, 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onGetSelectedTabId", function AlergiComponent_Template_org_tabs_onGetSelectedTabId_1_listener($event) { return ctx.handleSelectedTabId($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](3, "org-tabs-item");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](4, "org-tabs-label", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](5, "Data Alergi");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](6, "org-tabs-body");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](7, "mol-grid", 4, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("row-selected", function AlergiComponent_Template_mol_grid_row_selected_7_listener($event) { return ctx.handleSelectedRow($event); })("toolbar-click", function AlergiComponent_Template_mol_grid_toolbar_click_7_listener($event) { return ctx.handleToolbarClick($event); })("initialized", function AlergiComponent_Template_mol_grid_initialized_7_listener($event) { return ctx.InitalizedGrid($event); })("action-complete", function AlergiComponent_Template_mol_grid_action_complete_7_listener($event) { return ctx.handleActionComplete($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](9, "org-tabs-item");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](10, "org-tabs-label", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](11, "Input Alergi");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](12, "org-tabs-body");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](13, "form", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](14, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](15, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](16, "mol-input-text", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](17, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](18, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](19, "atm-label", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](20, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](21, "ejs-datepicker", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](22, "atm-validators", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ButtonNav", ctx.TabId == "Input" ? ctx.ButtonNav : _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpureFunction0"](22, _c1))("ShowTitle", ctx.ShowTitle);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("showHeader", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("Id", "Data");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("grid-height", ctx.ShowTitle ? "calc(100vh - 16rem)" : "100%")("grid-DataSource", ctx.GridDatasource)("grid-paging", false)("grid-editSettings", ctx.GridDataEditSettings)("grid-lines", "Both")("grid-toolbar", ctx.GridDataToolbar)("columns", ctx.Config.GridAlergiColumns);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("Id", "Input");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("formGroup", ctx.FormInputData);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("label", "Nama Alergi")("IsFormControlInvalid", ctx.alergi.invalid)("ValidatorsCaption", "Alergi Tidak Boleh Kosong")("inputFieldState", ctx.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("LabelCaption", "Tgl. Mulai Alergi");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("format", "dd/MM/yyyy");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ValidatorsCaption", "Tgl Mulai Alergi Tidak Boleh Kosong")("IsFormControlInvalid", ctx.tanggal_mulai_alergi.invalid)("IsFormControlTouched", ctx.tanggal_mulai_alergi.touched);
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_5__.OrgCardLayoutComponent, _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_6__.OrgTabsComponentComponent, _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_7__.OrgTabsItemComponentComponent, _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_8__.OrgTabsLabelComponentComponent, _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_9__.OrgTabsBodyComponentComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_10__.MolGridComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_14__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_14__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_14__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_11__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_14__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_14__.FormControlName, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_12__.AtmLabelComponent, _syncfusion_ej2_angular_calendars__WEBPACK_IMPORTED_MODULE_17__.DatePickerComponent, _shared_components_atoms_form_atm_validators_atm_validators_component__WEBPACK_IMPORTED_MODULE_13__.AtmValidatorsComponent], styles: [""] });


/***/ }),

/***/ 8533:
/*!*****************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/assesmen-awal/assesmen-awal.component.ts ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AssesmenAwalComponent": () => (/* binding */ AssesmenAwalComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/modules/shared/services/navigation.service */ 35908);
/* harmony import */ var _services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../services/dashboard-dokter.service */ 27410);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);




class AssesmenAwalComponent {
    constructor(navigationService, dashboardDokterService) {
        this.navigationService = navigationService;
        this.dashboardDokterService = dashboardDokterService;
    }
    ngOnInit() {
        this.dashboardDokterService.onSetSidebarMenuForDashboardDokter();
        this.onSetStepperDatasource();
    }
    ngAfterViewInit() {
        setTimeout(() => {
            this.navigationService.ButtonSidebarMenuState.next(true);
        }, 1);
    }
    onSetStepperDatasource() {
        this.StepperDatasource = [
            {
                id: 1,
                tgl_riwayat_pemeriksaan: new Date('09/10/2021'),
                riwayat_penyakit: {
                    value: 'RIWAYAT PENYAKIT 1'
                },
                riwayat_penyakit_lain: {
                    value: 'RIWAYAT PENYAKIT LAIN 1'
                },
                riwayat_operasi: {
                    value: 'RIWAYAT OPERASI 1'
                },
                rekonsiliasi_obat: {
                    value: 'REKONSILIASI OBAT 1'
                },
                pemeriksaan_penunjang: {
                    value: 'PEMERIKSAAN PENUNJANG 1'
                },
                pemeriksaan_fisik: {
                    value: 'PEMERIKSAAN FISIK 1'
                },
                informasi_tambahan: {
                    value: 'INFORMASI TAMBAHAN 1'
                },
                daftar_masalah_medis: {
                    value: 'DAFTAR MASALAH MEDIS 1'
                },
            },
            {
                id: 2,
                tgl_riwayat_pemeriksaan: new Date('09/13/2021'),
                riwayat_penyakit: {
                    value: 'RIWAYAT PENYAKIT 2'
                },
                riwayat_penyakit_lain: {
                    value: 'RIWAYAT PENYAKIT LAIN 2'
                },
                riwayat_operasi: {
                    value: 'RIWAYAT OPERASI 2'
                },
                rekonsiliasi_obat: {
                    value: 'REKONSILIASI OBAT 2'
                },
                pemeriksaan_penunjang: {
                    value: 'PEMERIKSAAN PENUNJANG 2'
                },
                pemeriksaan_fisik: {
                    value: 'PEMERIKSAAN FISIK 2'
                },
                informasi_tambahan: {
                    value: 'INFORMASI TAMBAHAN 2'
                },
                daftar_masalah_medis: {
                    value: 'DAFTAR MASALAH MEDIS 2'
                },
            },
        ];
    }
}
AssesmenAwalComponent.ɵfac = function AssesmenAwalComponent_Factory(t) { return new (t || AssesmenAwalComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_0__.NavigationService), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_1__.DashboardDokterService)); };
AssesmenAwalComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: AssesmenAwalComponent, selectors: [["app-assesmen-awal"]], decls: 1, vars: 0, template: function AssesmenAwalComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](0, "org-card-layout");
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_2__.OrgCardLayoutComponent], styles: [""] });


/***/ }),

/***/ 3488:
/*!***********************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/bank-darah/bank-darah.component.ts ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_bank_darah_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BankDarahComponent": () => (/* binding */ BankDarahComponent)
/* harmony export */ });
/* harmony import */ var _json_bank_darah_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/bank-darah.config.json */ 61891);
/* harmony import */ var _api_PIS_SETUP_DATA__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../api/PIS/SETUP_DATA */ 46942);
/* harmony import */ var _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../api/DASHBOARD-DOKTER */ 51768);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 26966);
/* harmony import */ var _services_bank_darah_bank_darah_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/bank-darah/bank-darah.service */ 4380);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../shared/components/atoms/form/atm-label/atm-label.component */ 49130);
/* harmony import */ var _shared_components_organism_loockUp_org_input_look_up_org_input_look_up_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../shared/components/organism/loockUp/org-input-look-up/org-input-look-up.component */ 96053);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 8210);
/* harmony import */ var _syncfusion_ej2_angular_calendars__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @syncfusion/ej2-angular-calendars */ 28219);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../shared/components/molecules/grid/grid/grid.component */ 88594);
/* harmony import */ var _shared_components_organism_loockUp_org_look_up_checklist_org_look_up_checklist_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../shared/components/organism/loockUp/org-look-up-checklist/org-look-up-checklist.component */ 11772);














const _c0 = ["LookupDiagnosa"];
const _c1 = ["LookupKodeDokter"];
const _c2 = ["GolonganDarah"];
const _c3 = ["LookupChecklist"];
class BankDarahComponent {
    constructor(formBuilder, utilityService, bankDarahService, daftarPasienService) {
        this.formBuilder = formBuilder;
        this.utilityService = utilityService;
        this.bankDarahService = bankDarahService;
        this.daftarPasienService = daftarPasienService;
        this.Config = /*#__PURE__*/ (_json_bank_darah_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_bank_darah_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_bank_darah_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
        this.API_PIS_SETUP_DATA = _api_PIS_SETUP_DATA__WEBPACK_IMPORTED_MODULE_1__.API_SETUP_DATA;
        this.API_DASHBOARD_DOKTER = _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_2__.API_DASHBOARD_DOKTER.BANK_DARAH;
        this.GridData = null;
        this.GridBankDarahDatasource = [];
        this.GridBankDarahToolbar = [
            { text: 'Add', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-sm', id: 'add' },
            { text: 'Hapus', tooltipText: 'Hapus', prefixIcon: 'fas fa-trash-alt fa-sm', id: 'delete' },
        ];
        this.GridBankDarahRowIndex = 0;
        this.urlDiagnosa = this.API_PIS_SETUP_DATA.SETUP_ICD_DIAGNOSA.GET_ALL_DIAGNOSA_FOR_LOOKUP_ADMISI;
        this.urlDokter = this.API_PIS_SETUP_DATA.SETUP_DOKTER.POST_GET_ALL_DOKTER_FOR_LOOKUP;
        this.GolonganDarahDatasource = [
            { text: 'A+', value: 'A+' },
            { text: 'A-', value: 'A-' },
            { text: 'B+', value: 'B+' },
            { text: 'B-', value: 'B-' },
            { text: 'AB+', value: 'AB+' },
            { text: 'AB-', value: 'AB-' },
            { text: 'O+', value: 'O+' },
            { text: 'O-', value: 'O-' },
        ];
        this.GolonganDarahFields = { text: 'text', value: 'value' };
        this.UrlLookupTarifBerlaku = this.API_DASHBOARD_DOKTER.GET_TARIF_ORDER_DARAH;
    }
    ngOnInit() {
        this.FormBankDarah = this.formBuilder.group({
            id_register: [this.daftarPasienService.ActivePasien.value.id_register, []],
            id_kelas: [this.daftarPasienService.ActivePasien.value.id_kelas_rawat, []],
            kode_grup_penunjang: ["LAB", []],
            id_icd: [0, []],
            id_poli_order: [this.daftarPasienService.ActivePasien.value.id_poli, []],
            id_dokter_order: [this.daftarPasienService.ActivePasien.value.id_dokter, []],
            keterangan: ["", []],
            keterangan_sample: ["", []],
            is_order_darah: [true, []],
            master_order_darah: this.formBuilder.group({
                is_pernah_tranfusi: [false, []],
                is_hamil: [false, []],
                gol_darah: ["", []],
                tgl_diperlukan: [new Date, []],
                indikasi_transfusi: ["", []],
                catatan: ["", []],
            }),
        });
    }
    handleOpenModalBankDarah() {
        let btnBankDarah = document.getElementById('btnBankDarah');
        btnBankDarah.click();
    }
    handleSelectedDiagnosa(args) {
        this.id_icd.setValue(args.id_icd);
    }
    handleSelectedLookupTarif(args) {
        args.forEach((item) => {
            item.qty_order = 1;
        });
        this.GridBankDarahDatasource.push(...args);
        this.GridData.Grid.refresh();
    }
    InitalizedGrid(component) {
        this.GridData = component;
    }
    handleSelectedRow(args) {
        this.GridBankDarahRowIndex = args.rowIndex;
    }
    handleActionComplete(event) {
        // console.log(event);
    }
    handleToolbarClick(args) {
        const item = args.item.id;
        if (item == "add") {
            this.LookupChecklist.hanldeOpenModalLookupChecklist();
        }
        else {
            this.GridBankDarahDatasource.splice(this.GridBankDarahRowIndex, 1);
            this.GridData.Grid.refresh();
        }
    }
    handleSubmitBankDarah(FormBankDarah) {
        FormBankDarah.item_order_darah = this.GridBankDarahDatasource;
        this.bankDarahService.onPostSaveBankDarah(FormBankDarah)
            .subscribe((result) => {
            if (result) {
                this.utilityService.onShowingCustomAlert('success', 'Success', 'Order Darah Berhasil Disimpan')
                    .then(() => {
                    this.onResetFormBankDarah();
                    this.handleCloseModalBankDarah();
                });
            }
        });
    }
    onResetFormBankDarah() {
        this.id_icd.setValue(0);
        this.keterangan.setValue("");
        this.keterangan_sample.setValue("");
        this.is_pernah_tranfusi.setValue(false);
        this.is_hamil.setValue(false);
        this.gol_darah.setValue("");
        this.GolonganDarah.value = null;
        this.tgl_diperlukan.setValue(new Date());
        this.indikasi_transfusi.setValue("");
        this.catatan.setValue("");
        this.GridBankDarahDatasource = [];
        this.GridData.Grid.refresh();
    }
    handleCloseModalBankDarah() {
        let btnCloseModal = document.getElementById('btnCloseModal');
        btnCloseModal.click();
    }
    get id_register() { return this.FormBankDarah.get('id_register'); }
    get id_kelas() { return this.FormBankDarah.get('id_kelas'); }
    get kode_grup_penunjang() { return this.FormBankDarah.get('kode_grup_penunjang'); }
    get id_icd() { return this.FormBankDarah.get('id_icd'); }
    get id_poli_order() { return this.FormBankDarah.get('id_poli_order'); }
    get id_dokter_order() { return this.FormBankDarah.get('id_dokter_order'); }
    get keterangan() { return this.FormBankDarah.get('keterangan'); }
    get keterangan_sample() { return this.FormBankDarah.get('keterangan_sample'); }
    get is_order_darah() { return this.FormBankDarah.get('is_order_darah'); }
    get master_order_darah() { return this.FormBankDarah.get('master_order_darah'); }
    get is_pernah_tranfusi() { return this.FormBankDarah.get('master_order_darah.is_pernah_tranfusi'); }
    get is_hamil() { return this.FormBankDarah.get('master_order_darah.is_hamil'); }
    get gol_darah() { return this.FormBankDarah.get('master_order_darah.gol_darah'); }
    get tgl_diperlukan() { return this.FormBankDarah.get('master_order_darah.tgl_diperlukan'); }
    get indikasi_transfusi() { return this.FormBankDarah.get('master_order_darah.indikasi_transfusi'); }
    get catatan() { return this.FormBankDarah.get('master_order_darah.catatan'); }
}
BankDarahComponent.ɵfac = function BankDarahComponent_Factory(t) { return new (t || BankDarahComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_3__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_services_bank_darah_bank_darah_service__WEBPACK_IMPORTED_MODULE_4__.BankDarahService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_5__.DaftarPasienService)); };
BankDarahComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineComponent"]({ type: BankDarahComponent, selectors: [["app-bank-darah"]], viewQuery: function BankDarahComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_c1, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_c2, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_c3, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.LookupDiagnosa = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.LookupKodeDokter = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.GolonganDarah = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.LookupChecklist = _t.first);
    } }, decls: 106, vars: 44, consts: [["type", "button", "id", "btnBankDarah", "data-bs-toggle", "modal", "data-bs-target", "#modalBankDarah", "hidden", "", 1, "btn", "btn-primary"], ["id", "modalBankDarah", "aria-labelledby", "modalBankDarah", "aria-hidden", "true", 1, "modal", "fade"], [1, "modal-dialog", "modal-xl"], [1, "modal-content"], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["id", "btnCloseModal", "type", "button", "data-bs-dismiss", "modal", "aria-label", "Close", 1, "btn-close"], [1, "modal-body", "p-2"], [3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], [1, "card", "shadow-sm"], [1, "card-header", "p-2"], [1, "text-biru-muda", "mb-0"], [1, "card-body", "py-1", "px-2"], [1, "row"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "mb-2"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "LabelCaption"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], ["type", "text", "readonly", "", 1, "form-control", "form-select-sm", 3, "value"], [3, "label", "modal-title", "filter-lookup", "lookup-url", "columns", "idTitle", "onGetSelectedData"], [1, "card-header", "py-1", "px-2"], ["formGroupName", "master_order_darah", 1, "card-body", "p-2"], [1, "row", "mb-2", "align-items-center"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "pt-2"], [1, "form-check", "form-check-inline"], ["type", "radio", "name", "is_pernah_tranfusi", "id", "transfusi_sebelumnya_pernah", "formControlName", "is_pernah_tranfusi", 1, "form-check-input", 3, "value"], ["for", "transfusi_sebelumnya_pernah", 1, "form-check-label"], ["type", "radio", "name", "is_pernah_tranfusi", "id", "transfusi_sebelumnya_tidak", "formControlName", "is_pernah_tranfusi", 1, "form-check-input", 3, "value"], ["for", "transfusi_sebelumnya_tidak", 1, "form-check-label"], ["type", "radio", "name", "is_hamil", "id", "untuk_wanita_hamil", "formControlName", "is_hamil", 1, "form-check-input", 3, "value"], ["for", "untuk_wanita_hamil", 1, "form-check-label"], ["type", "radio", "name", "is_hamil", "id", "hamil_wanita_tidak", "formControlName", "is_hamil", 1, "form-check-input", 3, "value"], ["for", "hamil_wanita_tidak", 1, "form-check-label"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8", "pt-1"], ["formControlName", "gol_darah", 3, "dataSource", "fields"], ["GolonganDarah", ""], ["formControlName", "tgl_diperlukan", 3, "format"], [1, "col-lg-12", "col-md-12", "col-xs-12", "col-sm-12"], [3, "label", "divLabelClass", "divInputClass", "modal-title", "filter-lookup", "lookup-url", "columns", "idTitle", "onGetSelectedData"], [1, "row", "mb-1"], ["id", "indikasi_transfusi", "formControlName", "indikasi_transfusi", 1, "form-control", "form-select-sm"], ["id", "catatan", "formControlName", "catatan", 1, "form-control", "form-select-sm"], [3, "grid-height", "grid-DataSource", "grid-paging", "grid-lines", "grid-toolbar", "columns", "row-selected", "toolbar-click", "initialized"], ["GridData", ""], [3, "LookupTitle", "LookupUrl", "LookupFilters", "GridId", "GridColumns", "OnGetSelectedRecords"], ["LookupChecklist", ""], [1, "modal-footer", "p-1", "background-abu-muda"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-123"], ["type", "button", 1, "btn", "btn-danger", "btn-sm", "mx-2", 3, "click"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", 3, "click"]], template: function BankDarahComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](0, "button", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](5, "h5", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](6, "Bank Darah");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](7, "button", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](8, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](9, "form", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](10, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](11, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](12, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](13, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](14, "p", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](15, "Pasien");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](19, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](20, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](21, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](22, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](23, "atm-label", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](24, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](25, "input", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](26, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](27, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](28, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](29, "atm-label", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](30, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](31, "input", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](32, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](33, "org-input-look-up", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("onGetSelectedData", function BankDarahComponent_Template_org_input_look_up_onGetSelectedData_33_listener($event) { return ctx.handleSelectedDiagnosa($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](34, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](35, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](36, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](37, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](38, "p", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](39, "Data Transfusi");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](40, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](41, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](42, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](43, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](44, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](45, "div", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](46, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](47, "atm-label", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](48, "div", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](49, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](50, "input", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](51, "label", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](52, " Pernah ");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](53, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](54, "input", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](55, "label", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](56, " Tidak ");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](57, "div", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](58, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](59, "atm-label", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](60, "div", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](61, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](62, "input", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](63, "label", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](64, " Hamil ");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](65, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](66, "input", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](67, "label", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](68, " Tidak ");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](69, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](70, "div", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](71, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](72, "atm-label", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](73, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](74, "ejs-dropdownlist", 37, 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](76, "div", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](77, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](78, "atm-label", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](79, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](80, "ejs-datepicker", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](81, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](82, "div", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](83, "org-input-look-up", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("onGetSelectedData", function BankDarahComponent_Template_org_input_look_up_onGetSelectedData_83_listener($event) { return ctx.handleSelectedDiagnosa($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](84, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](85, "div", 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](86, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](87, "atm-label", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](88, "input", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](89, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](90, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](91, "atm-label", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](92, "input", 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](93, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](94, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](95, "mol-grid", 45, 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("row-selected", function BankDarahComponent_Template_mol_grid_row_selected_95_listener($event) { return ctx.handleSelectedRow($event); })("toolbar-click", function BankDarahComponent_Template_mol_grid_toolbar_click_95_listener($event) { return ctx.handleToolbarClick($event); })("initialized", function BankDarahComponent_Template_mol_grid_initialized_95_listener($event) { return ctx.InitalizedGrid($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](97, "org-look-up-checklist", 47, 48);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("OnGetSelectedRecords", function BankDarahComponent_Template_org_look_up_checklist_OnGetSelectedRecords_97_listener($event) { return ctx.handleSelectedLookupTarif($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](99, "div", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](100, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](101, "div", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](102, "button", 51);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("click", function BankDarahComponent_Template_button_click_102_listener() { return ctx.handleCloseModalBankDarah(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](103, " Tutup ");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](104, "button", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("click", function BankDarahComponent_Template_button_click_104_listener() { return ctx.handleSubmitBankDarah(ctx.FormBankDarah.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](105, " Simpan ");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("formGroup", ctx.FormBankDarah);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](14);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("LabelCaption", "No. Reg / RM");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵpropertyInterpolate2"]("value", "", ctx.daftarPasienService.ActivePasien.value.no_register, " / ", ctx.daftarPasienService.ActivePasien.value.no_rekam_medis, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("LabelCaption", "Nama Pasien");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵpropertyInterpolate"]("value", ctx.daftarPasienService.ActivePasien.value.nama_pasien);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("label", "Diagnosa")("modal-title", "Pilih Diagnosa")("filter-lookup", ctx.Config.LookupDiagnosa.filter)("lookup-url", ctx.urlDiagnosa)("columns", ctx.Config.LookupDiagnosa.columns)("idTitle", "nama_icd");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](14);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("LabelCaption", "Transfusi Sebelumnya");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("value", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("value", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("LabelCaption", "Untuk Wanita");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("value", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("value", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("LabelCaption", "Gol. Darah");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("dataSource", ctx.GolonganDarahDatasource)("fields", ctx.GolonganDarahFields);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("LabelCaption", "Tgl. Diperlukan");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("format", "dd/MM/yyyy");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("label", "Dokter Peminta")("divLabelClass", "col-lg-3")("divInputClass", "col-lg-9")("modal-title", "Data Dokter")("filter-lookup", ctx.Config.LookupDokter.filter)("lookup-url", ctx.urlDokter)("columns", ctx.Config.LookupDokter.columns)("idTitle", "full_name");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("LabelCaption", "Indikasi Transfusi");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("LabelCaption", "Catatan");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("grid-height", 110)("grid-DataSource", ctx.GridBankDarahDatasource)("grid-paging", false)("grid-lines", "Both")("grid-toolbar", ctx.GridBankDarahToolbar)("columns", ctx.Config.GridBankDarahColumns);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("LookupTitle", "Daftar Tarif Order Darah")("LookupUrl", ctx.UrlLookupTarifBerlaku)("LookupFilters", ctx.Config.LookupTarif.filter)("GridId", "LookupChecklistTarifBerlaku")("GridColumns", ctx.Config.LookupTarif.columns);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_11__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormGroupDirective, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_6__.AtmLabelComponent, _shared_components_organism_loockUp_org_input_look_up_org_input_look_up_component__WEBPACK_IMPORTED_MODULE_7__.OrgInputLookUpComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormGroupName, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.RadioControlValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormControlName, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_12__.DropDownListComponent, _syncfusion_ej2_angular_calendars__WEBPACK_IMPORTED_MODULE_13__.DatePickerComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_8__.MolGridComponent, _shared_components_organism_loockUp_org_look_up_checklist_org_look_up_checklist_component__WEBPACK_IMPORTED_MODULE_9__.OrgLookUpChecklistComponent], styles: [""] });


/***/ }),

/***/ 71489:
/*!*******************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/beranda-dokter/beranda-dokter.component.ts ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BerandaDokterComponent": () => (/* binding */ BerandaDokterComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/modules/shared/services/navigation.service */ 35908);
/* harmony import */ var src_app_modules_auth_services_authentication_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/auth/services/authentication.service */ 36250);
/* harmony import */ var _services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/dashboard-dokter.service */ 27410);
/* harmony import */ var _core_components_main_menu_single_menu_single_menu_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/components/main-menu/single-menu/single-menu.component */ 45583);






class BerandaDokterComponent {
    constructor(router, navigationService, authenticationService, dashboardDokterService) {
        this.router = router;
        this.navigationService = navigationService;
        this.authenticationService = authenticationService;
        this.dashboardDokterService = dashboardDokterService;
        this.MainMenu = { id_menu: 1, icon: 'icon-pis', caption: 'Daftar Pasien' };
    }
    ngOnInit() {
        // this.dashboardDokterService.onSetSidebarMenuForDashboardDokter();
        this.dashboardDokterService.onSetSidebarMenuTitle();
        this.UserFullName = this.authenticationService.currentUserValue.full_name;
        this.dashboardDokterService.onDestroySidebarMenuWhenNavigateToDaftarPasien();
    }
    ngAfterViewInit() {
        setTimeout(() => {
            this.navigationService.ButtonSidebarMenuState.next(false);
        }, 1);
    }
    handleClickSingleMenu(args) {
        if (args.NamaMenu == "Daftar Pasien") {
            this.router.navigateByUrl('Dokter/daftar-pasien');
        }
    }
}
BerandaDokterComponent.ɵfac = function BerandaDokterComponent_Factory(t) { return new (t || BerandaDokterComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_5__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_0__.NavigationService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_app_modules_auth_services_authentication_service__WEBPACK_IMPORTED_MODULE_1__.AuthenticationService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_2__.DashboardDokterService)); };
BerandaDokterComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({ type: BerandaDokterComponent, selectors: [["app-beranda-dokter"]], decls: 8, vars: 4, consts: [[1, "row"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "text-center", "mb-2"], [1, "font-cabin", "text-biru-tua"], [1, "font-roboto", "text-biru-muda"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "IdMenu", "NamaMenu", "IconMenu", "handleClickedSingleMenu"]], template: function BerandaDokterComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](2, "h5", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](3, " Selamat Datang Di GRAHCIS, ");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](4, "span", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](6, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](7, "atm-single-menu", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("handleClickedSingleMenu", function BerandaDokterComponent_Template_atm_single_menu_handleClickedSingleMenu_7_listener($event) { return ctx.handleClickSingleMenu($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" ", ctx.UserFullName, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("IdMenu", ctx.MainMenu.id_menu)("NamaMenu", ctx.MainMenu.caption)("IconMenu", ctx.MainMenu.icon);
    } }, directives: [_core_components_main_menu_single_menu_single_menu_component__WEBPACK_IMPORTED_MODULE_3__.AtmSingleMenuComponent], styles: [""] });


/***/ }),

/***/ 34712:
/*!***************************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/daftar-pasien-per-dokter/daftar-pasien-per-dokter.component.ts ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_GridPasienPerDokter_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DaftarPasienPerDokterComponent": () => (/* binding */ DaftarPasienPerDokterComponent)
/* harmony export */ });
/* harmony import */ var _json_GridPasienPerDokter_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/GridPasienPerDokter.config.json */ 32247);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 26966);
/* harmony import */ var src_app_modules_PIS_services_setup_data_setup_dokter_setup_dokter_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/PIS/services/setup-data/setup-dokter/setup-dokter.service */ 18614);
/* harmony import */ var src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/navigation.service */ 35908);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/dashboard-dokter.service */ 27410);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 46555);










const _c0 = ["GridIRDAComp"];
class DaftarPasienPerDokterComponent {
    constructor(router, utilityService, dokterService, navigationService, daftarPasienService, dashboardDokterService) {
        this.router = router;
        this.utilityService = utilityService;
        this.dokterService = dokterService;
        this.navigationService = navigationService;
        this.daftarPasienService = daftarPasienService;
        this.dashboardDokterService = dashboardDokterService;
        /**
         * Variable untuk menyimpan Configurasi Grid
         * @Json Config
        */
        this.GridConfig = /*#__PURE__*/ (_json_GridPasienPerDokter_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_GridPasienPerDokter_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_GridPasienPerDokter_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
        this.GridIRJA = null;
        this.GridIRJAEditSettings = { allowAdding: false, allowDeleting: false, allowEditing: false };
        this.GridIRJAToolbar = [
            { text: 'Visit', tooltipText: 'Visit', prefixIcon: 'fas fa-user-check fa-sm', id: 'visit' },
            "Search"
        ];
        this.GridIRJACommands = [
            {
                "buttonOption": {
                    "id": 'btnInfoIRJA',
                    "content": "",
                    "iconCss": "fas fa-info-circle",
                    "cssClass": 'btn btn-primary btn-sm',
                },
            }
        ];
        this.GridIRNAComp = null;
        this.GridIRNAEditSettings = { allowAdding: false, allowDeleting: false, allowEditing: false };
        this.GridIRNAToolbar = [
            { text: 'Visit', tooltipText: 'Visit', prefixIcon: 'fas fa-user-check fa-sm', id: 'visit' },
            "Search"
        ];
        this.GridIRDAEditSettings = { allowAdding: false, allowDeleting: false, allowEditing: false };
        this.GridIRDAToolbar = [
            { text: 'Visit', tooltipText: 'Visit', prefixIcon: 'fas fa-user-check fa-sm', id: 'visit' },
            "Search"
        ];
        this.JenisRawat = 'IRJA';
    }
    ngOnInit() {
        this.dashboardDokterService.JenisRawat.next(this.JenisRawat);
        this.dashboardDokterService.onSetJenisRawatForDashboardDokter();
        this.dokterService.onGetAllDokter();
        this.onGetDokterId();
        this.dashboardDokterService.onDestroySidebarMenuWhenNavigateToDaftarPasien();
    }
    ngAfterViewInit() {
        setTimeout(() => {
            this.navigationService.ButtonSidebarMenuState.next(false);
        }, 1);
    }
    onGetDokterId() {
        const UserData = JSON.parse(localStorage.getItem("UserData"));
        this.onGetPasienIRJAByDokterId(UserData.id_karyawan);
        this.onGetPasienIRNAByDokterId(UserData.id_karyawan);
        this.onGetPasienIRDAByDokterId(UserData.id_karyawan);
    }
    onGetPasienIRJAByDokterId(DokterId) {
        this.daftarPasienService.onGetAllDaftarPasienIRJA(DokterId)
            .subscribe((result) => {
            this.GridIRJADatasource = result.data;
        });
    }
    onGetPasienIRNAByDokterId(DokterId) {
        this.daftarPasienService.onGetAllDaftarPasienIRNA(DokterId)
            .subscribe((result) => {
            this.GridIRNADatasource = result.data;
        });
    }
    onGetPasienIRDAByDokterId(DokterId) {
        this.daftarPasienService.onGetAllDaftarPasienIRDA(DokterId)
            .subscribe((result) => {
            this.GridIRDADatasource = result.data;
        });
    }
    handleSelectedTabId(args) {
        this.JenisRawat = args;
        if (this.JenisRawat == 'IRNA') {
            // this.GridIRNAComp.refresh();
        }
        this.dashboardDokterService.JenisRawat.next(this.JenisRawat);
    }
    handleSelectedRowIRJA(args) {
        this.JenisRawat = 'IRJA';
        this.dashboardDokterService.JenisRawat.next(this.JenisRawat);
        this.GridIRJASelectedRow = args.data;
    }
    handleToolbarClickIRJA(args) {
        if (this.GridIRJASelectedRow) {
            switch (args.item.id) {
                case 'visit':
                    this.daftarPasienService.ActivePasien.next({});
                    this.daftarPasienService.onSetActivePasien(this.GridIRJASelectedRow);
                    this.router.navigateByUrl('Dokter/asesmen-awal');
                    break;
                default:
                    break;
            }
        }
        else {
            this.utilityService.onShowingCustomAlert('warning', 'Oops', 'Tidak Ada Data Pasien Yang Dipilih');
        }
    }
    handleInitializedIRJA(component) {
        this.GridIRJA = component;
    }
    handleClickCommandGridIRJA(args) {
        this.router.navigateByUrl('Dokter/asesmen-awal');
    }
    handleActionCompleteIRJA(args) {
    }
    handleSelectedRowIRNA(args) {
        this.JenisRawat = 'IRNA';
        this.dashboardDokterService.JenisRawat.next(this.JenisRawat);
        this.GridIRNASelectedRow = args.data;
    }
    handleToolbarClickIRNA(args) {
        if (this.GridIRNASelectedRow) {
            switch (args.item.id) {
                case 'visit':
                    this.daftarPasienService.ActivePasien.next({});
                    this.daftarPasienService.onSetActivePasien(this.GridIRNASelectedRow);
                    this.router.navigateByUrl('Dokter/asesmen-awal');
                    break;
                default:
                    break;
            }
        }
        else {
            this.utilityService.onShowingCustomAlert('warning', 'Oops', 'Tidak Ada Data Pasien Yang Dipilih');
        }
    }
    InitalizedGridIRNA(component) {
        this.GridIRNAComp = component;
    }
    handleSelectedRowIRDA(args) {
        this.JenisRawat = 'IRDA';
        this.dashboardDokterService.JenisRawat.next(this.JenisRawat);
        this.GridIRDASelectedRow = args.data;
    }
    handleToolbarClickIRDA(args) {
        if (this.GridIRDASelectedRow) {
            switch (args.item.id) {
                case 'visit':
                    this.daftarPasienService.ActivePasien.next({});
                    this.daftarPasienService.onSetActivePasien(this.GridIRDASelectedRow);
                    this.router.navigateByUrl('Dokter/asesmen-awal');
                    break;
                default:
                    break;
            }
        }
        else {
            this.utilityService.onShowingCustomAlert('warning', 'Oops', 'Tidak Ada Data Pasien Yang Dipilih');
        }
    }
}
DaftarPasienPerDokterComponent.ɵfac = function DaftarPasienPerDokterComponent_Factory(t) { return new (t || DaftarPasienPerDokterComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_8__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](src_app_modules_PIS_services_setup_data_setup_dokter_setup_dokter_service__WEBPACK_IMPORTED_MODULE_2__.SetupDokterService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_3__.NavigationService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_4__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_5__.DashboardDokterService)); };
DaftarPasienPerDokterComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({ type: DaftarPasienPerDokterComponent, selectors: [["app-daftar-pasien-per-dokter"]], viewQuery: function DaftarPasienPerDokterComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx.GridIRDAComp = _t.first);
    } }, decls: 41, vars: 167, consts: [["id", "nav-tab", "role", "tablist", 1, "nav", "nav-tabs"], ["id", "nav-home-tab", "data-bs-toggle", "tab", "data-bs-target", "#nav-home", "type", "button", "role", "tab", "aria-controls", "nav-home", "aria-selected", "true", 1, "nav-link", "active"], ["id", "nav-profile-tab", "data-bs-toggle", "tab", "data-bs-target", "#nav-profile", "type", "button", "role", "tab", "aria-controls", "nav-profile", "aria-selected", "false", 1, "nav-link"], ["id", "nav-contact-tab", "data-bs-toggle", "tab", "data-bs-target", "#nav-contact", "type", "button", "role", "tab", "aria-controls", "nav-contact", "aria-selected", "false", 1, "nav-link"], ["id", "nav-tabContent", 1, "tab-content"], ["id", "nav-home", "role", "tabpanel", "aria-labelledby", "nav-home-tab", 1, "tab-pane", "fade", "show", "active"], [3, "id", "height", "dataSource", "rowHeight", "gridLines", "allowPaging", "allowResizing", "allowFiltering", "editSettings", "toolbar", "rowSelected", "actionComplete", "commandClick", "toolbarClick"], ["GridIRJAComp", ""], [3, "width", "field", "headerText", "visible", "allowEditing", "allowSorting", "textAlign", "type", "format"], [3, "width", "field", "headerText", "visible", "allowEditing", "allowSorting", "textAlign"], ["id", "nav-profile", "role", "tabpanel", "aria-labelledby", "nav-profile-tab", 1, "tab-pane", "fade"], [3, "id", "height", "dataSource", "rowHeight", "gridLines", "allowPaging", "allowResizing", "allowFiltering", "editSettings", "toolbar", "rowSelected", "toolbarClick"], ["GridIRNAComp", ""], ["id", "nav-contact", "role", "tabpanel", "aria-labelledby", "nav-contact-tab", 1, "tab-pane", "fade"], ["GridIRDAComp", ""]], template: function DaftarPasienPerDokterComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "org-card-layout");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](1, "nav");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](2, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](3, "button", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](4, " IRJA ");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](5, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](6, " IRNA ");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](7, "button", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](8, " IRDA ");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](9, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](10, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](11, "ejs-grid", 6, 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("rowSelected", function DaftarPasienPerDokterComponent_Template_ejs_grid_rowSelected_11_listener($event) { return ctx.handleSelectedRowIRJA($event); })("actionComplete", function DaftarPasienPerDokterComponent_Template_ejs_grid_actionComplete_11_listener($event) { return ctx.handleActionCompleteIRJA($event); })("commandClick", function DaftarPasienPerDokterComponent_Template_ejs_grid_commandClick_11_listener($event) { return ctx.handleClickCommandGridIRJA($event); })("toolbarClick", function DaftarPasienPerDokterComponent_Template_ejs_grid_toolbarClick_11_listener($event) { return ctx.handleToolbarClickIRJA($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](13, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](14, "e-column", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](15, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](16, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](17, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](18, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](19, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](20, "ejs-grid", 11, 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("rowSelected", function DaftarPasienPerDokterComponent_Template_ejs_grid_rowSelected_20_listener($event) { return ctx.handleSelectedRowIRNA($event); })("toolbarClick", function DaftarPasienPerDokterComponent_Template_ejs_grid_toolbarClick_20_listener($event) { return ctx.handleToolbarClickIRNA($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](22, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](23, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](24, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](25, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](26, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](27, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](28, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](29, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](30, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](31, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](32, "ejs-grid", 11, 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("rowSelected", function DaftarPasienPerDokterComponent_Template_ejs_grid_rowSelected_32_listener($event) { return ctx.handleSelectedRowIRDA($event); })("toolbarClick", function DaftarPasienPerDokterComponent_Template_ejs_grid_toolbarClick_32_listener($event) { return ctx.handleToolbarClickIRDA($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](34, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](35, "e-column", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](36, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](37, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](38, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](39, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](40, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](11);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("id", "GridIRJA")("height", "calc(100vh - 22rem)")("dataSource", ctx.GridIRJADatasource)("rowHeight", 30)("gridLines", "Both")("allowPaging", true)("allowResizing", true)("allowFiltering", true)("editSettings", ctx.GridIRJAEditSettings)("toolbar", ctx.GridIRJAToolbar);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 100)("field", "tgl_admisi")("headerText", "TGL. MASUK")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left")("type", "Date")("format", "dd/MM/yyyy");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 80)("field", "no_rekam_medis")("headerText", "NO. RM")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 80)("field", "no_register")("headerText", "NO. REG")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 200)("field", "nama_pasien")("headerText", "NAMA PASIEN")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 100)("field", "gender")("headerText", "GENDER")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("id", "GridIRNA")("height", "calc(100vh - 22rem)")("dataSource", ctx.GridIRNADatasource)("rowHeight", 30)("gridLines", "Both")("allowPaging", true)("allowResizing", true)("allowFiltering", true)("editSettings", ctx.GridIRNAEditSettings)("toolbar", ctx.GridIRNAToolbar);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 100)("field", "jam_masuk")("headerText", "TGL. MASUK")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Center");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 80)("field", "no_rekam_medis")("headerText", "NO. RM")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 80)("field", "no_register")("headerText", "NO. REG")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 150)("field", "nama_pasien")("headerText", "NAMA PASIEN")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 60)("field", "gender")("headerText", "GENDER")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 250)("field", "nama_poli")("headerText", "POLIKLINIK")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 80)("field", "room_no")("headerText", "NO. ROOM")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 80)("field", "bed_no")("headerText", "NO. BED")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("id", "GridIRDA")("height", "calc(100vh - 22rem)")("dataSource", ctx.GridIRDADatasource)("rowHeight", 30)("gridLines", "Both")("allowPaging", true)("allowResizing", true)("allowFiltering", true)("editSettings", ctx.GridIRDAEditSettings)("toolbar", ctx.GridIRDAToolbar);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 100)("field", "tgl_admisi")("headerText", "TGL. MASUK")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left")("type", "DateTime")("format", "dd/MM/yyyy HH:mm:ss");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 80)("field", "no_rekam_medis")("headerText", "NO. RM")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 80)("field", "no_register")("headerText", "NO. REG")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 150)("field", "nama_pasien")("headerText", "NAMA PASIEN")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 60)("field", "gender")("headerText", "GENDER")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("width", 250)("field", "nama_poli")("headerText", "POLIKLINIK")("visible", true)("allowEditing", false)("allowSorting", false)("textAlign", "Left");
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_6__.OrgCardLayoutComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_9__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_9__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_9__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_9__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_9__.AggregateColumnDirective], styles: [".e-toolbar[_ngcontent-%COMP%]   .e-toolbar-item[_ngcontent-%COMP%]   .e-tbar-btn.e-btn[_ngcontent-%COMP%]   .e-icons.e-btn-icon[_ngcontent-%COMP%] {\r\n  min-height: 14px !important;\r\n}\r\n\r\nth.e-headercell[_ngcontent-%COMP%] {\r\n  background-color: rgba(0, 0, 0, 0.03);\r\n  color: black;\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  padding: 10px 0px 10px 10px !important;\r\n  height: 30px !important;\r\n}\r\n\r\n.e.grid[_ngcontent-%COMP%]   .e-headercelldiv[_ngcontent-%COMP%] {\r\n  padding-right: 10px !important;\r\n}\r\n\r\nspan.e-headertext[_ngcontent-%COMP%] {\r\n  font-size: 13px !important;\r\n}\r\n\r\ntd.e-rowcell[_ngcontent-%COMP%] {\r\n  padding: 5px 10px !important;\r\n}"] });


/***/ }),

/***/ 17874:
/*!*******************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/diagnosa/diagnosa.component.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DiagnosaComponent": () => (/* binding */ DiagnosaComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _json_diagnosa_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/diagnosa.config.json */ 74026);
/* harmony import */ var _api_PIS_SETUP_DATA__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../api/PIS/SETUP_DATA */ 46942);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-bootstrap/modal */ 63301);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 26966);
/* harmony import */ var src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/modules/shared/services/navigation.service */ 35908);
/* harmony import */ var _services_diagnosa_diagnosa_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/diagnosa/diagnosa.service */ 45918);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../services/dashboard-dokter.service */ 27410);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _shared_components_atoms_buttons_atm_button_primary_atm_button_primary_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../shared/components/atoms/buttons/atm-button-primary/atm-button-primary.component */ 43480);
/* harmony import */ var _shared_components_molecules_form_mol_input_textarea_mol_input_textarea_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../shared/components/molecules/form/mol-input-textarea/mol-input-textarea.component */ 81892);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 27034);
/* harmony import */ var _shared_components_organism_loockUp_org_input_look_up_kode_org_input_look_up_kode_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../shared/components/organism/loockUp/org-input-look-up-kode/org-input-look-up-kode.component */ 15528);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../shared/components/atoms/form/atm-label/atm-label.component */ 49130);



















const _c0 = ["modalDialogAddDiagnosa"];
const _c1 = ["LookupDiagnosa"];
function DiagnosaComponent_ul_13_Template(rf, ctx) { if (rf & 1) {
    const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "ul", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "li", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function DiagnosaComponent_ul_13_Template_li_click_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r6); const item_r4 = restoredCtx.$implicit; const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r5.onClickItemListDiagnosa(item_r4); });
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpipe"](3, "date");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r4 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpipeBind2"](3, 1, item_r4.time_inputed, "dd MMMM yyyy"), " ");
} }
function DiagnosaComponent_ng_template_22_Template(rf, ctx) { if (rf & 1) {
    const _r9 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "form", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "div", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](2, "h5", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](3, "Input Diagnosa Baru");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](4, "button", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function DiagnosaComponent_ng_template_22_Template_button_click_4_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r9); const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r8.modalRef.hide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](5, "i", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](6, "div", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](7, "mol-input-textarea", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](8, "mol-input-text", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](9, "mol-input-text", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](10, "org-input-look-up-kode", 26, 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("onGetSelectedData", function DiagnosaComponent_ng_template_22_Template_org_input_look_up_kode_onGetSelectedData_10_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r9); const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r10.handleSelectedDiagnosa($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](12, "mol-input-text", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](13, "mol-input-textarea", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](14, "div", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](15, "div", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](16, "atm-label", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](17, "div", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](18, "div", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](19, "input", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](20, "label", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](21, "Iya");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](22, "div", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](23, "input", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](24, "label", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](25, "Tidak");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](26, "div", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](27, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](28, "div", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](29, "button", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function DiagnosaComponent_ng_template_22_Template_button_click_29_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r9); const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r11.onSubmitFormAddDiagnosa(ctx_r11.FormAddDiagnosa.value); });
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](30, " Simpan ");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("formGroup", ctx_r2.FormAddDiagnosa);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Keluhan");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Subjective");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Objective");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Assesment")("modal-title", "Pilih Diagnosa")("lookup-url", ctx_r2.urlDiagnosa)("idKode", "kode_icd")("idTitle", "nama_icd")("columns", ctx_r2.Config.LookupDiagnosa.columns)("filter-lookup", ctx_r2.Config.LookupDiagnosa.filter);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Assesment (Catatan)");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Plan");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("LabelCaption", "Is Diagnosa Primer");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("value", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("value", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("disabled", ctx_r2.FormAddDiagnosa.invalid);
} }
function DiagnosaComponent_div_24_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "div", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](2, "p", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](4, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](5, "div", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](6, "textarea", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](7, "                            ");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](8, "div", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](9, "div", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](10, "p", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](11, "Komentar Oleh");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](12, "div", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](13, "p", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](14);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](15, "div", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](16, "div", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](17, "p", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](18, "Waktu Entry");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](19, "div", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](20, "p", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](21);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpipe"](22, "date");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtextInterpolate2"](" ", ctx_r3.DetailDiagnosaPasien.kode_icd, " - ", ctx_r3.DetailDiagnosaPasien.nama_icd, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpropertyInterpolate1"]("id", "", ctx_r3.DetailDiagnosaPasien.keluhan, "Textarea");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("value", ctx_r3.DetailDiagnosaPasien.keluhan);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtextInterpolate1"](" : \u00A0 ", ctx_r3.DetailDiagnosaPasien.nama_dokter, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtextInterpolate1"](" : \u00A0 ", _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpipeBind2"](22, 6, ctx_r3.DetailDiagnosaPasien.time_inputed, "dd/MM/yyyy HH:mm:ss"), " ");
} }
class DiagnosaComponent {
    constructor(router, formBuilder, modalService, utilityService, navigationService, diagnosPasienService, daftarPasienService, dashboardDokterService) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.modalService = modalService;
        this.utilityService = utilityService;
        this.navigationService = navigationService;
        this.diagnosPasienService = diagnosPasienService;
        this.daftarPasienService = daftarPasienService;
        this.dashboardDokterService = dashboardDokterService;
        this.ShowTitle = true;
        this.Config = _json_diagnosa_config_json__WEBPACK_IMPORTED_MODULE_0__;
        this.API_PIS_SETUP_DATA = _api_PIS_SETUP_DATA__WEBPACK_IMPORTED_MODULE_1__.API_SETUP_DATA;
        this.urlDiagnosa = this.API_PIS_SETUP_DATA.SETUP_ICD_DIAGNOSA.GET_ALL_DIAGNOSA_FOR_LOOKUP_ADMISI;
    }
    ngOnInit() {
        let UserData = JSON.parse(localStorage.getItem("UserData"));
        this.FormAddDiagnosa = this.formBuilder.group({
            tanggal_diagnosa: [new Date().toISOString(), []],
            is_diagnosa_primer: [false, []],
            id_register: [this.daftarPasienService.ActivePasien.value.id_register, []],
            id_dokter: [UserData.id_karyawan, []],
            keluhan: ['', []],
            id_icd: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required]],
            soap_subjective: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required]],
            soap_objective: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required]],
            soap_assesment: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required]],
            catatan: ['', []],
            soap_plan: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_15__.Validators.required]]
        });
        this.onGetAllDiagnosa();
        this.dashboardDokterService.onSetJenisRawatForDashboardDokter();
        this.dashboardDokterService.JenisRawat$
            .subscribe((result) => {
            this.JenisRawat = result;
        });
        if ((this.router.url).includes('Dokter')) {
            this.ShowTitle = true;
        }
    }
    ngAfterViewInit() {
        setTimeout(() => {
            this.navigationService.ButtonSidebarMenuState.next(true);
        }, 1);
    }
    onGetAllDiagnosa() {
        this.diagnosPasienService.handleGetAllDiagnosa()
            .subscribe((result) => {
            this.DiagnosaPasien = result.data;
        });
    }
    onClickItemListDiagnosa(item) {
        this.DetailDiagnosaPasien = item;
    }
    onClickButtonAddDiagnosa() {
        this.modalRef = this.modalService.show(this.modalDialogAddDiagnosa, Object.assign({}, { class: 'modal-lg' }));
        this.onResetFormAddDiagnosa();
    }
    onCloseModalAddDiagnosa() {
        this.modalRef.hide();
    }
    handleSelectedDiagnosa(args) {
        this.id_icd.setValue(args.id_icd || args[0].id_icd);
        this.soap_assesment.setValue(args.nama_icd || args[0].nama_icd);
    }
    onSubmitFormAddDiagnosa(FormAddDiagnosa) {
        this.diagnosPasienService.handlePostSaveDiagnosa(FormAddDiagnosa)
            .subscribe((result) => {
            if (result) {
                this.utilityService.onShowingCustomAlert('success', 'Success', 'Diagnosa Pasien Berhasil Disimpan')
                    .then(() => {
                    this.onCloseModalAddDiagnosa();
                    this.onGetAllDiagnosa();
                });
            }
        });
    }
    onResetFormAddDiagnosa() {
        this.tanggal_diagnosa.setValue(new Date().toISOString());
        this.is_diagnosa_primer.setValue(false);
        this.keluhan.setValue("");
        this.id_icd.setValue(0);
        this.soap_subjective.setValue("");
        this.soap_objective.setValue("");
        this.soap_assesment.setValue("");
        this.catatan.setValue("");
        this.soap_plan.setValue("");
    }
    get tanggal_diagnosa() { return this.FormAddDiagnosa.get("tanggal_diagnosa"); }
    get is_diagnosa_primer() { return this.FormAddDiagnosa.get("is_diagnosa_primer"); }
    get id_register() { return this.FormAddDiagnosa.get("id_register"); }
    get id_dokter() { return this.FormAddDiagnosa.get("id_dokter"); }
    get keluhan() { return this.FormAddDiagnosa.get("keluhan"); }
    get id_icd() { return this.FormAddDiagnosa.get("id_icd"); }
    get soap_subjective() { return this.FormAddDiagnosa.get("soap_subjective"); }
    get soap_objective() { return this.FormAddDiagnosa.get("soap_objective"); }
    get soap_assesment() { return this.FormAddDiagnosa.get("soap_assesment"); }
    get catatan() { return this.FormAddDiagnosa.get("catatan"); }
    get soap_plan() { return this.FormAddDiagnosa.get("soap_plan"); }
}
DiagnosaComponent.ɵfac = function DiagnosaComponent_Factory(t) { return new (t || DiagnosaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_16__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_2__.BsModalService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_3__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_4__.NavigationService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_services_diagnosa_diagnosa_service__WEBPACK_IMPORTED_MODULE_5__.DiagnosaService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_6__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_7__.DashboardDokterService)); };
DiagnosaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdefineComponent"]({ type: DiagnosaComponent, selectors: [["app-diagnosa"]], viewQuery: function DiagnosaComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c1, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.modalDialogAddDiagnosa = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.LookupDiagnosa = _t.first);
    } }, decls: 25, vars: 6, consts: [[3, "ShowTitle"], [1, "row", "pt-2"], [1, "col-lg-3", "col-md-3", "col-sm-3", "col-xs-3"], [1, "row", "mb-2"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], [1, "text-hitam-muda", "text-diagnosa"], [1, "row"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "mb-2"], [1, "text-black", "mb-0", 2, "font-size", "15px"], [1, "fas", "fa-chevron-down", "fa-xs"], ["class", "list-group border-0 shadow-sm mb-2", 4, "ngFor", "ngForOf"], [1, "col-lg-9", "col-md-9", "col-sm-9", "col-xs-9"], [3, "IsButtonBlock", "ButtonPrimaryCaption", "ButtonPrimaryIcon", "onClickButtonPrimary"], ["modalDialogAddDiagnosa", ""], ["class", "col-lg-12 col-md-12 col-sm-12 col-xs-12", 4, "ngIf"], [1, "list-group", "border-0", "shadow-sm", "mb-2"], [1, "list-group-item", "border-0", "item_diagnosa", 3, "click"], [3, "formGroup"], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body"], ["formControlName", "keluhan", 3, "label"], ["formControlName", "soap_subjective", 3, "label"], ["formControlName", "soap_objective", 3, "label"], [3, "label", "modal-title", "lookup-url", "idKode", "idTitle", "columns", "filter-lookup", "onGetSelectedData"], ["LookupDiagnosa", ""], ["formControlName", "catatan", 3, "label"], ["formControlName", "soap_plan", 3, "label"], [1, "row", "align-items-center"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "LabelCaption"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], [1, "form-check", "form-check-inline"], ["type", "radio", "name", "is_diagnosa_primer", "id", "is_diagnosa_primer_true", "formControlName", "is_diagnosa_primer", 1, "form-check-input", 3, "value"], ["for", "is_diagnosa_primer_true", 1, "form-check-label"], ["type", "radio", "name", "is_diagnosa_primer", "id", "is_diagnosa_primer_false", "formControlName", "is_diagnosa_primer", 1, "form-check-input", 3, "value"], ["for", "is_diagnosa_primer_false", 1, "form-check-label"], [1, "modal-footer", "p-2", "background-abu-muda"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-123"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", 3, "disabled", "click"], [1, "mb-2"], [1, "text-hitam-muda", "mb-0", 2, "font-size", "17px"], [1, "col-lg-5", "col-md-5", "col-sm-5", "col-xs-5"], ["rows", "2", "readonly", "", 1, "form-control", 3, "id", "value"], [1, "row", "mb-1"], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2"], [1, "text-abu-tua", "mb-0"], [1, "col-lg-10", "col-md-10", "col-sm-10", "col-xs-10"]], template: function DiagnosaComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "org-card-layout", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](5, "h5", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](6, " Riwayat Kunjungan ");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](7, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](8, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](9, "p", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](10, " Riwayat Kunjungan Pasien \u00A0 ");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](11, "i", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](12, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplate"](13, DiagnosaComponent_ul_13_Template, 4, 4, "ul", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](14, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](15, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](16, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](17, "h5", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](18, " Diagnosa Pasien ");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](19, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](20, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](21, "atm-button-primary", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("onClickButtonPrimary", function DiagnosaComponent_Template_atm_button_primary_onClickButtonPrimary_21_listener() { return ctx.onClickButtonAddDiagnosa(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplate"](22, DiagnosaComponent_ng_template_22_Template, 31, 17, "ng-template", null, 13, _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplate"](24, DiagnosaComponent_div_24_Template, 23, 9, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ShowTitle", ctx.ShowTitle);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](13);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ngForOf", ctx.DiagnosaPasien);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("IsButtonBlock", false)("ButtonPrimaryCaption", "Input Diagnosa Baru")("ButtonPrimaryIcon", "fa-plus-circle fa-sm");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ngIf", ctx.DetailDiagnosaPasien);
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_8__.OrgCardLayoutComponent, _angular_common__WEBPACK_IMPORTED_MODULE_17__.NgForOf, _shared_components_atoms_buttons_atm_button_primary_atm_button_primary_component__WEBPACK_IMPORTED_MODULE_9__.AtmButtonPrimaryComponent, _angular_common__WEBPACK_IMPORTED_MODULE_17__.NgIf, _angular_forms__WEBPACK_IMPORTED_MODULE_15__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_15__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormGroupDirective, _shared_components_molecules_form_mol_input_textarea_mol_input_textarea_component__WEBPACK_IMPORTED_MODULE_10__.MolInputTextareaComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.FormControlName, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_11__.MolInputTextComponent, _shared_components_organism_loockUp_org_input_look_up_kode_org_input_look_up_kode_component__WEBPACK_IMPORTED_MODULE_12__.OrgInputLookUpKodeComponent, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_13__.AtmLabelComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.RadioControlValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.DefaultValueAccessor], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_17__.DatePipe], styles: ["h5.text-diagnosa[_ngcontent-%COMP%] {\r\n  border-bottom: 3px solid var(--biru-muda);\r\n  width: 11rem;\r\n  padding-bottom: 0.25rem;\r\n}\r\n\r\nul.list-group.border-0.shadow-sm[_ngcontent-%COMP%] {\r\n  width: 13rem;\r\n  max-width: 13rem;\r\n}\r\n\r\nli.item_diagnosa[_ngcontent-%COMP%] {\r\n  font-size: 14px;\r\n}\r\n\r\nli.item_diagnosa[_ngcontent-%COMP%]:hover {\r\n  background-color: var(--biru-muda);\r\n  color: white;\r\n}"] });


/***/ }),

/***/ 30182:
/*!***************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/konsul/konsul.component.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "KonsulComponent": () => (/* binding */ KonsulComponent)
/* harmony export */ });
/* harmony import */ var _json_konsul_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/konsul.config.json */ 97676);
/* harmony import */ var _api_PIS_SETUP_DATA__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../api/PIS/SETUP_DATA */ 46942);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _services_konsul_konsul_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/konsul/konsul.service */ 29970);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 26966);
/* harmony import */ var src_app_modules_Billing_services_setup_data_setup_poli_setup_poli_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/modules/Billing/services/setup-data/setup-poli/setup-poli.service */ 9679);
/* harmony import */ var src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/modules/shared/services/navigation.service */ 35908);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../shared/components/molecules/grid/grid/grid.component */ 88594);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../shared/components/atoms/form/atm-label/atm-label.component */ 49130);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 8210);
/* harmony import */ var _shared_components_organism_loockUp_org_input_look_up_org_input_look_up_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../shared/components/organism/loockUp/org-input-look-up/org-input-look-up.component */ 96053);















const _c0 = ["DropdownPoli"];
const _c1 = ["LookupKodeDokter"];
class KonsulComponent {
    constructor(router, formBuilder, konsulService, utilityService, setupPoliService, navigationService, daftarPasienService) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.konsulService = konsulService;
        this.utilityService = utilityService;
        this.setupPoliService = setupPoliService;
        this.navigationService = navigationService;
        this.daftarPasienService = daftarPasienService;
        this.ShowTitle = true;
        this.Config = _json_konsul_config_json__WEBPACK_IMPORTED_MODULE_0__;
        this.API_PIS_SETUP_DATA = _api_PIS_SETUP_DATA__WEBPACK_IMPORTED_MODULE_1__.API_SETUP_DATA;
        this.DropdownPoliDatasource = [];
        this.DropdownPoliFields = { text: 'nama_poli', value: 'id_poli' };
        this.urlDokter = "";
        this.GridDaftarKonsulToolbar = [
            { text: 'Konsul Pasien', tooltipText: 'Konsul Pasien', prefixIcon: 'fas fa-user-edit fa-sm', id: 'konsul_pasien' },
            "Search"
        ];
        this.GridDaftarKonsulDataSource = [];
    }
    ngOnInit() {
        this.FormKonsulPasien = this.formBuilder.group({
            id_register: [this.daftarPasienService.ActivePasien.value.id_register, []],
            id_dokter_asal: [this.daftarPasienService.ActivePasien.value.id_dokter, []],
            id_jadwal_dokter: [0, []],
            id_poli: [0, []],
            id_dokter_pemeriksa: [0, []],
            catatan_konsul: ["", []],
        });
        this.onGetAllPoliklinik();
        this.onGetAllRiwayatKonsul(this.daftarPasienService.ActivePasien.value.id_dokter);
        if ((this.router.url).includes('Dokter')) {
            this.ShowTitle = true;
        }
    }
    ngAfterViewInit() {
        setTimeout(() => {
            this.navigationService.ButtonSidebarMenuState.next(true);
        }, 1);
    }
    onGetAllRiwayatKonsul(DokterId) {
        this.konsulService.onGetAllRiwayatKonsul(DokterId)
            .subscribe((result) => {
            this.GridDaftarKonsulDataSource = result.data;
        });
    }
    onGetAllPoliklinik() {
        this.setupPoliService.onGetAll()
            .subscribe((result) => {
            this.DropdownPoliDatasource = result.data;
        });
    }
    onToolbarClick(args) {
        let id = args.item.id;
        switch (id) {
            case 'konsul_pasien':
                this.handleOpenModalKonsulPasien();
                break;
            default:
                break;
        }
    }
    onRowSelected(args) {
    }
    handleOpenModalKonsulPasien() {
        let btnKonsul = document.getElementById('btnKonsul');
        btnKonsul.click();
        this.onResetFormKonsulPasien();
    }
    handleChangePoli(args) {
        if (args) {
            this.id_poli.setValue(args.itemData.id_poli);
            this.urlDokter = this.API_PIS_SETUP_DATA.SETUP_DOKTER.POST_GET_ALL_DOKTER_FOR_LOOKUP_ADMISI + this.id_poli.value;
        }
    }
    handleSelectedDokter(args) {
        this.id_jadwal_dokter.setValue(args.id_jadwal_dokter);
        this.id_dokter_pemeriksa.setValue(args.id_dokter);
    }
    handleCloseModalKonsulPasien() {
        let btnCloseModal = document.getElementById('btnCloseModal');
        btnCloseModal.click();
    }
    handleSubmitKonsulPasien(FormKonsulPasien) {
        this.konsulService.onPostSaveKonsulRawatJalan(FormKonsulPasien)
            .subscribe((result) => {
            if (result) {
                this.utilityService.onShowingCustomAlert('success', 'Success', 'Konsul Pasien Berhasil Disimpan')
                    .then(() => {
                    this.onResetFormKonsulPasien();
                    this.handleCloseModalKonsulPasien();
                });
            }
        });
    }
    onResetFormKonsulPasien() {
        this.id_jadwal_dokter.setValue(0);
        this.id_poli.setValue(0);
        this.id_dokter_pemeriksa.setValue(0);
        this.catatan_konsul.setValue("");
        this.DropdownPoli.value = null;
        document.getElementById('inputGroupfull_name').value = "";
    }
    get id_register() { return this.FormKonsulPasien.get('id_register'); }
    get id_dokter_asal() { return this.FormKonsulPasien.get('id_dokter_asal'); }
    get id_jadwal_dokter() { return this.FormKonsulPasien.get('id_jadwal_dokter'); }
    get id_poli() { return this.FormKonsulPasien.get('id_poli'); }
    get id_dokter_pemeriksa() { return this.FormKonsulPasien.get('id_dokter_pemeriksa'); }
    get catatan_konsul() { return this.FormKonsulPasien.get('catatan_konsul'); }
}
KonsulComponent.ɵfac = function KonsulComponent_Factory(t) { return new (t || KonsulComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_12__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_services_konsul_konsul_service__WEBPACK_IMPORTED_MODULE_2__.KonsulService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_3__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_app_modules_Billing_services_setup_data_setup_poli_setup_poli_service__WEBPACK_IMPORTED_MODULE_4__.SetupPoliService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_5__.NavigationService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_6__.DaftarPasienService)); };
KonsulComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: KonsulComponent, selectors: [["app-konsul"]], viewQuery: function KonsulComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c1, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.DropdownPoli = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.LookupKodeDokter = _t.first);
    } }, decls: 39, vars: 21, consts: [[3, "ShowTitle"], [1, "row"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], [3, "grid-id", "grid-height", "grid-lines", "grid-toolbar", "grid-paging", "columns", "grid-DataSource", "toolbar-click", "row-selected"], ["gridDataKonsul", ""], ["type", "button", "id", "btnKonsul", "data-bs-toggle", "modal", "data-bs-target", "#modalDialogKonsul", "hidden", "", 1, "btn", "btn-primary"], ["id", "modalDialogKonsul", "aria-labelledby", "modalDialogKonsul", "aria-hidden", "true", 1, "modal", "fade"], [1, "modal-dialog", "modal-lg"], [1, "modal-content"], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["id", "btnCloseModal", "type", "button", "data-bs-dismiss", "modal", "aria-label", "Close", 1, "btn-close"], [1, "modal-body", "p-2"], [3, "formGroup"], [1, "row", "px-0", "mx-0", "mb-2"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "mb-2"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "LabelCaption"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], ["formControlName", "id_poli", 3, "dataSource", "fields", "allowFiltering", "change"], ["DropdownPoli", ""], [3, "modal-title", "lookup-url", "idKode", "idTitle", "columns", "filter-lookup", "label", "onGetSelectedData"], ["LookupKodeDokter", ""], ["type", "text", "formControlName", "catatan_konsul", 1, "form-control", "form-select-sm"], [1, "modal-footer", "p-2", "background-abu-muda"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-123"], ["type", "button", 1, "btn", "btn-danger", "btn-sm", "mx-2", 3, "click"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", 3, "click"]], template: function KonsulComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "org-card-layout", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "mol-grid", 3, 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("toolbar-click", function KonsulComponent_Template_mol_grid_toolbar_click_3_listener($event) { return ctx.onToolbarClick($event); })("row-selected", function KonsulComponent_Template_mol_grid_row_selected_3_listener($event) { return ctx.onRowSelected($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "h5", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](11, "Konsul Pasien");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "button", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](19, "atm-label", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](20, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](21, "ejs-dropdownlist", 19, 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("change", function KonsulComponent_Template_ejs_dropdownlist_change_21_listener($event) { return ctx.handleChangePoli($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "org-input-look-up", 21, 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onGetSelectedData", function KonsulComponent_Template_org_input_look_up_onGetSelectedData_24_listener($event) { return ctx.handleSelectedDokter($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](26, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](29, "atm-label", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](30, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](31, "input", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](32, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "div", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "button", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function KonsulComponent_Template_button_click_35_listener() { return ctx.handleCloseModalKonsulPasien(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](36, " Tutup ");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](37, "button", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function KonsulComponent_Template_button_click_37_listener() { return ctx.handleSubmitKonsulPasien(ctx.FormKonsulPasien.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](38, " Simpan ");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ShowTitle", ctx.ShowTitle);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("grid-id", "GridDaftarKonsul")("grid-height", "calc(100vh - 18rem)")("grid-lines", "Both")("grid-toolbar", ctx.GridDaftarKonsulToolbar)("grid-paging", false)("columns", ctx.Config.GridDaftarOrder.columns)("grid-DataSource", ctx.GridDaftarKonsulDataSource);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.FormKonsulPasien);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("LabelCaption", "Pilih Poliklinik");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx.DropdownPoliDatasource)("fields", ctx.DropdownPoliFields)("allowFiltering", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("modal-title", "Data Dokter")("lookup-url", ctx.urlDokter)("idKode", "kode_dokter")("idTitle", "full_name")("columns", ctx.Config.LookupDokter.columns)("filter-lookup", ctx.Config.LookupDokter.filter)("label", "Pilih Dokter");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("LabelCaption", "Catatan Konsul");
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_7__.OrgCardLayoutComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_8__.MolGridComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormGroupDirective, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_9__.AtmLabelComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_14__.DropDownListComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormControlName, _shared_components_organism_loockUp_org_input_look_up_org_input_look_up_component__WEBPACK_IMPORTED_MODULE_10__.OrgInputLookUpComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.DefaultValueAccessor], styles: [""] });


/***/ }),

/***/ 59985:
/*!************************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/laboratorium/input-order-baru/input-order-baru.component.ts ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InputOrderBaruLabComponent": () => (/* binding */ InputOrderBaruLabComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _json_InputOrderBaru_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../json/InputOrderBaru.json */ 95816);
/* harmony import */ var _api_PIS_SETUP_DATA__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../api/PIS/SETUP_DATA */ 46942);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-bootstrap/modal */ 63301);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 26966);
/* harmony import */ var _services_diagnosa_diagnosa_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../services/diagnosa/diagnosa.service */ 45918);
/* harmony import */ var _services_laboratorium_laboratorium_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../services/laboratorium/laboratorium.service */ 55976);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../services/dashboard-dokter.service */ 27410);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 88594);
/* harmony import */ var _shared_components_organism_loockUp_org_look_up_org_look_up_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/organism/loockUp/org-look-up/org-look-up.component */ 35260);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-component/org-tabs-component.component */ 23021);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-item-component/org-tabs-item-component.component */ 38499);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-label-component/org-tabs-label-component.component */ 9212);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-body-component/org-tabs-body-component.component */ 62751);
/* harmony import */ var _shared_components_molecules_form_mol_input_textarea_mol_input_textarea_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-textarea/mol-input-textarea.component */ 81892);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 27034);
/* harmony import */ var _shared_components_organism_loockUp_org_input_look_up_kode_org_input_look_up_kode_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../shared/components/organism/loockUp/org-input-look-up-kode/org-input-look-up-kode.component */ 15528);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../shared/components/atoms/form/atm-label/atm-label.component */ 49130);























const _c0 = ["LookupDiagnosa"];
const _c1 = ["modalDialogAddDiagnosa"];
function InputOrderBaruLabComponent_org_tabs_2_org_tabs_item_2_div_10_Template(rf, ctx) { if (rf & 1) {
    const _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "button", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function InputOrderBaruLabComponent_org_tabs_2_org_tabs_item_2_div_10_Template_button_click_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r12); const button_r10 = restoredCtx.$implicit; const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](3); return ctx_r11.onClickTabButton(button_r10); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
} if (rf & 2) {
    const button_r10 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpropertyInterpolate1"]("id", "tab.tab_id", button_r10.kode_kelompok, "Button");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtextInterpolate1"](" ", button_r10.nama_kelompok, " ");
} }
function InputOrderBaruLabComponent_org_tabs_2_org_tabs_item_2_div_14_Template(rf, ctx) { if (rf & 1) {
    const _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "input", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("change", function InputOrderBaruLabComponent_org_tabs_2_org_tabs_item_2_div_14_Template_input_change_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r15); const check_r13 = restoredCtx.$implicit; const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](3); return ctx_r14.onChangeTabsCheckbox(check_r13, "parent"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "label", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
} if (rf & 2) {
    const check_r13 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("value", check_r13.parameter_checked)("id", check_r13.id_mapping_tarif_penunjang + "CheckParameter")("checked", check_r13.parameter_checked);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵclassProp"]("text-biru-muda", check_r13.parameter_hasil);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpropertyInterpolate1"]("for", "", check_r13.id_mapping_tarif_penunjang, "CheckParameter");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtextInterpolate1"](" ", check_r13.nama_tindakan_penunjang, " ");
} }
function InputOrderBaruLabComponent_org_tabs_2_org_tabs_item_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "org-tabs-item");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "org-tabs-label");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "p", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipe"](4, "titlecase");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "org-tabs-body");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "div", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "div", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](10, InputOrderBaruLabComponent_org_tabs_2_org_tabs_item_2_div_10_Template, 3, 2, "div", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](12, "div", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](13, "div", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](14, InputOrderBaruLabComponent_org_tabs_2_org_tabs_item_2_div_14_Template, 4, 7, "div", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
} if (rf & 2) {
    const tab_r7 = ctx.$implicit;
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipeBind1"](4, 3, tab_r7.nama_kelompok), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngForOf", tab_r7.child);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngForOf", ctx_r6.SelectedCheckbox);
} }
function InputOrderBaruLabComponent_org_tabs_2_Template(rf, ctx) { if (rf & 1) {
    const _r17 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "org-tabs", 31, 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onGetSelectedTabId", function InputOrderBaruLabComponent_org_tabs_2_Template_org_tabs_onGetSelectedTabId_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r17); const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r16.onGetSelectedTabId($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](2, InputOrderBaruLabComponent_org_tabs_2_org_tabs_item_2_Template, 15, 5, "org-tabs-item", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngForOf", ctx_r0.TabsOrderLaboratorium);
} }
function InputOrderBaruLabComponent_ng_template_14_Template(rf, ctx) { if (rf & 1) {
    const _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "form", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "h5", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](3, "Input Diagnosa Baru");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](4, "button", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function InputOrderBaruLabComponent_ng_template_14_Template_button_click_4_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r20); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r19.modalRef.hide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](5, "i", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](7, "mol-input-textarea", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](8, "mol-input-text", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](9, "mol-input-text", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](10, "org-input-look-up-kode", 55, 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onGetSelectedData", function InputOrderBaruLabComponent_ng_template_14_Template_org_input_look_up_kode_onGetSelectedData_10_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r20); const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r21.handleSelectedDiagnosa($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](12, "mol-input-text", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](13, "mol-input-textarea", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](14, "div", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](15, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](16, "atm-label", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](17, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](18, "div", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](19, "input", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](20, "label", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](21, "Iya");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](22, "div", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](23, "input", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](24, "label", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](25, "Tidak");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](26, "div", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](27, "div", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](28, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](29, "button", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function InputOrderBaruLabComponent_ng_template_14_Template_button_click_29_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r20); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r22.onSubmitFormAddDiagnosa(ctx_r22.FormAddDiagnosa.value); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](30, " Simpan ");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("formGroup", ctx_r2.FormAddDiagnosa);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "Keluhan");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "Subjective");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "Objective");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "Assesment")("modal-title", "Pilih Diagnosa")("lookup-url", ctx_r2.urlDiagnosa)("idKode", "kode_icd")("idTitle", "nama_icd")("columns", ctx_r2.Config.LookupDiagnosa.columns)("filter-lookup", ctx_r2.Config.LookupDiagnosa.filter);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "Assesment (Catatan)");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "Plan");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("LabelCaption", "Is Diagnosa Primer");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("value", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("value", false);
} }
class InputOrderBaruLabComponent {
    constructor(router, formBuilder, modalService, utilityService, diagnosPasienService, laboratoriumService, daftarPasienService, dashboardDokterService) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.modalService = modalService;
        this.utilityService = utilityService;
        this.diagnosPasienService = diagnosPasienService;
        this.laboratoriumService = laboratoriumService;
        this.daftarPasienService = daftarPasienService;
        this.dashboardDokterService = dashboardDokterService;
        this.Config = _json_InputOrderBaru_json__WEBPACK_IMPORTED_MODULE_0__;
        this.API_PIS_SETUP_DATA = _api_PIS_SETUP_DATA__WEBPACK_IMPORTED_MODULE_1__.API_SETUP_DATA;
        // ** Tabs Order Laboratorium Dummy Datasource
        this.TabsOrderLaboratorium = [];
        // ** Grid Daftar Order Properties
        this.GridDaftarOrderEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
        this.GridDaftarOrderDatasource = [];
        this.gridDaftarOrder = null;
        this.urlDiagnosa = this.API_PIS_SETUP_DATA.SETUP_ICD_DIAGNOSA.GET_ALL_DIAGNOSA_FOR_LOOKUP_ADMISI;
    }
    get width() {
        return window.innerWidth;
    }
    ;
    ngOnInit() {
        this.GridDaftarOrderColumns = [
            {
                "allowEditing": false,
                "allowSorting": false,
                "editType": "numericEdit",
                "field": "id_mapping_tarif_penunjang",
                "headerText": "ID",
                "type": "string",
                "visible": false,
                "width": 150
            },
            {
                "allowEditing": false,
                "allowSorting": false,
                "editType": "defaultEdit",
                "field": "nama_tindakan_penunjang",
                "headerText": "Order Tindakan",
                "type": "string",
                "visible": true,
                "width": 150
            },
            {
                "allowEditing": true,
                "allowSorting": false,
                "editType": "numericEdit",
                "field": "qty_order",
                "headerText": "Qty",
                "type": "number",
                "textAlign": "Right",
                "headerTextAlign": "Right",
                "format": "N0",
                "visible": true,
                "width": 70
            },
            {
                "allowEditing": false,
                "allowSorting": false,
                "editType": "defaultEdit",
                "field": "hasil",
                "headerText": "L/R",
                "visible": false,
                "width": 50,
                "textAlign": "Center",
                "headerTextAlign": "Center"
            },
            {
                "allowEditing": false,
                "allowSorting": false,
                "editType": "defaultEdit",
                "field": "polos_or_kontras",
                "headerText": "Polos / Kontras",
                "visible": false,
                "width": 50,
                "textAlign": "Center",
                "headerTextAlign": "Center"
            },
        ];
        let UserData = JSON.parse(localStorage.getItem("UserData"));
        this.FormAddDiagnosa = this.formBuilder.group({
            tanggal_diagnosa: [this.utilityService.onFormatDate(new Date()), []],
            is_diagnosa_primer: [false, []],
            id_register: [this.daftarPasienService.ActivePasien.value.id_register, []],
            id_dokter: [UserData.id_karyawan, []],
            keluhan: ['', []],
            id_icd: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required]],
            soap_subjective: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required]],
            soap_objective: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required]],
            soap_assesment: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required]],
            catatan: ['', []],
            soap_plan: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required]]
        });
        this.FormInsertOrderLab = this.formBuilder.group({
            id_register: [0, []],
            id_kelas: [0, []],
            kode_grup_penunjang: ["LAB", []],
            id_icd: [0, []],
            id_poli_order: [0, []],
            id_dokter_order: [0, []],
            keterangan: ["", []],
            keterangan_sample: ["", []],
            is_order_darah: [false, []],
        });
        // this.dashboardDokterService.onSetSidebarMenuForDashboardDokter();
        this.onGetAllIDataOrderPenunjang();
    }
    onGetAllIDataOrderPenunjang() {
        this.laboratoriumService.onGetAllOrderPenunjang()
            .subscribe((result) => {
            let data = result.data;
            let notHaveChild = [];
            let notHaveLabChild = [];
            let notHaveMappingTarif = [];
            data.forEach((item) => {
                // ** Not Have Child
                if (!item.child) {
                    notHaveChild.push(item);
                }
                // ** Have Child
                if (item.child) {
                    item.child.forEach((child) => {
                        // ** Not Have Lab Child
                        if (!child.labChild) {
                            notHaveLabChild.push(child);
                        }
                        // ** Have Lab Child
                        if (child.labChild) {
                            child.labChild.forEach((tarif) => {
                                // ** Not Have Mapping Tarif Penunjang
                                if (!tarif.id_mapping_tarif_penunjang) {
                                    notHaveMappingTarif.push(tarif);
                                }
                            });
                        }
                        ;
                    });
                }
                ;
            });
            console.log('Not Have Child', notHaveChild);
            console.log('Not Have Lab Child', notHaveLabChild);
            console.log('Not Have Mapping Tarif Penunjang', notHaveMappingTarif);
            this.TabsOrderLaboratorium = result.data;
        });
    }
    onSearchFilter(FilterPencarian) {
        this.Search = FilterPencarian;
    }
    onGetSelectedTabId(args) {
        // console.log(args);
    }
    onClickTabButton(tabs_button) {
        this.SelectedCheckbox = tabs_button.labChild;
        this.onCheckGridDaftarOrderDatasource();
    }
    onChangeTabsCheckbox(Parameter) {
        let elem = document.getElementById(Parameter.id_mapping_tarif_penunjang + "CheckParameter");
        elem.checked = elem.checked;
        if (elem.checked) {
            elem.value = "true";
            this.onAddItemToGridDaftarOrder(Parameter);
        }
        else {
            elem.value = "false";
            this.onRemoveItemFromGridDaftarOrder(Parameter);
        }
        ;
        console.log(Parameter);
    }
    onCheckGridDaftarOrderDatasource() {
        this.GridDaftarOrderDatasource.forEach((check) => {
            check.parameter_checked = true;
            let elem = document.getElementById(check.id_mapping_tarif_penunjang + "CheckParameter");
            // ** Check apakah Parent sudah di render di view
            if (elem) {
                elem.checked = true;
            }
            ;
        });
    }
    onAddItemToGridDaftarOrder(Parameter) {
        Parameter['qty_order'] = 1;
        this.GridDaftarOrderDatasource.push(Parameter);
        this.onCheckGridDaftarOrderDatasource();
        this.gridDaftarOrder.Grid.refresh();
    }
    onRemoveItemFromGridDaftarOrder(Parameter) {
        const index = this.GridDaftarOrderDatasource.map(e => e.id_mapping_tarif_penunjang).indexOf(Parameter.id_mapping_tarif_penunjang);
        this.GridDaftarOrderDatasource[index].parameter_checked = false;
        this.GridDaftarOrderDatasource.splice(index, 1);
        this.gridDaftarOrder.Grid.refresh();
    }
    onInitalizedGrid(component) {
        this.gridDaftarOrder = component;
    }
    onActionCompleteGrid(args) {
        // console.log(args);
    }
    onRowSelected(args) {
        // console.log(args);
    }
    onClickButtonAddDiagnosa() {
        this.modalRef = this.modalService.show(this.modalDialogAddDiagnosa, Object.assign({}, { class: 'modal-lg' }));
    }
    onClickPilihDiagnosa() {
        this.LookupDiagnosa.onOpenModal();
    }
    onGetSeletedLookupDiagnosa(args) {
        this.id_icd.setValue(args.id_icd);
        this.keterangan.setValue(`${args.kode_icd} - ${args.nama_icd}`);
    }
    handleSelectedDiagnosa(args) {
        this.id_icd_diagnosa.setValue(args.id_icd || args[0].id_icd);
        this.soap_assesment.setValue(args.nama_icd || args[0].nama_icd);
    }
    onSubmitFormAddDiagnosa(FormAddDiagnosa) {
        console.log(FormAddDiagnosa);
        this.modalRef.hide();
        // this.diagnosPasienService.handlePostSaveDiagnosa(FormAddDiagnosa)
        // .subscribe((result) => {
        //     if (result) {
        //         this.utilityService.onShowingCustomAlert('success', 'Success', 'Diagnosa Pasien Berhasil Disimpan')
        //             .then(() => {
        //                 this.modalRef.hide();
        //             });
        //     }
        // })
    }
    onResetFormAddDiagnosa() {
        this.tanggal_diagnosa.setValue(this.utilityService.onFormatDate(new Date()));
        this.is_diagnosa_primer.setValue(false);
        this.keluhan.setValue("");
        this.id_icd.setValue(0);
        this.soap_subjective.setValue("");
        this.soap_objective.setValue("");
        this.soap_assesment.setValue("");
        this.catatan.setValue("");
        this.soap_plan.setValue("");
    }
    onSubmitLaboratoriumPasien(FormInsertOrderLab) {
        FormInsertOrderLab.id_register = this.daftarPasienService.ActivePasien.value.id_register;
        ;
        FormInsertOrderLab.id_kelas = this.daftarPasienService.ActivePasien.value.id_kelas_rawat;
        FormInsertOrderLab.kode_grup_penunjang = "LAB";
        FormInsertOrderLab.id_poli_order = this.daftarPasienService.ActivePasien.value.id_poli;
        let UserData = JSON.parse(localStorage.getItem('UserData'));
        FormInsertOrderLab.id_dokter_order = UserData.id_karyawan;
        FormInsertOrderLab.item_order = this.GridDaftarOrderDatasource;
        this.laboratoriumService.onPostSaveOrderPenunjang(FormInsertOrderLab)
            .subscribe((result) => {
            if (result) {
                this.utilityService.onShowingCustomAlert('success', 'Success', 'Order Laboratorium Berhasil Disimpan')
                    .then(() => {
                    this.onResetFormLaboratoriumPasien();
                    setTimeout(() => {
                        this.router.navigate(['/Dokter/laboratorium/riwayat-pemeriksaan']);
                    }, 500);
                });
            }
        });
    }
    onResetFormLaboratoriumPasien() {
        this.FormInsertOrderLab.reset();
        this.id_register.setValue(0);
        this.id_kelas.setValue(0);
        this.kode_grup_penunjang.setValue("LAB");
        this.id_icd.setValue(0);
        this.id_poli_order.setValue(0);
        this.id_dokter_order.setValue(0);
        this.keterangan.setValue("");
        this.keterangan_sample.setValue("");
        this.is_order_darah.setValue(false);
    }
    get id_register() { return this.FormInsertOrderLab.get('id_register'); }
    get id_kelas() { return this.FormInsertOrderLab.get('id_kelas'); }
    get kode_grup_penunjang() { return this.FormInsertOrderLab.get('kode_grup_penunjang'); }
    get id_icd() { return this.FormInsertOrderLab.get('id_icd'); }
    get id_poli_order() { return this.FormInsertOrderLab.get('id_poli_order'); }
    get id_dokter_order() { return this.FormInsertOrderLab.get('id_dokter_order'); }
    get keterangan() { return this.FormInsertOrderLab.get('keterangan'); }
    get keterangan_sample() { return this.FormInsertOrderLab.get('keterangan_sample'); }
    get is_order_darah() { return this.FormInsertOrderLab.get('is_order_darah'); }
    get tanggal_diagnosa() { return this.FormAddDiagnosa.get("tanggal_diagnosa"); }
    get is_diagnosa_primer() { return this.FormAddDiagnosa.get("is_diagnosa_primer"); }
    get id_register_diagnosa() { return this.FormAddDiagnosa.get("id_register"); }
    get id_dokter() { return this.FormAddDiagnosa.get("id_dokter"); }
    get keluhan() { return this.FormAddDiagnosa.get("keluhan"); }
    get id_icd_diagnosa() { return this.FormAddDiagnosa.get("id_icd"); }
    get soap_subjective() { return this.FormAddDiagnosa.get("soap_subjective"); }
    get soap_objective() { return this.FormAddDiagnosa.get("soap_objective"); }
    get soap_assesment() { return this.FormAddDiagnosa.get("soap_assesment"); }
    get catatan() { return this.FormAddDiagnosa.get("catatan"); }
    get soap_plan() { return this.FormAddDiagnosa.get("soap_plan"); }
}
InputOrderBaruLabComponent.ɵfac = function InputOrderBaruLabComponent_Factory(t) { return new (t || InputOrderBaruLabComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_20__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_2__.BsModalService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_3__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_diagnosa_diagnosa_service__WEBPACK_IMPORTED_MODULE_4__.DiagnosaService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_laboratorium_laboratorium_service__WEBPACK_IMPORTED_MODULE_5__.LaboratoriumService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_6__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_7__.DashboardDokterService)); };
InputOrderBaruLabComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdefineComponent"]({ type: InputOrderBaruLabComponent, selectors: [["app-input-order-baru"]], viewQuery: function InputOrderBaruLabComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c1, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.LookupDiagnosa = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.modalDialogAddDiagnosa = _t.first);
    } }, decls: 43, vars: 12, consts: [[1, "row", "pt-2"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], [3, "onGetSelectedTabId", 4, "ngIf"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [1, "card", "border-0", "shadow-sm"], [1, "card-body", "p-2"], [3, "formGroup"], [1, "row", "mb-3", "justify-content-end"], ["hidden", "", 1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "text-start"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", 3, "click"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "text-end"], ["type", "button", 1, "btn", "btn-success", "btn-sm", 3, "click"], ["modalDialogAddDiagnosa", ""], [1, "row", "mb-2"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "mb-2"], ["for", "Keterangan", 1, "form-label"], ["type", "text", "id", "Keterangan", "rows", "2", "formControlName", "keterangan", 1, "form-control"], ["type", "text", "id", "Catatan", "formControlName", "keterangan_sample", 1, "form-control"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], [1, "card"], [1, "card-header"], [1, "text-biru-muda", "mb-0"], [1, "card-body", "p-0"], [3, "grid-id", "grid-height", "grid-lines", "grid-editSettings", "columns", "grid-DataSource", "row-selected", "action-complete", "initialized"], ["gridDaftarOrder", ""], [1, "row"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "text-end"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", "me-2", 3, "click"], ["type", "button", 1, "btn", "btn-danger", "btn-sm"], [3, "modal-title", "filter-lookup", "lookup-url", "columns", "onGetSelectedData"], ["LookupDiagnosa", ""], [3, "onGetSelectedTabId"], ["OrgTabsRef", ""], [4, "ngFor", "ngForOf"], [1, "tab-heading", "mb-0"], [1, "col-lg-5", "col-md-5", "col-sm-5", "col-xs-5"], [1, "card", "shadow-sm", "border-0"], [1, "card-body", "px-2", "py-1", "cardButtonLaboratorium"], ["class", "mb-2", 4, "ngFor", "ngForOf"], [1, "col-lg-7", "col-md-7", "col-sm-7", "col-xs-7"], [1, "card-body", "p-2", "cardButtonLaboratorium"], ["class", "form-check", 4, "ngFor", "ngForOf"], [1, "mb-2"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", 2, "width", "100%", 3, "id", "click"], [1, "form-check"], ["type", "checkbox", 1, "form-check-input", 3, "value", "id", "checked", "change"], [1, "form-check-label", 3, "for"], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body"], ["formControlName", "keluhan", 3, "label"], ["formControlName", "soap_subjective", 3, "label"], ["formControlName", "soap_objective", 3, "label"], [3, "label", "modal-title", "lookup-url", "idKode", "idTitle", "columns", "filter-lookup", "onGetSelectedData"], ["formControlName", "catatan", 3, "label"], ["formControlName", "soap_plan", 3, "label"], [1, "row", "align-items-center"], [3, "LabelCaption"], [1, "form-check", "form-check-inline"], ["type", "radio", "name", "is_diagnosa_primer", "id", "is_diagnosa_primer_true", "formControlName", "is_diagnosa_primer", 1, "form-check-input", 3, "value"], ["for", "is_diagnosa_primer_true", 1, "form-check-label"], ["type", "radio", "name", "is_diagnosa_primer", "id", "is_diagnosa_primer_false", "formControlName", "is_diagnosa_primer", 1, "form-check-input", 3, "value"], ["for", "is_diagnosa_primer_false", 1, "form-check-label"], [1, "modal-footer", "p-2", "background-abu-muda"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-123"]], template: function InputOrderBaruLabComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](2, InputOrderBaruLabComponent_org_tabs_2_Template, 3, 1, "org-tabs", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "form", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "button", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function InputOrderBaruLabComponent_Template_button_click_9_listener() { return ctx.onClickButtonAddDiagnosa(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](10, " Input Diagnosa ");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](12, "button", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function InputOrderBaruLabComponent_Template_button_click_12_listener() { return ctx.onClickPilihDiagnosa(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](13, " Pilih Diagnosa ");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](14, InputOrderBaruLabComponent_ng_template_14_Template, 31, 16, "ng-template", null, 12, _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](16, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](17, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](18, "label", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](19, "Keterangan Klinik Penderita");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](20, "textarea", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](21, "                            ");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](22, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](23, "label", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](24, "Catatan");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](25, "input", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](26, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](27, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](28, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](29, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](30, "p", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](31, " Daftar Order ");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](32, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](33, "mol-grid", 23, 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("row-selected", function InputOrderBaruLabComponent_Template_mol_grid_row_selected_33_listener($event) { return ctx.onRowSelected($event); })("action-complete", function InputOrderBaruLabComponent_Template_mol_grid_action_complete_33_listener($event) { return ctx.onActionCompleteGrid($event); })("initialized", function InputOrderBaruLabComponent_Template_mol_grid_initialized_33_listener($event) { return ctx.onInitalizedGrid($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](35, "div", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](36, "div", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](37, "button", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function InputOrderBaruLabComponent_Template_button_click_37_listener() { return ctx.onSubmitLaboratoriumPasien(ctx.FormInsertOrderLab.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](38, "Simpan");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](39, "button", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](40, "Cancel");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](41, "org-look-up", 29, 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onGetSelectedData", function InputOrderBaruLabComponent_Template_org_look_up_onGetSelectedData_41_listener($event) { return ctx.onGetSeletedLookupDiagnosa($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.TabsOrderLaboratorium.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("formGroup", ctx.FormInsertOrderLab);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](27);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("grid-id", "GridDaftarOrder")("grid-height", "calc(100vh - 34.1rem)")("grid-lines", "Both")("grid-editSettings", ctx.GridDaftarOrderEditSettings)("columns", ctx.GridDaftarOrderColumns)("grid-DataSource", ctx.GridDaftarOrderDatasource);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("modal-title", "Pilih Diagnosa")("filter-lookup", ctx.Config.LookupDiagnosa.filter)("lookup-url", ctx.urlDiagnosa)("columns", ctx.Config.LookupDiagnosa.columns);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_21__.NgIf, _angular_forms__WEBPACK_IMPORTED_MODULE_19__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_19__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroupDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormControlName, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_8__.MolGridComponent, _shared_components_organism_loockUp_org_look_up_org_look_up_component__WEBPACK_IMPORTED_MODULE_9__.OrgLookUpComponent, _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_10__.OrgTabsComponentComponent, _angular_common__WEBPACK_IMPORTED_MODULE_21__.NgForOf, _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_11__.OrgTabsItemComponentComponent, _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_12__.OrgTabsLabelComponentComponent, _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_13__.OrgTabsBodyComponentComponent, _shared_components_molecules_form_mol_input_textarea_mol_input_textarea_component__WEBPACK_IMPORTED_MODULE_14__.MolInputTextareaComponent, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_15__.MolInputTextComponent, _shared_components_organism_loockUp_org_input_look_up_kode_org_input_look_up_kode_component__WEBPACK_IMPORTED_MODULE_16__.OrgInputLookUpKodeComponent, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_17__.AtmLabelComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.RadioControlValueAccessor], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_21__.TitleCasePipe], styles: [".tab-heading[_ngcontent-%COMP%] {\r\n  font-size: 14px !important;\r\n}\r\n\r\n.cardButtonLaboratorium[_ngcontent-%COMP%] {\r\n  height: calc(100vh - 14rem);\r\n  max-height: calc(100vh - 14rem);\r\n  overflow-y: auto;\r\n}"] });


/***/ }),

/***/ 72670:
/*!***************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/laboratorium/laboratorium.component.ts ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LaboratoriumComponent": () => (/* binding */ LaboratoriumComponent)
/* harmony export */ });
/* harmony import */ var _bank_darah_bank_darah_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bank-darah/bank-darah.component */ 3488);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/navigation.service */ 35908);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);






class LaboratoriumComponent {
    constructor(router, navigationService) {
        this.router = router;
        this.navigationService = navigationService;
        this.ShowTitle = true;
        this.ButtonNav = [
            { Id: "RiwayatPemeriksaan", Icons1: "fa-history", Captions: "Riwayat Pemeriksaan" },
            { Id: "BankDarah", Icons1: "fa-hand-holding-water", Captions: "Bank Darah" },
            { Id: "InputOrderBaru", Icons1: "fa-plus-circle", Captions: "Input Order Baru" },
        ];
    }
    ngOnInit() {
        this.onClickButtonNav("RiwayatPemeriksaan");
        if ((this.router.url).includes('Dokter')) {
            this.ShowTitle = true;
        }
    }
    ngAfterViewInit() {
        setTimeout(() => {
            this.navigationService.ButtonSidebarMenuState.next(true);
        }, 1);
    }
    onClickButtonNav(args) {
        switch (args) {
            case "RiwayatPemeriksaan":
                this.router.navigate(['/Dokter/laboratorium/riwayat-pemeriksaan']);
                break;
            case "InputOrderBaru":
                this.router.navigate(['/Dokter/laboratorium/input-order-pemeriksaan']);
                break;
            case "BankDarah":
                this.BankDarah.handleOpenModalBankDarah();
                break;
            default:
                break;
        }
    }
    handleOpenModalBankDarah(args) {
    }
}
LaboratoriumComponent.ɵfac = function LaboratoriumComponent_Factory(t) { return new (t || LaboratoriumComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_4__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_1__.NavigationService)); };
LaboratoriumComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: LaboratoriumComponent, selectors: [["app-laboratorium"]], viewQuery: function LaboratoriumComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_bank_darah_bank_darah_component__WEBPACK_IMPORTED_MODULE_0__.BankDarahComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.BankDarah = _t.first);
    } }, decls: 4, vars: 2, consts: [[3, "ButtonNav", "ShowTitle", "onClickButtonNav"], ["BankDarah", ""]], template: function LaboratoriumComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "org-card-layout", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("onClickButtonNav", function LaboratoriumComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](1, "router-outlet");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](2, "app-bank-darah", null, 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav)("ShowTitle", ctx.ShowTitle);
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_2__.OrgCardLayoutComponent, _angular_router__WEBPACK_IMPORTED_MODULE_4__.RouterOutlet, _bank_darah_bank_darah_component__WEBPACK_IMPORTED_MODULE_0__.BankDarahComponent], styles: [""] });


/***/ }),

/***/ 60998:
/*!******************************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/laboratorium/riwayat-pemeriksaan/riwayat-pemeriksaan.component.ts ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_GridLaboratorium_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RiwayatPemeriksaanLabComponent": () => (/* binding */ RiwayatPemeriksaanLabComponent)
/* harmony export */ });
/* harmony import */ var _json_GridLaboratorium_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../json/GridLaboratorium.json */ 41021);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _services_laboratorium_laboratorium_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/laboratorium/laboratorium.service */ 55976);
/* harmony import */ var _services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../services/dashboard-dokter.service */ 27410);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 88594);






class RiwayatPemeriksaanLabComponent {
    constructor(daftarPasienService, laboratoriumService, dashboardDokterService) {
        this.daftarPasienService = daftarPasienService;
        this.laboratoriumService = laboratoriumService;
        this.dashboardDokterService = dashboardDokterService;
        // ** Grid Daftar Order Properties
        this.GridDaftarOrderEditSettings = { allowAdding: false, allowDeleting: false, allowEditing: false };
        this.GridDaftarOrderToolbar = ["Search"];
        this.GridDaftarOrderDataSource = [];
        this.GridDaftarOrderColumns = /*#__PURE__*/ (_json_GridLaboratorium_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_GridLaboratorium_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_GridLaboratorium_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
        // ** Grid Detail Order Properties
        this.GridDetailOrderEditSettings = { allowAdding: false, allowDeleting: false, allowEditing: false };
        this.GridDetailOrderToolbar = ["Search"];
        this.GridDetailOrderDataSource = [];
        this.GridDetailOrderColumns = /*#__PURE__*/ (_json_GridLaboratorium_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_GridLaboratorium_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_GridLaboratorium_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
    }
    get width() {
        return window.innerWidth;
    }
    ;
    ngOnInit() {
        /*  this.dashboardDokterService.onSetSidebarMenuForDashboardDokter(); */
    }
    ngAfterViewInit() {
        this.onGetRiwayatPemeriksaanLab();
    }
    onGetRiwayatPemeriksaanLab() {
        const id_register = this.daftarPasienService.ActivePasien.value.id_register;
        this.laboratoriumService.onGetRiwayatOrderLab(id_register)
            .subscribe((result) => {
            this.GridDaftarOrderDataSource = result.data;
        });
    }
    onToolbarClick(args) {
    }
    onRowSelected(args) {
        let id_order_penunjang = args.data.id_order_penunjang;
        this.laboratoriumService.onGetDetailRiwayatOrderLab(id_order_penunjang)
            .subscribe((result) => {
            this.GridDetailOrderDataSource = result.data;
        });
    }
}
RiwayatPemeriksaanLabComponent.ɵfac = function RiwayatPemeriksaanLabComponent_Factory(t) { return new (t || RiwayatPemeriksaanLabComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_1__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_services_laboratorium_laboratorium_service__WEBPACK_IMPORTED_MODULE_2__.LaboratoriumService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_3__.DashboardDokterService)); };
RiwayatPemeriksaanLabComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({ type: RiwayatPemeriksaanLabComponent, selectors: [["app-riwayat-pemeriksaan-lab"]], decls: 17, vars: 14, consts: [[1, "row", "pt-2"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "mb-2"], [1, "card"], [1, "card-header", "px-2"], [1, "text-biru-muda", "mb-0"], [1, "card-body", "p-0"], [3, "grid-id", "grid-height", "grid-lines", "grid-editSettings", "grid-toolbar", "columns", "grid-DataSource", "toolbar-click", "row-selected"], ["gridDaftarOrder", ""], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], [3, "grid-id", "grid-height", "grid-lines", "grid-editSettings", "grid-toolbar", "columns", "grid-DataSource"], ["gridDetailOrder", ""]], template: function RiwayatPemeriksaanLabComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](4, "p", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](5, "Daftar Order");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](6, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](7, "mol-grid", 6, 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("toolbar-click", function RiwayatPemeriksaanLabComponent_Template_mol_grid_toolbar_click_7_listener($event) { return ctx.onToolbarClick($event); })("row-selected", function RiwayatPemeriksaanLabComponent_Template_mol_grid_row_selected_7_listener($event) { return ctx.onRowSelected($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](9, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](10, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](11, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](12, "p", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](13, "Detail Order");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](14, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](15, "mol-grid", 9, 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("grid-id", "GridDaftarOrder")("grid-height", ctx.width >= 1400 ? "calc(100vh - 44rem)" : "calc(100vh - 34rem)")("grid-lines", "Both")("grid-editSettings", ctx.GridDaftarOrderEditSettings)("grid-toolbar", ctx.GridDaftarOrderToolbar)("columns", ctx.GridDaftarOrderColumns.GridDaftarOrder.columns)("grid-DataSource", ctx.GridDaftarOrderDataSource);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("grid-id", "GridDetailOrder")("grid-height", ctx.width >= 1400 ? "calc(100vh - 44rem)" : "calc(100vh - 34rem)")("grid-lines", "Both")("grid-editSettings", ctx.GridDetailOrderEditSettings)("grid-toolbar", ctx.GridDetailOrderToolbar)("columns", ctx.GridDetailOrderColumns.GridDetailOrder.columns)("grid-DataSource", ctx.GridDetailOrderDataSource);
    } }, directives: [_shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_4__.MolGridComponent], styles: ["#GridDaftarOrder[_ngcontent-%COMP%]    > .e-gridcontent[_ngcontent-%COMP%]    > .e-content[_ngcontent-%COMP%] {\r\n  height: calc(100vh - 35rem) !important;\r\n}\r\n\r\n@media (min-width: 1400px) {\r\n  #GridDaftarOrder[_ngcontent-%COMP%]    > .e-gridcontent[_ngcontent-%COMP%]    > .e-content[_ngcontent-%COMP%] {\r\n    height: calc(100vh - 45rem) !important;\r\n  }\r\n}"] });


/***/ }),

/***/ 23932:
/*!*********************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/radiologi/input-order-baru/input-order-baru.component.ts ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InputOrderBaruRadComponent": () => (/* binding */ InputOrderBaruRadComponent)
/* harmony export */ });
/* harmony import */ var _json_InputOrderBaru_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../json/InputOrderBaru.json */ 20863);
/* harmony import */ var _api_PIS_SETUP_DATA__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../api/PIS/SETUP_DATA */ 46942);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-bootstrap/modal */ 63301);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 26966);
/* harmony import */ var _services_radiologi_radiologi_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../services/radiologi/radiologi.service */ 11749);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../services/dashboard-dokter.service */ 27410);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 88594);
/* harmony import */ var _shared_components_organism_loockUp_org_look_up_org_look_up_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/organism/loockUp/org-look-up/org-look-up.component */ 35260);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-component/org-tabs-component.component */ 23021);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-item-component/org-tabs-item-component.component */ 38499);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-label-component/org-tabs-label-component.component */ 9212);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-body-component/org-tabs-body-component.component */ 62751);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 27034);
/* harmony import */ var _shared_components_organism_loockUp_org_input_look_up_kode_org_input_look_up_kode_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../shared/components/organism/loockUp/org-input-look-up-kode/org-input-look-up-kode.component */ 15528);
/* harmony import */ var _shared_components_molecules_form_mol_input_textarea_mol_input_textarea_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-textarea/mol-input-textarea.component */ 81892);




















const _c0 = ["LookupDiagnosa"];
const _c1 = ["modalDialogAddDiagnosa"];
function InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_9_Template(rf, ctx) { if (rf & 1) {
    const _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](0, "div", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](1, "button", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵlistener"]("click", function InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_9_Template_button_click_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵrestoreView"](_r12); const button_r10 = restoredCtx.$implicit; const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](3); return ctx_r11.onClickTabButton(button_r10); });
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
} if (rf & 2) {
    const button_r10 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵpropertyInterpolate1"]("id", "tab.tab_id", button_r10.kode_kelompok, "Button");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtextInterpolate1"](" ", button_r10.nama_kelompok, " ");
} }
function InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_div_4_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](0, "div", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](1, "input", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵlistener"]("change", function InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_div_4_div_1_Template_input_change_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵrestoreView"](_r21); const check_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](2).$implicit; const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](3); return ctx_r19.onChangeTabsCheckboxChildren(check_r13, "Left"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](2, "label", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](3, " Left ");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
} if (rf & 2) {
    const check_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](2).$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵpropertyInterpolate1"]("id", "", check_r13.id_mapping_tarif_penunjang, "Left");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("checked", check_r13.left_or_right == "L" || check_r13.left_or_right == "LR");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵpropertyInterpolate1"]("for", "", check_r13.id_mapping_tarif_penunjang, "Left");
} }
function InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_div_4_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](0, "div", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](1, "input", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵlistener"]("change", function InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_div_4_div_2_Template_input_change_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵrestoreView"](_r25); const check_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](2).$implicit; const ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](3); return ctx_r23.onChangeTabsCheckboxChildren(check_r13, "Right"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](2, "label", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](3, " Right ");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
} if (rf & 2) {
    const check_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](2).$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵpropertyInterpolate1"]("id", "", check_r13.id_mapping_tarif_penunjang, "Right");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("checked", check_r13.left_or_right == "R" || check_r13.left_or_right == "LR");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵpropertyInterpolate1"]("for", "", check_r13.id_mapping_tarif_penunjang, "Right");
} }
function InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_div_4_div_3_Template(rf, ctx) { if (rf & 1) {
    const _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](0, "div", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](1, "input", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵlistener"]("change", function InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_div_4_div_3_Template_input_change_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵrestoreView"](_r29); const check_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](2).$implicit; const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](3); return ctx_r27.onChangeTabsCheckboxChildren(check_r13, "Polos"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](2, "label", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](3, " Polos ");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
} if (rf & 2) {
    const check_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](2).$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵpropertyInterpolate1"]("id", "", check_r13.id_mapping_tarif_penunjang, "Polos");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("checked", check_r13.polos_or_kontras == "P");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵpropertyInterpolate1"]("for", "", check_r13.id_mapping_tarif_penunjang, "Polos");
} }
function InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_div_4_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r33 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](0, "div", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](1, "input", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵlistener"]("change", function InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_div_4_div_4_Template_input_change_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵrestoreView"](_r33); const check_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](2).$implicit; const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](3); return ctx_r31.onChangeTabsCheckboxChildren(check_r13, "Kontras"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](2, "label", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](3, " Kontras ");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
} if (rf & 2) {
    const check_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](2).$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵpropertyInterpolate1"]("id", "", check_r13.id_mapping_tarif_penunjang, "Kontras");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("checked", check_r13.polos_or_kontras == "K");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵpropertyInterpolate1"]("for", "", check_r13.id_mapping_tarif_penunjang, "Kontras");
} }
function InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_div_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](0, "div", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtemplate"](1, InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_div_4_div_1_Template, 4, 3, "div", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtemplate"](2, InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_div_4_div_2_Template, 4, 3, "div", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtemplate"](3, InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_div_4_div_3_Template, 4, 3, "div", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtemplate"](4, InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_div_4_div_4_Template, 4, 3, "div", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
} if (rf & 2) {
    const check_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("ngIf", check_r13.is_ada_left_right);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("ngIf", check_r13.is_ada_left_right);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("ngIf", check_r13.is_ada_polos_kontras);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("ngIf", check_r13.is_ada_polos_kontras);
} }
function InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_Template(rf, ctx) { if (rf & 1) {
    const _r37 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](0, "div", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](1, "input", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵlistener"]("change", function InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_Template_input_change_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵrestoreView"](_r37); const check_r13 = restoredCtx.$implicit; const ctx_r36 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](3); return ctx_r36.onChangeTabsCheckbox(check_r13, "parent"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](2, "label", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtemplate"](4, InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_div_4_Template, 5, 4, "div", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
} if (rf & 2) {
    const check_r13 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("value", check_r13.parameter_checked)("id", check_r13.id_mapping_tarif_penunjang + "CheckParameter")("checked", check_r13.parameter_checked);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵclassProp"]("text-biru-muda", check_r13.item_rad);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵpropertyInterpolate1"]("for", "", check_r13.id_mapping_tarif_penunjang, "CheckParameter");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtextInterpolate1"](" ", check_r13.nama_tindakan_penunjang, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("ngIf", check_r13.item_rad);
} }
function InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](0, "org-tabs-item");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](1, "org-tabs-label");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵpipe"](3, "titlecase");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](4, "org-tabs-body");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](5, "div", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](6, "div", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](7, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](8, "div", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtemplate"](9, InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_9_Template, 3, 2, "div", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](10, "div", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](11, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](12, "div", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtemplate"](13, InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_div_13_Template, 5, 8, "div", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
} if (rf & 2) {
    const tab_r7 = ctx.$implicit;
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵpipeBind1"](3, 3, tab_r7.nama_kelompok));
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("ngForOf", tab_r7.child);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("ngForOf", ctx_r6.SelectedCheckbox);
} }
function InputOrderBaruRadComponent_org_tabs_2_Template(rf, ctx) { if (rf & 1) {
    const _r39 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](0, "org-tabs", 31, 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵlistener"]("onGetSelectedTabId", function InputOrderBaruRadComponent_org_tabs_2_Template_org_tabs_onGetSelectedTabId_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵrestoreView"](_r39); const ctx_r38 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](); return ctx_r38.onGetSelectedTabId($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtemplate"](2, InputOrderBaruRadComponent_org_tabs_2_org_tabs_item_2_Template, 14, 5, "org-tabs-item", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("ngForOf", ctx_r0.TabsOrderRadiologi);
} }
function InputOrderBaruRadComponent_ng_template_14_Template(rf, ctx) { if (rf & 1) {
    const _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](0, "form", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](1, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](2, "h5", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](3, "Input Diagnosa Baru");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](4, "button", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵlistener"]("click", function InputOrderBaruRadComponent_ng_template_14_Template_button_click_4_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵrestoreView"](_r41); const ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](); return ctx_r40.modalRef.hide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelement"](5, "i", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](6, "div", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelement"](7, "mol-input-text", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelement"](8, "mol-input-text", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelement"](9, "org-input-look-up-kode", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelement"](10, "mol-input-text", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelement"](11, "mol-input-textarea", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](12, "div", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](13, "div", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](14, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](15, "button", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵlistener"]("click", function InputOrderBaruRadComponent_ng_template_14_Template_button_click_15_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵrestoreView"](_r41); const ctx_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"](); return ctx_r42.onSubmitFormAddDiagnosa(ctx_r42.FormAddDiagnosa.value); });
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](16, " Simpan ");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("formGroup", ctx_r2.FormAddDiagnosa);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("label", "Subjective");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("label", "Objective");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("label", "Assesment")("modal-title", "Pilih Diagnosa");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("label", "Assesment (Catatan)");
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("label", "Plan");
} }
class InputOrderBaruRadComponent {
    constructor(router, formBuilder, modalService, utilityService, radiologiService, daftarPasienService, dashboardDokterService) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.modalService = modalService;
        this.utilityService = utilityService;
        this.radiologiService = radiologiService;
        this.daftarPasienService = daftarPasienService;
        this.dashboardDokterService = dashboardDokterService;
        this.Config = _json_InputOrderBaru_json__WEBPACK_IMPORTED_MODULE_0__;
        this.API_PIS_SETUP_DATA = _api_PIS_SETUP_DATA__WEBPACK_IMPORTED_MODULE_1__.API_SETUP_DATA;
        // ** Tabs Order Radiologi Dummy Datasource
        this.TabsOrderRadiologi = [];
        this.urlDiagnosa = this.API_PIS_SETUP_DATA.SETUP_ICD_DIAGNOSA.GET_ALL_DIAGNOSA_FOR_LOOKUP_ADMISI;
        // ** Grid Daftar Order Properties
        this.GridDaftarOrderEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
        this.GridDaftarOrderDatasource = [];
        this.gridDaftarOrder = null;
    }
    ngOnInit() {
        this.GridDaftarOrderColumns = [
            {
                "allowEditing": false,
                "allowSorting": false,
                "editType": "numericEdit",
                "field": "id_mapping_tarif_penunjang",
                "headerText": "ID MAPPING TARIF PENUNJANG",
                "type": "number",
                "visible": false,
                "width": 150
            },
            {
                "allowEditing": false,
                "allowSorting": false,
                "editType": "numericEdit",
                "field": "id_mapping_tarif_penunjang_detail_radiologi",
                "headerText": "ID MAPPING TARIF PENUNJANG DETAIL RADIOLOGI",
                "type": "number",
                "visible": false,
                "width": 150
            },
            {
                "allowEditing": false,
                "allowSorting": false,
                "editType": "numericEdit",
                "field": "id_setup_tarif",
                "headerText": "ID SETUP TARIF ",
                "type": "number",
                "visible": false,
                "width": 150
            },
            {
                "allowEditing": false,
                "allowSorting": false,
                "editType": "numericEdit",
                "field": "nama_tindakan_penunjang",
                "headerText": "Order Tindakan",
                "type": "string",
                "visible": true,
                "width": 150
            },
            {
                "allowEditing": false,
                "allowSorting": false,
                "editType": "defaultEdit",
                "field": "left_or_right",
                "headerText": "L/R",
                "visible": true,
                "width": 50,
                "textAlign": "Center",
                "headerTextAlign": "Center"
            },
            {
                "allowEditing": false,
                "allowSorting": false,
                "editType": "defaultEdit",
                "field": "polos_or_kontras",
                "headerText": "P/K",
                "visible": true,
                "width": 50,
                "textAlign": "Center",
                "headerTextAlign": "Center"
            },
            {
                "allowEditing": false,
                "allowSorting": false,
                "editType": "numericEdit",
                "field": "qty_order",
                "headerText": "Qty",
                "type": "number",
                "textAlign": "Right",
                "headerTextAlign": "Right",
                "format": "N0",
                "visible": false,
                "width": 70
            },
            {
                "allowEditing": false,
                "allowSorting": false,
                "editType": "defaultEdit",
                "field": "keterangan_order",
                "headerText": "Keterangan",
                "textAlign": "Left",
                "visible": false,
                "width": 70
            },
        ];
        this.FormAddDiagnosa = this.formBuilder.group({
            subjective: ['', []],
            objective: ['', []],
            assesment: ['', []],
            catatan_assesment: ['', []],
            plan: ['', []]
        });
        this.FormInsertOrderRad = this.formBuilder.group({
            id_register: [0, []],
            id_kelas: [0, []],
            kode_grup_penunjang: ["RAD", []],
            id_icd: [0, []],
            id_poli_order: [0, []],
            id_dokter_order: [0, []],
            keterangan: ["", []],
            keterangan_sample: ["", []],
            is_order_darah: [false, []],
        });
        this.onGetAllIDataOrderPenunjang();
    }
    onGetAllIDataOrderPenunjang() {
        this.radiologiService.onGetAllOrderPenunjang()
            .subscribe((result) => {
            this.TabsOrderRadiologi = result.data;
        });
    }
    onGetSelectedTabId(args) {
        // console.log(args);
    }
    onClickTabButton(tabs_button) {
        this.SelectedCheckbox = tabs_button.radChild;
        this.onCheckGridDaftarOrderDatasource();
    }
    onChangeTabsCheckbox(Parameter) {
        let elem = document.getElementById(Parameter.id_mapping_tarif_penunjang + "CheckParameter");
        elem.checked = elem.checked;
        if (elem.checked) {
            elem.value = "true";
            this.onAddItemToGridDaftarOrder(Parameter);
        }
        else {
            elem.value = "false";
            this.onRemoveItemFromGridDaftarOrder(Parameter);
            if (Parameter.parameter_hasil) {
                let elemLeft = document.getElementById(Parameter.id_mapping_tarif_penunjang + "Left");
                elemLeft.checked = false;
                elemLeft.value = "false";
                let elemRight = document.getElementById(Parameter.id_mapping_tarif_penunjang + "Right");
                elemRight.checked = false;
                elemRight.value = "false";
                let elemPolos = document.getElementById(Parameter.id_mapping_tarif_penunjang + "Polos");
                elemPolos.checked = false;
                let elemKontras = document.getElementById(Parameter.id_mapping_tarif_penunjang + "Kontras");
                elemKontras.checked = false;
            }
        }
        ;
    }
    onChangeTabsCheckboxChildren(Parameter, Options) {
        const index = this.GridDaftarOrderDatasource.map(e => e.id_mapping_tarif_penunjang).indexOf(Parameter.id_mapping_tarif_penunjang);
        // ** Check Apabila Left / Right di check
        if (Options == "Left" || Options == "Right") {
            let elemLeft = document.getElementById(Parameter.id_mapping_tarif_penunjang + "Left");
            let elemRight = document.getElementById(Parameter.id_mapping_tarif_penunjang + "Right");
            if (elemLeft.checked && elemRight.checked) {
                Parameter.left_or_right = "LR";
                Parameter.item_rad.is_satu_sisi = false;
                Parameter.item_rad.is_dua_sisi = true;
            }
            else if (elemRight.checked) {
                Parameter.left_or_right = "R";
                Parameter.item_rad.is_satu_sisi = true;
                Parameter.item_rad.is_dua_sisi = false;
            }
            else if (elemLeft.checked) {
                Parameter.left_or_right = "L";
                Parameter.item_rad.is_satu_sisi = true;
                Parameter.item_rad.is_dua_sisi = false;
            }
            else {
                Parameter.left_or_right = "";
                Parameter.item_rad.is_satu_sisi = false;
                Parameter.item_rad.is_dua_sisi = false;
            }
            ;
            this.GridDaftarOrderDatasource[index].left_or_right = Parameter.left_or_right;
            this.gridDaftarOrder.Grid.refresh();
        }
        ;
        // ** Check Apabila Polos / Kontras di check 
        if (Options == "Polos" || Options == "Kontras") {
            let elemPolos = document.getElementById(Parameter.id_mapping_tarif_penunjang + "Polos");
            let elemKontras = document.getElementById(Parameter.id_mapping_tarif_penunjang + "Kontras");
            if (elemPolos.checked) {
                Parameter.polos_or_kontras = "P";
                Parameter.item_rad.is_polos = true;
                Parameter.item_rad.is_kontras = false;
            }
            else if (elemKontras.checked) {
                Parameter.polos_or_kontras = "K";
                Parameter.item_rad.is_polos = false;
                Parameter.item_rad.is_kontras = true;
            }
            else {
                Parameter.polos_or_kontras = "";
                Parameter.item_rad.is_polos = false;
                Parameter.item_rad.is_kontras = false;
            }
            this.GridDaftarOrderDatasource[index].polos_or_kontras = Parameter.polos_or_kontras;
            this.gridDaftarOrder.Grid.refresh();
        }
        ;
        const data = {
            id_mapping_tarif_penunjang: Parameter.id_mapping_tarif_penunjang,
            is_satu_sisi: Parameter.item_rad.is_satu_sisi,
            is_dua_sisi: Parameter.item_rad.is_dua_sisi,
            is_kontras: Parameter.item_rad.is_kontras,
            is_polos: Parameter.item_rad.is_polos,
        };
        if (data) {
            this.onGetTarifRadiologiDetail(data, index);
        }
    }
    onGetTarifRadiologiDetail(Parameter, GridIndex) {
        this.radiologiService.onGetTarifRadiologiDetail(Parameter)
            .subscribe((result) => {
            this.GridDaftarOrderDatasource[GridIndex].id_mapping_tarif_penunjang_detail_radiologi = result.data.id_mapping_tarif_penunjang_detail_radiologi;
            this.GridDaftarOrderDatasource[GridIndex]['id_setup_tarif'] = result.data.id_setup_tarif;
            this.GridDaftarOrderDatasource[GridIndex]['qty_order'] = 1;
            this.GridDaftarOrderDatasource[GridIndex]['keterangan_order'] = "";
        });
    }
    onCheckGridDaftarOrderDatasource() {
        this.GridDaftarOrderDatasource.forEach((check) => {
            check.parameter_checked = true;
            let elem = document.getElementById(check.id_mapping_tarif_penunjang + "CheckParameter");
            // ** Check apakah Parent sudah di render di view
            if (elem) {
                elem.checked = true;
            }
            ;
            // ** Check apakah left_or_right sudah di render di view
            if (check.left_or_right) {
                let elemLeft = document.getElementById(check.id_mapping_tarif_penunjang + "Left");
                let elemRight = document.getElementById(check.id_mapping_tarif_penunjang + "Right");
                if (elemLeft || elemRight) {
                    if (check.left_or_right == "LR") {
                        elemLeft.checked = true;
                        elemRight.checked = true;
                    }
                    else if (check.left_or_right == "L") {
                        elemLeft.checked = true;
                    }
                    else if (check.left_or_right == "R") {
                        elemRight.checked = true;
                    }
                    else {
                        // ** Do Nothing
                    }
                }
            }
            ;
            // ** Check apakah Polos / Kontras sudah di render di view
            if (check.polos_or_kontras) {
                let elemPolos = document.getElementById(check.id_mapping_tarif_penunjang + "Polos");
                let elemKontras = document.getElementById(check.id_mapping_tarif_penunjang + "Kontras");
                if (elemPolos || elemKontras) {
                    if (elemPolos.checked) {
                        check.polos_or_kontras = "P";
                    }
                    else if (elemKontras.checked) {
                        check.polos_or_kontras = "K";
                    }
                    else {
                        check.polos_or_kontras = "";
                    }
                }
            }
            ;
        });
    }
    onAddItemToGridDaftarOrder(Parameter) {
        this.GridDaftarOrderDatasource.push(Parameter);
        this.onCheckGridDaftarOrderDatasource();
        this.gridDaftarOrder.Grid.refresh();
    }
    onRemoveItemFromGridDaftarOrder(Parameter) {
        const index = this.GridDaftarOrderDatasource.map(e => e.id_mapping_tarif_penunjang).indexOf(Parameter.id_mapping_tarif_penunjang);
        this.GridDaftarOrderDatasource[index].parameter_checked = false;
        this.GridDaftarOrderDatasource[index].left_or_right = "";
        this.GridDaftarOrderDatasource[index].polos_or_kontras = "";
        this.GridDaftarOrderDatasource.splice(index, 1);
        this.gridDaftarOrder.Grid.refresh();
    }
    onInitalizedGrid(component) {
        this.gridDaftarOrder = component;
    }
    onRowSelected(args) {
        // console.log(args);
    }
    onClickButtonAddDiagnosa() {
        this.modalRef = this.modalService.show(this.modalDialogAddDiagnosa, Object.assign({}, { class: 'modal-lg' }));
    }
    onClickPilihDiagnosa() {
        this.LookupDiagnosa.onOpenModal();
    }
    onGetSeletedLookupDiagnosa(args) {
        this.id_icd.setValue(args.id_icd);
        this.keterangan.setValue(`${args.kode_icd} - ${args.nama_icd}`);
    }
    onSubmitFormAddDiagnosa(FormAddDiagnosa) {
        console.log(FormAddDiagnosa);
    }
    onSubmitRadiologiPasien(FormInsertOrderRad) {
        let UserData = JSON.parse(localStorage.getItem('UserData'));
        FormInsertOrderRad.id_dokter_order = UserData.id_karyawan;
        // FormInsertOrderRad.id_icd = this.daftarPasienService.ActivePasien.value.id_icd_masuk;
        FormInsertOrderRad.id_kelas = this.daftarPasienService.ActivePasien.value.id_kelas_rawat;
        FormInsertOrderRad.id_poli_order = this.daftarPasienService.ActivePasien.value.id_poli;
        FormInsertOrderRad.id_register = this.daftarPasienService.ActivePasien.value.id_register;
        FormInsertOrderRad.is_order_darah = false;
        const item_rad = this.GridDaftarOrderDatasource;
        item_rad.forEach((item) => {
            if (item.left_or_right) {
                switch (item.left_or_right) {
                    case "LR":
                        item.posisi = "LEFT_RIGHT";
                        break;
                    case "L":
                        item.posisi = "LEFT";
                        break;
                    case "R":
                        item.posisi = "RIGHT";
                        break;
                    case "":
                        item.posisi = "";
                        break;
                    default:
                        break;
                }
            }
            else {
                item.posisi = "";
            }
            if (item.polos_or_kontras) {
                switch (item.polos_or_kontras) {
                    case "P":
                        item.pk = "POLOS";
                        break;
                    case "K":
                        item.pk = "KONTRAS";
                        break;
                    case "":
                        item.posisi = "";
                        break;
                    default:
                        break;
                }
            }
            else {
                item.pk = "";
            }
        });
        FormInsertOrderRad.item_order = item_rad;
        this.radiologiService.onPostSaveOrderPenunjang(FormInsertOrderRad)
            .subscribe((result) => {
            if (result) {
                this.utilityService.onShowingCustomAlert('success', 'Success', 'Order Radiologi Berhasil Disimpan')
                    .then(() => {
                    this.onResetFormRadiologiPasien();
                    setTimeout(() => {
                        this.router.navigate(['/Dokter/radiologi/riwayat-pemeriksaan']);
                    }, 500);
                });
            }
        });
    }
    onResetFormRadiologiPasien() {
        this.FormInsertOrderRad.reset();
        this.id_register.setValue(0);
        this.id_kelas.setValue(0);
        this.kode_grup_penunjang.setValue("RAD");
        this.id_icd.setValue(0);
        this.id_poli_order.setValue(0);
        this.id_dokter_order.setValue(0);
        this.keterangan.setValue("");
        this.keterangan_sample.setValue("");
        this.is_order_darah.setValue(false);
    }
    get id_register() { return this.FormInsertOrderRad.get('id_register'); }
    get id_kelas() { return this.FormInsertOrderRad.get('id_kelas'); }
    get kode_grup_penunjang() { return this.FormInsertOrderRad.get('kode_grup_penunjang'); }
    get id_icd() { return this.FormInsertOrderRad.get('id_icd'); }
    get id_poli_order() { return this.FormInsertOrderRad.get('id_poli_order'); }
    get id_dokter_order() { return this.FormInsertOrderRad.get('id_dokter_order'); }
    get keterangan() { return this.FormInsertOrderRad.get('keterangan'); }
    get keterangan_sample() { return this.FormInsertOrderRad.get('keterangan_sample'); }
    get is_order_darah() { return this.FormInsertOrderRad.get('is_order_darah'); }
}
InputOrderBaruRadComponent.ɵfac = function InputOrderBaruRadComponent_Factory(t) { return new (t || InputOrderBaruRadComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_17__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_2__.BsModalService), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_3__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵdirectiveInject"](_services_radiologi_radiologi_service__WEBPACK_IMPORTED_MODULE_4__.RadiologiService), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_5__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵdirectiveInject"](_services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_6__.DashboardDokterService)); };
InputOrderBaruRadComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵdefineComponent"]({ type: InputOrderBaruRadComponent, selectors: [["app-input-order-baru"]], viewQuery: function InputOrderBaruRadComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵviewQuery"](_c1, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵloadQuery"]()) && (ctx.LookupDiagnosa = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵloadQuery"]()) && (ctx.modalDialogAddDiagnosa = _t.first);
    } }, decls: 43, vars: 12, consts: [[1, "row", "pt-2"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], [3, "onGetSelectedTabId", 4, "ngIf"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [1, "card", "border-0", "shadow-sm"], [1, "card-body", "p-2"], [3, "formGroup"], [1, "row", "mb-3", "justify-content-end"], ["hidden", "", 1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "text-start"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", 3, "click"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "text-end"], ["type", "button", 1, "btn", "btn-success", "btn-sm", 3, "click"], ["modalDialogAddDiagnosa", ""], [1, "row", "mb-2"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "mb-2"], ["for", "Keterangan", 1, "form-label"], ["type", "text", "id", "Keterangan", "rows", "2", "formControlName", "keterangan", 1, "form-control"], ["type", "text", "id", "Catatan", "formControlName", "keterangan_sample", 1, "form-control"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], [1, "card"], [1, "card-header"], [1, "text-biru-muda", "mb-0"], [1, "card-body", "p-0"], [3, "grid-id", "grid-height", "grid-lines", "grid-editSettings", "columns", "grid-DataSource", "row-selected", "initialized"], ["gridDaftarOrder", ""], [1, "row"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "text-end"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", "me-2", 3, "click"], ["type", "button", 1, "btn", "btn-danger", "btn-sm"], [3, "modal-title", "filter-lookup", "lookup-url", "columns", "onGetSelectedData"], ["LookupDiagnosa", ""], [3, "onGetSelectedTabId"], ["OrgTabsRef", ""], [4, "ngFor", "ngForOf"], [1, "col-lg-5", "col-md-5", "col-sm-5", "col-xs-5"], [1, "card", "shadow-sm", "border-0"], [1, "card-body", "px-2", "py-1", "cardButtonRadiologi"], ["class", "mb-2", 4, "ngFor", "ngForOf"], [1, "col-lg-7", "col-md-7", "col-sm-7", "col-xs-7"], [1, "card-body", "p-2", "cardButtonRadiologi"], ["class", "form-check", 4, "ngFor", "ngForOf"], [1, "mb-2"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", 2, "width", "100%", 3, "id", "click"], [1, "form-check"], ["type", "checkbox", 1, "form-check-input", 3, "value", "id", "checked", "change"], [1, "form-check-label", 3, "for"], ["class", "my-1", 4, "ngIf"], [1, "my-1"], ["class", "form-check form-check-inline", 4, "ngIf"], [1, "form-check", "form-check-inline"], ["type", "checkbox", 1, "form-check-input", 3, "id", "checked", "change"], ["type", "radio", "name", "polosOrKontras", "value", "polos", 1, "form-check-input", 3, "id", "checked", "change"], ["type", "radio", "name", "polosOrKontras", "value", "kontras", 1, "form-check-input", 3, "id", "checked", "change"], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body"], ["formControlName", "subjective", 3, "label"], ["formControlName", "objective", 3, "label"], [3, "label", "modal-title"], [3, "label"], ["formControlName", "plan", 3, "label"], [1, "modal-footer", "p-2", "background-abu-muda"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-123"]], template: function InputOrderBaruRadComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtemplate"](2, InputOrderBaruRadComponent_org_tabs_2_Template, 3, 1, "org-tabs", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](5, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](6, "form", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](7, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](8, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](9, "button", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵlistener"]("click", function InputOrderBaruRadComponent_Template_button_click_9_listener() { return ctx.onClickButtonAddDiagnosa(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](10, " Input Diagnosa ");
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](11, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](12, "button", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵlistener"]("click", function InputOrderBaruRadComponent_Template_button_click_12_listener() { return ctx.onClickPilihDiagnosa(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](13, " Pilih Diagnosa ");
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtemplate"](14, InputOrderBaruRadComponent_ng_template_14_Template, 17, 7, "ng-template", null, 12, _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](16, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](17, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](18, "label", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](19, "Keterangan Klinik Penderita");
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](20, "textarea", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](21, "                            ");
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](22, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](23, "label", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](24, "Catatan");
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelement"](25, "input", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](26, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](27, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](28, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](29, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](30, "p", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](31, " Daftar Order ");
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](32, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](33, "mol-grid", 23, 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵlistener"]("row-selected", function InputOrderBaruRadComponent_Template_mol_grid_row_selected_33_listener($event) { return ctx.onRowSelected($event); })("initialized", function InputOrderBaruRadComponent_Template_mol_grid_initialized_33_listener($event) { return ctx.onInitalizedGrid($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](35, "div", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](36, "div", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](37, "button", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵlistener"]("click", function InputOrderBaruRadComponent_Template_button_click_37_listener() { return ctx.onSubmitRadiologiPasien(ctx.FormInsertOrderRad.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](38, "Simpan");
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](39, "button", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵtext"](40, "Cancel");
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementStart"](41, "org-look-up", 29, 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵlistener"]("onGetSelectedData", function InputOrderBaruRadComponent_Template_org_look_up_onGetSelectedData_41_listener($event) { return ctx.onGetSeletedLookupDiagnosa($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("ngIf", ctx.TabsOrderRadiologi.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("formGroup", ctx.FormInsertOrderRad);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](27);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("grid-id", "GridDaftarOrder")("grid-height", "calc(100vh - 34.1rem)")("grid-lines", "Both")("grid-editSettings", ctx.GridDaftarOrderEditSettings)("columns", ctx.GridDaftarOrderColumns)("grid-DataSource", ctx.GridDaftarOrderDatasource);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵproperty"]("modal-title", "Pilih Diagnosa")("filter-lookup", ctx.Config.LookupDiagnosa.filter)("lookup-url", ctx.urlDiagnosa)("columns", ctx.Config.LookupDiagnosa.columns);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, _angular_forms__WEBPACK_IMPORTED_MODULE_18__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_18__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormGroupDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_18__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_18__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormControlName, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_7__.MolGridComponent, _shared_components_organism_loockUp_org_look_up_org_look_up_component__WEBPACK_IMPORTED_MODULE_8__.OrgLookUpComponent, _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_9__.OrgTabsComponentComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgForOf, _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_10__.OrgTabsItemComponentComponent, _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_11__.OrgTabsLabelComponentComponent, _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_12__.OrgTabsBodyComponentComponent, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_13__.MolInputTextComponent, _shared_components_organism_loockUp_org_input_look_up_kode_org_input_look_up_kode_component__WEBPACK_IMPORTED_MODULE_14__.OrgInputLookUpKodeComponent, _shared_components_molecules_form_mol_input_textarea_mol_input_textarea_component__WEBPACK_IMPORTED_MODULE_15__.MolInputTextareaComponent], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_19__.TitleCasePipe], styles: [".cardButtonRadiologi[_ngcontent-%COMP%] {\r\n  height: calc(100vh - 14rem);\r\n  max-height: calc(100vh - 14rem);\r\n  overflow-y: auto;\r\n}"] });


/***/ }),

/***/ 45498:
/*!*********************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/radiologi/radiologi.component.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RadiologiComponent": () => (/* binding */ RadiologiComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/modules/shared/services/navigation.service */ 35908);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);




class RadiologiComponent {
    constructor(router, navigationService) {
        this.router = router;
        this.navigationService = navigationService;
        this.ShowTitle = true;
        this.ButtonNav = [
            { Id: "RiwayatPemeriksaan", Icons1: "fa-history", Captions: "Riwayat Pemeriksaan" },
            { Id: "InputOrderBaru", Icons1: "fa-plus-circle", Captions: "Input Order Baru" },
        ];
    }
    ngOnInit() {
        this.onClickButtonNav("RiwayatPemeriksaan");
        if ((this.router.url).includes('Dokter')) {
            this.ShowTitle = true;
        }
    }
    ngAfterViewInit() {
        setTimeout(() => {
            this.navigationService.ButtonSidebarMenuState.next(true);
        }, 1);
    }
    onClickButtonNav(args) {
        switch (args) {
            case "RiwayatPemeriksaan":
                this.router.navigateByUrl('/Dokter/radiologi/riwayat-pemeriksaan');
                break;
            case "InputOrderBaru":
                this.router.navigateByUrl('/Dokter/radiologi/input-order-pemeriksaan');
                break;
            default:
                break;
        }
    }
}
RadiologiComponent.ɵfac = function RadiologiComponent_Factory(t) { return new (t || RadiologiComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_3__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_0__.NavigationService)); };
RadiologiComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: RadiologiComponent, selectors: [["app-radiologi"]], decls: 2, vars: 2, consts: [[3, "ButtonNav", "ShowTitle", "onClickButtonNav"]], template: function RadiologiComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "org-card-layout", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("onClickButtonNav", function RadiologiComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](1, "router-outlet");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav)("ShowTitle", ctx.ShowTitle);
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_1__.OrgCardLayoutComponent, _angular_router__WEBPACK_IMPORTED_MODULE_3__.RouterOutlet], styles: [""] });


/***/ }),

/***/ 70581:
/*!***************************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/radiologi/riwayat-pemeriksaan/riwayat-pemeriksaan.component.ts ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_GridRadiologi_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RiwayatPemeriksaanRadComponent": () => (/* binding */ RiwayatPemeriksaanRadComponent)
/* harmony export */ });
/* harmony import */ var _json_GridRadiologi_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../json/GridRadiologi.json */ 57088);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _services_radiologi_radiologi_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../services/radiologi/radiologi.service */ 11749);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../services/dashboard-dokter.service */ 27410);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 88594);






class RiwayatPemeriksaanRadComponent {
    constructor(radiologiService, daftarPasienService, dashboardDokterService) {
        this.radiologiService = radiologiService;
        this.daftarPasienService = daftarPasienService;
        this.dashboardDokterService = dashboardDokterService;
        // ** Grid Daftar Order Properties
        this.GridDaftarOrderEditSettings = { allowAdding: false, allowDeleting: false, allowEditing: false };
        this.GridDaftarOrderToolbar = ["Search"];
        this.GridDaftarOrderColumns = /*#__PURE__*/ (_json_GridRadiologi_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_GridRadiologi_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_GridRadiologi_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
        // ** Grid Detail Order Properties
        this.GridDetailOrderEditSettings = { allowAdding: false, allowDeleting: false, allowEditing: false };
        this.GridDetailOrderToolbar = ["Search"];
        this.GridDetailOrderColumns = /*#__PURE__*/ (_json_GridRadiologi_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_GridRadiologi_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_GridRadiologi_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
    }
    get width() {
        return window.innerWidth;
    }
    ;
    ngOnInit() {
        // this.dashboardDokterService.onSetSidebarMenuForDashboardDokter();
    }
    ngAfterViewInit() {
        this.onGetRiwayatPemeriksaanLab();
    }
    onGetRiwayatPemeriksaanLab() {
        const id_register = this.daftarPasienService.ActivePasien.value.id_register;
        this.radiologiService.onGetRiwayatOrderLab(id_register)
            .subscribe((result) => {
            this.GridDaftarOrderDataSource = result.data;
        });
    }
    onToolbarClick(args) {
    }
    onRowSelected(args) {
        let id_order_penunjang = args.data.id_order_penunjang;
        this.radiologiService.onGetDetailRiwayatOrderLab(id_order_penunjang)
            .subscribe((result) => {
            this.GridDetailOrderDataSource = result.data;
        });
    }
}
RiwayatPemeriksaanRadComponent.ɵfac = function RiwayatPemeriksaanRadComponent_Factory(t) { return new (t || RiwayatPemeriksaanRadComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_services_radiologi_radiologi_service__WEBPACK_IMPORTED_MODULE_1__.RadiologiService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_2__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_services_dashboard_dokter_service__WEBPACK_IMPORTED_MODULE_3__.DashboardDokterService)); };
RiwayatPemeriksaanRadComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({ type: RiwayatPemeriksaanRadComponent, selectors: [["app-riwayat-pemeriksaan-rad"]], decls: 17, vars: 14, consts: [[1, "row", "pt-2"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "mb-2"], [1, "card"], [1, "card-header", "px-2"], [1, "text-biru-muda", "mb-0"], [1, "card-body", "p-0"], [3, "grid-id", "grid-height", "grid-lines", "grid-editSettings", "grid-toolbar", "columns", "grid-DataSource", "toolbar-click", "row-selected"], ["gridDaftarOrder", ""], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], ["gridDetailOrder", ""]], template: function RiwayatPemeriksaanRadComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](4, "p", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](5, "Daftar Order");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](6, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](7, "mol-grid", 6, 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("toolbar-click", function RiwayatPemeriksaanRadComponent_Template_mol_grid_toolbar_click_7_listener($event) { return ctx.onToolbarClick($event); })("row-selected", function RiwayatPemeriksaanRadComponent_Template_mol_grid_row_selected_7_listener($event) { return ctx.onRowSelected($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](9, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](10, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](11, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](12, "p", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](13, "Daftar Order");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](14, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](15, "mol-grid", 6, 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("toolbar-click", function RiwayatPemeriksaanRadComponent_Template_mol_grid_toolbar_click_15_listener($event) { return ctx.onToolbarClick($event); })("row-selected", function RiwayatPemeriksaanRadComponent_Template_mol_grid_row_selected_15_listener($event) { return ctx.onRowSelected($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("grid-id", "GridDaftarOrder")("grid-height", ctx.width >= 1400 ? "calc(100vh - 44rem)" : "calc(100vh - 34rem)")("grid-lines", "Both")("grid-editSettings", ctx.GridDaftarOrderEditSettings)("grid-toolbar", ctx.GridDaftarOrderToolbar)("columns", ctx.GridDaftarOrderColumns.GridDaftarOrder.columns)("grid-DataSource", ctx.GridDaftarOrderDataSource);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("grid-id", "GridDetailOrder")("grid-height", ctx.width >= 1400 ? "calc(100vh - 44rem)" : "calc(100vh - 34rem)")("grid-lines", "Both")("grid-editSettings", ctx.GridDetailOrderEditSettings)("grid-toolbar", ctx.GridDetailOrderToolbar)("columns", ctx.GridDetailOrderColumns.GridDetailOrder.columns)("grid-DataSource", ctx.GridDetailOrderDataSource);
    } }, directives: [_shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_4__.MolGridComponent], styles: [""] });


/***/ }),

/***/ 21469:
/*!************************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irda/daftar-resep-irda/daftar-resep-irda.component.ts ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DaftarResepIrdaComponent": () => (/* binding */ DaftarResepIrdaComponent)
/* harmony export */ });
/* harmony import */ var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/grid.config.json */ 57432);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/encryption.service */ 26512);
/* harmony import */ var _services_resep_dokter_irda_resep_dokter_irda_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/resep-dokter-irda/resep-dokter-irda.service */ 75631);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);
/* harmony import */ var _shared_components_molecules_filter_mol_offcanvas_filter_mol_offcanvas_filter_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/molecules/filter/mol-offcanvas-filter/mol-offcanvas-filter.component */ 55682);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 46555);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 38583);









const _c0 = ["GridResepRacikan"];
const _c1 = ["GridData"];
function DaftarResepIrdaComponent_ng_template_14_a_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "a", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1, "Lihat Detail Resep");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} }
function DaftarResepIrdaComponent_ng_template_14_Template(rf, ctx) { if (rf & 1) {
    const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function DaftarResepIrdaComponent_ng_template_14_Template_div_click_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r6); const data_r3 = restoredCtx.$implicit; const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](); return ctx_r5.handleClickDetail(data_r3); });
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "p", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipe"](4, "titlecase");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipe"](5, "titlecase");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](6, "span", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](8, DaftarResepIrdaComponent_ng_template_14_a_8_Template, 2, 0, "a", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r3 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate2"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipeBind1"](4, 5, data_r3.headerText), " ", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipeBind1"](5, 7, data_r3.key), " - \u00A0 ");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate2"](" ", data_r3.count, " ", data_r3.field == "nama_dokter" ? "resep" : "obat", " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", data_r3.field == "nomor_resep");
} }
const _c2 = function () { return { wrapMode: "Both" }; };
class DaftarResepIrdaComponent {
    constructor(router, encryptionService, resepDokterIrdaService) {
        this.router = router;
        this.encryptionService = encryptionService;
        this.resepDokterIrdaService = resepDokterIrdaService;
        this.ShowTitle = true;
        this.ButtonNav = [
            { Id: 'Add', Captions: 'Buat Resep Baru', Icons1: 'fa-plus fa-sm' },
            { Id: 'pulang', Captions: 'Resep Pulang', Icons1: 'fa-home fa-sm' },
        ];
        this.GridDataToolbar = [
            { text: 'Add', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-sm', id: 'add' },
            { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
            { text: 'Detail', tooltipText: 'Detail', prefixIcon: 'fas fa-info-circle fa-sm', id: 'detail' },
            'Search'
        ];
        this.FilterColumnDatasource = [
            { text: 'No. Kontrak', value: 'tks.nomor_kontrak' },
            { text: 'Judul Kontrak', value: 'tks.judul_kontrak' },
        ];
        this.GridConfig = /*#__PURE__*/ (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
        this.dataSource = [];
        this.dataSourceChild = [];
        this.keterangan = (field, data1) => {
            return data1['nama_rute_pemberian_obat'] + ', sehari ' +
                data1['qty_harian'] + ' ' + data1['nama_satuan'] + ' ' + data1['ket_label'] + ' ' + data1['satuan_aturan_pakai'] + ' ' + data1['ket_aturan'];
        };
        this.quantity = (field, data1) => {
            return data1['qty_harian'] + ' ' +
                data1['nama_satuan'] + '/Hari, untuk ' + data1['jumlah_hari'] + ' Hari';
        };
        this.GridGroupSettings = { showDropArea: false, columns: ['nama_dokter', 'nomor_resep'] };
    }
    ngAfterViewInit() {
        // this.GridData.Grid.refresh();
    }
    ngOnInit() {
        this.childGrid = {
            dataSource: this.dataSourceChild,
            queryString: "resep_detail_id",
            rowHeight: 30,
            allowResizing: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: 'Both' },
            columns: this.GridConfig.columnsChild
        };
        this.resepDokterIrdaService.onInitList();
        this.handlePencarianFilter([]);
        if ((this.router.url).includes('Dokter')) {
            this.ShowTitle = true;
        }
    }
    rowDataBound(args) {
        // console.log(args.data.is_racikan)
        // let is_racikan = args.data.is_racikan;
        // if (!is_racikan) {
        //     //here hide which parent row has no child records
        //     args.row.querySelector('td').innerHTML = " ";
        //     args.row.querySelector('td').className = "e-customizedExpandcell";
        // } else {
        // //     // args.row.classList.add('is-racikan');
        // }
    }
    onDataBound() {
        // this.GridResepRacikan.detailRowModule.expandAll();
    }
    handlePencarianFilter(args) {
        this.resepDokterIrdaService.onGetAllByResepActiveByRegister(args).subscribe((result) => {
            this.dataSource = result.data;
            this.mapingRacikan(result.data);
            this.GridResepRacikan.refresh();
        });
    }
    mapingRacikan(details) {
        this.dataSourceChild = [];
        details.map((item) => {
            this.dataSourceChild.push(...item.racikans);
        });
        this.childGrid = {
            dataSource: this.dataSourceChild,
            queryString: "resep_detail_id",
            rowHeight: 30,
            allowResizing: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: 'Both' },
            columns: this.GridConfig.columnsChild
        };
    }
    handleClickDetail(args) {
        console.log(args);
        let item = this.dataSource.filter(x => x.nomor_resep === args.key);
        console.log('item klik', item);
        if (item.length) {
            const id = this.encryptionService.encrypt(JSON.stringify(args.items[0].resep_id));
            this.router.navigate(['Dokter/resep-irda/view-resep-irda', id, "GRAHCIS"]);
        }
    }
    handleClickButtonNav(args) {
        switch (args) {
            case 'Add':
                this.router.navigateByUrl('Dokter/resep-irda/input-resep-irda');
                break;
            case 'Edit':
                const pemesanan_id = this.encryptionService.encrypt(JSON.stringify(this.SelectedData.resep_id));
                this.router.navigate(['Dokter/resep-irda/input-resep-irda', pemesanan_id, "GRAHCIS"]);
                break;
            case 'pulang':
                this.router.navigateByUrl('Dokter/resep-irda/pulang-resep-irda');
                break;
            default:
                break;
        }
    }
    handleSelectedRow(args) {
        this.SelectedData = args.data;
        console.log(this.SelectedData);
    }
}
DaftarResepIrdaComponent.ɵfac = function DaftarResepIrdaComponent_Factory(t) { return new (t || DaftarResepIrdaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_6__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_1__.EncryptionService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_services_resep_dokter_irda_resep_dokter_irda_service__WEBPACK_IMPORTED_MODULE_2__.ResepDokterIrdaService)); };
DaftarResepIrdaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({ type: DaftarResepIrdaComponent, selectors: [["app-daftar-resep-irda"]], viewQuery: function DaftarResepIrdaComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵviewQuery"](_c1, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵloadQuery"]()) && (ctx.GridResepRacikan = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵloadQuery"]()) && (ctx.GridData = _t.first);
    } }, decls: 16, vars: 25, consts: [[3, "ButtonNav", "ShowTitle", "onClickButtonNav"], [1, "row", "pt-2"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "mb-2"], [3, "FilterColumnDatasource", "handle-pencarian"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], ["height", "calc(100vh - 15rem)", "gridLines", "Both", "rowHeight", "30", 3, "dataSource", "childGrid", "allowGrouping", "groupSettings", "allowTextWrap", "textWrapSettings", "rowDataBound", "dataBound"], ["GridResepRacikan", ""], ["field", "nama_dokter", "headerText", "Dokter", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nomor_resep", "headerText", "Nomor Resep", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_obat", "headerText", "Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "rute_pemberian_obat", "headerText", "Pemakain", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing", "valueAccessor"], ["field", "qty_harian", "headerText", "Qty", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", 3, "visible", "allowEditing", "width", "valueAccessor"], ["field", "ket_aturan", "headerText", "Aturan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["groupSettingsCaptionTemplate", ""], ["title", "", 1, "row"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", 3, "click"], [1, "mb-0", 2, "font-size", "15px"], [1, "mb-0"], ["class", "cursor-pointer", "title", "lihat detail resep", 4, "ngIf"], ["title", "lihat detail resep", 1, "cursor-pointer"]], template: function DaftarResepIrdaComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "org-card-layout", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("onClickButtonNav", function DaftarResepIrdaComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.handleClickButtonNav($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](3, "mol-offcanvas-filter", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("handle-pencarian", function DaftarResepIrdaComponent_Template_mol_offcanvas_filter_handle_pencarian_3_listener($event) { return ctx.handlePencarianFilter($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](5, "ejs-grid", 5, 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("rowDataBound", function DaftarResepIrdaComponent_Template_ejs_grid_rowDataBound_5_listener($event) { return ctx.rowDataBound($event); })("dataBound", function DaftarResepIrdaComponent_Template_ejs_grid_dataBound_5_listener() { return ctx.onDataBound(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](7, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](8, "e-column", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](9, "e-column", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](10, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](11, "e-column", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](12, "e-column", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](13, "e-column", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](14, DaftarResepIrdaComponent_ng_template_14_Template, 9, 9, "ng-template", null, 13, _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav)("ShowTitle", ctx.ShowTitle);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("FilterColumnDatasource", ctx.FilterColumnDatasource);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("dataSource", ctx.dataSource)("childGrid", ctx.childGrid)("allowGrouping", true)("groupSettings", ctx.GridGroupSettings)("allowTextWrap", true)("textWrapSettings", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpureFunction0"](24, _c2));
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("visible", true)("allowEditing", false)("valueAccessor", ctx.keterangan);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 220)("valueAccessor", ctx.quantity);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("visible", false)("allowEditing", false);
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__.OrgCardLayoutComponent, _shared_components_molecules_filter_mol_offcanvas_filter_mol_offcanvas_filter_component__WEBPACK_IMPORTED_MODULE_4__.MolOffcanvasFilterComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_7__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_7__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_7__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_7__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_7__.AggregateColumnDirective, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgIf], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.TitleCasePipe], styles: [".e-toolbar[_ngcontent-%COMP%]   .e-toolbar-item[_ngcontent-%COMP%]   .e-tbar-btn.e-btn[_ngcontent-%COMP%]   .e-icons.e-btn-icon[_ngcontent-%COMP%] {\r\n    min-height: 14px !important;\r\n  }\r\n  \r\n  th.e-headercell[_ngcontent-%COMP%] {\r\n    background-color: rgba(0, 0, 0, 0.03);\r\n    color: black;\r\n    border: 1px solid rgba(0, 0, 0, 0.125);\r\n    padding: 10px 5px !important;\r\n    height: 30px !important;\r\n  }\r\n  \r\n  span.e-headertext[_ngcontent-%COMP%] {\r\n    font-size: 13px !important;\r\n  }\r\n  \r\n  td.e-rowcell[_ngcontent-%COMP%] {\r\n    padding: 5px !important;\r\n  }\r\n  \r\n  #GridResepRacikancaptioncell[_ngcontent-%COMP%] {\r\n    background-color: var(--biru-tua);\r\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\r\n  }\r\n  \r\n  .e-grid[_ngcontent-%COMP%]   .e-detailheadercell[_ngcontent-%COMP%], td.e-detailcell.e-lastrowcell[_ngcontent-%COMP%] {\r\n  background-color: var(--biru-muda) !important;\r\n}\r\n  \r\n  div.e-gridcontent[_ngcontent-%COMP%]   tr.e-detailrow[_ngcontent-%COMP%]   td.e-detailcell[_ngcontent-%COMP%]   div.e-headercontent[_ngcontent-%COMP%]   th.e-headercell[_ngcontent-%COMP%] {\r\n  background-color: var(--biru-muda) !important;\r\n}"] });


/***/ }),

/***/ 63477:
/*!**********************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irda/input-resep-irda/input-resep-irda.component.ts ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
var _json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache;
var _json_GridResep_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InputResepIrdaComponent": () => (/* binding */ InputResepIrdaComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 43479);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 49548);
/* harmony import */ var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./json/lookupitem.json */ 1461);
/* harmony import */ var _json_GridResep_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./json/GridResep.json */ 77328);
/* harmony import */ var _json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./json/lookuptemplateresep.json */ 69779);
/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @syncfusion/ej2-data */ 78865);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ 16738);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sweetalert2 */ 88259);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! rxjs */ 26215);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _services_resep_dokter_irda_resep_dokter_irda_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../services/resep-dokter-irda/resep-dokter-irda.service */ 75631);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_metode_racikan_setup_metode_racikan_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-metode-racikan/setup-metode-racikan.service */ 6524);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_rute_pemberian_obat_setup_rute_pemberian_obat_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-rute-pemberian-obat/setup-rute-pemberian-obat.service */ 88817);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_satuan_aturan_pakai_setup_satuan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-satuan-aturan-pakai/setup-satuan-aturan-pakai.service */ 43233);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_interval_aturan_pakai_setup_interval_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-interval-aturan-pakai/setup-interval-aturan-pakai.service */ 72568);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_tambahan_aturan_pakai_setup_tambahan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-tambahan-aturan-pakai/setup-tambahan-aturan-pakai.service */ 561);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-label-pemakaian-obat/setup-label-pemakaian-obat.service */ 65203);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 26966);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ngx-bootstrap/modal */ 63301);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/modules/shared/services/encryption.service */ 26512);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-outlet/setup-outlet.service */ 80443);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 8210);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 48502);
/* harmony import */ var _shared_components_organism_loockUp_org_look_up_hirarki_org_look_up_hirarki_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../../shared/components/organism/loockUp/org-look-up-hirarki/org-look-up-hirarki.component */ 54313);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../shared/components/atoms/form/atm-label/atm-label.component */ 49130);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 46555);
































const _c0 = ["LookupRacikan"];
const _c1 = ["LookupTemplateResep"];
const _c2 = ["modalTemplateResep"];
const _c3 = ["GridResepRacikan"];
const _c4 = ["itemTemplate"];
function InputResepIrdaComponent_div_12_Template(rf, ctx) { if (rf & 1) {
    const _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](0, "div", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](1, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](2, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](3, "label", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](4, "Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](5, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](6, "ejs-dropdownlist", 58, 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("filtering", function InputResepIrdaComponent_div_12_Template_ejs_dropdownlist_filtering_6_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r12); const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r11.onFiltering($event); })("change", function InputResepIrdaComponent_div_12_Template_ejs_dropdownlist_change_6_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r12); const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r13.handleChangeObat($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx_r0.data)("fields", ctx_r0.fields)("placeholder", ctx_r0.text)("query", ctx_r0.query)("sortOrder", ctx_r0.sorting)("allowFiltering", true);
} }
function InputResepIrdaComponent_div_13_Template(rf, ctx) { if (rf & 1) {
    const _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](0, "div", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](1, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](2, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](3, "label", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](4, "Nama Racikan Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](5, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](6, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](7, "input", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("change", function InputResepIrdaComponent_div_13_Template_input_change_7_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r15); const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r14.handleChangeNamaRacikan(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](8, "button", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("click", function InputResepIrdaComponent_div_13_Template_button_click_8_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r15); const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r16.handelClickRacikan(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](9, "i", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
} }
function InputResepIrdaComponent_div_14_Template(rf, ctx) { if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](1, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](2, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](3, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](4, "label", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](5, "Kemasan");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](6, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](7, "ejs-dropdownlist", 65, 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("change", function InputResepIrdaComponent_div_14_Template_ejs_dropdownlist_change_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r19); const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r18.handleChangeMetodeRacikan($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpipe"](9, "async");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpipeBind1"](9, 3, ctx_r2.setupMetodeRacikanService.dataSource))("fields", ctx_r2.DropdownMetodeRacikanFields)("allowFiltering", true);
} }
function InputResepIrdaComponent_div_32_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](0, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](1, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](2, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](3, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](4, "label", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](5, "Satuan");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](6, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](7, "ejs-combobox", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("change", function InputResepIrdaComponent_div_32_Template_ejs_combobox_change_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r21); const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r20.handleChangeSatuanAturan($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx_r3.dataSourceSatuanAturanPakai)("fields", ctx_r3.DropdownsatuanPakaiFields);
} }
function InputResepIrdaComponent_ng_template_95_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](0, "div", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](1, "h5", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](2, "Simpan Template Resep Dokter");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](3, "button", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("click", function InputResepIrdaComponent_ng_template_95_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r23); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r22.modalRef.hide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](4, "i", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](5, "div", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](6, "div", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](7, "div", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](8, "h2");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](9, "Apakah Dokter Ingin Menyimapan Resep Ini Sebagai Template Resep?");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](10, "p");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](11, "Template resep di gunakan untuk membuat resep dengan data resep yg sudah ada");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](12, "div", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](13, "div", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](14, "label", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](15, "strong");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](16, "Nama Template Resep");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](17, "div", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](18, "input", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](19, "div", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](20, "button", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("click", function InputResepIrdaComponent_ng_template_95_Template_button_click_20_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r23); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r24.handleClickSimpanTemplateResepDokter(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](21, "Simpan Template Resep");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](22, "button", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("click", function InputResepIrdaComponent_ng_template_95_Template_button_click_22_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r23); const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r25.handleClickAbaikan(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](23, "Tidak");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
} }
const _c5 = function () { return { wrapMode: "Both" }; };
class InputResepIrdaComponent {
    constructor(formBuilder, resepDokterIrdaService, setupMetodeRacikanService, setupRutePemberianObatService, setupSatuanAturanPakaiService, setupIntervalAturanPakaiService, setupTambahanAturanPakaiService, setupLabelPemakaianObatService, utilityService, modalService, router, encryptionService, activatedRoute, daftarPasienService, setupOutletService) {
        this.formBuilder = formBuilder;
        this.resepDokterIrdaService = resepDokterIrdaService;
        this.setupMetodeRacikanService = setupMetodeRacikanService;
        this.setupRutePemberianObatService = setupRutePemberianObatService;
        this.setupSatuanAturanPakaiService = setupSatuanAturanPakaiService;
        this.setupIntervalAturanPakaiService = setupIntervalAturanPakaiService;
        this.setupTambahanAturanPakaiService = setupTambahanAturanPakaiService;
        this.setupLabelPemakaianObatService = setupLabelPemakaianObatService;
        this.utilityService = utilityService;
        this.modalService = modalService;
        this.router = router;
        this.encryptionService = encryptionService;
        this.activatedRoute = activatedRoute;
        this.daftarPasienService = daftarPasienService;
        this.setupOutletService = setupOutletService;
        this.ShowTitle = true;
        /**
         * Variable Button Nav
         * @ButtonNav: ButtonNavModel[]
        */
        this.ButtonNav = [
            { Id: "Kembali", Icons1: "fas fa-arrow-left fa-sm", Captions: "Kembali" },
            { Id: "Template", Icons1: "fas fa-tags fa-sm", Captions: "Template Resep" },
            { Id: "Reset", Icons1: "fas fa-undo fa-sm", Captions: "Reset" },
            { Id: "Simpan", Icons1: "fas fa-save fa-sm", Captions: "Simpan" },
        ];
        this.urlRacikan = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_RACIKAN;
        this.urlTemplateResep = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRDA.GET_TEMPLATE_RESEP;
        this.GridLookUpItem = /*#__PURE__*/ (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_1__, 2)));
        this.GridlookUpTemplateResep = /*#__PURE__*/ (_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache || (_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache = __webpack_require__.t(_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3__, 2)));
        this.DropdownAturanFields = { text: "tambahan_aturan_pakai", value: "id_tambahan_aturan_pakai" };
        this.DropdownRuteFields = { text: "nama_rute_pemberian_obat", value: "id_rute_pemberian_obat" };
        this.DropdownPemakaianFields = { text: "interval_aturan_pakai", value: "id_interval_aturan_pakai" };
        this.DropdownLabelFields = { text: "nama_label_pemakaian_obat", value: "id_label_pemakaian_obat" };
        this.SetupOutletDropdownField = { text: 'nama_outlet', value: 'id_outlet' };
        this.FormAddObatState = "input";
        // ** Satuan 
        this.SatuanObat = "-";
        this.DropdownObatFields = { text: 'nama_obat', value: 'id_item' };
        this.DropdownMetodeRacikanFields = { text: 'metode_racikan', value: 'id_metode_racikan' };
        this.DropdownsatuanPakaiFields = { text: "satuan_aturan_pakai", value: "id_satuan_aturan_pakai" };
        this.NamaObatDatasource = [];
        this.dataSourceTambahanAturanPakai = [];
        this.dataSourceLabelPemakaian = [];
        this.dataSourceSatuanAturanPakai = [];
        // ** Waktu Pakai
        this.WaktuPakai = [];
        // ** Grid Daftar Obat Properties
        this.GridDaftarObatEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
        this.GridDaftarObatDataSource = [];
        this.GridDaftarObatColumns = /*#__PURE__*/ (_json_GridResep_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (_json_GridResep_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(_json_GridResep_json__WEBPACK_IMPORTED_MODULE_2__, 2)));
        this.GridDetailResepRacikanDatasource = [];
        this.GridResepRacikanDatasource = [];
        this.DataRacikan = [];
        this.newdetail = [];
        this.baru = 0;
        this.data_header = null;
        this.counter = 0;
        this.counterRacikan = 0;
        this.dataSourceGrid = new rxjs__WEBPACK_IMPORTED_MODULE_22__.BehaviorSubject([]);
        this.dataScourceGridChild = [];
        this.inputObat = false;
        // SERVER SIDE 
        this.IsUserLogin = JSON.parse(localStorage.getItem('UserData'));
        this.data = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.DataManager({
            headers: [
                {
                    Authorization: "Bearer " + this.IsUserLogin.token
                }
            ],
            url: src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_OBAT_PARAMS_DROPDOWNLIST,
            adaptor: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.ODataV4Adaptor,
            crossDomain: true,
        });
        this.fields = { text: 'nama_obat', value: 'id_item' };
        this.query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where('msi.nama_item', 'contains', '', true);
        this.text = "Select a Obat";
        this.sorting = 'Ascending';
        this.onFiltering = (e) => {
            // load overall data when search key empty.
            if (e.text === '') {
                e.updateData(this.data);
            }
            else {
                let query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where('msi.nama_item', 'contains', e.text, true);
                e.updateData(this.data, query);
            }
        };
        //=====================
        this.dataChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.DataManager({
            headers: [
                {
                    Authorization: "Bearer " + this.IsUserLogin.token
                }
            ],
            url: src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_OBAT_PARAMS_DROPDOWNLIST,
            adaptor: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.ODataV4Adaptor,
            crossDomain: true,
        });
        this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where('msi.nama_item', 'contains', '', true);
        this.keterangan = (field, data1) => {
            return data1['rute_pemberian_obat'] + ', sehari ' +
                data1['qty_harian'] + ' ' + data1['nama_satuan'] + ' ' + data1['ket_label'] + ' ' + data1['satuan_aturan_pakai'] + ' ' + data1['ket_aturan'];
        };
        this.quantity = (field, data1) => {
            return data1['qty_harian'] + ' ' +
                data1['nama_satuan'] + '/Hari, untuk ' + data1['jumlah_hari'] + ' Hari';
        };
        this.dataUbah = null;
        this.updateResepDokter = false;
        this.pulang = false;
        this.idArry = [];
    }
    get width() { return window.innerWidth; }
    ;
    ngOnInit() {
        this.FormAddObat = this.formBuilder.group({
            counter: [0, []],
            is_racikan: [false, []],
            no_urut: [0, []],
            set_racikan_id: [null, []],
            id_metode_racikan: [1, []],
            metode_racikan: ['Puyer', []],
            id_item: [null, []],
            nama_racikan: ['', []],
            nama_obat: ['', []],
            jumlah_hari: [1, []],
            qty_harian: [1, []],
            qty_resep: [1, []],
            nama_satuan: ['-', []],
            id_rute_pemberian_obat: [null, []],
            rute_pemberian_obat: ['', []],
            id_satuan_aturan_pakai: [null, []],
            satuan_aturan_pakai: ['', []],
            label: ['', []],
            ket_label: ['', []],
            id_label_pemakaian_obat: [null, []],
            label_pemakaian_obat: ['', []],
            aturan: ['', []],
            ket_aturan: ['', []],
            id_tambahan_aturan_pakai: [null, []],
            label_tambahan_aturan_pakai_obat: ['', []],
        });
        this.GridDaftarObatToolbar = [
            { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
            { text: 'Delete', tooltipText: 'Delete', prefixIcon: 'fas fa-trash-alt fa-sm', id: 'delete' },
            'Search'
        ];
        let currentQtyResep = this.currentQtyResep;
        let currentIdItem = this.currentIdItem;
        let SelectedDataRacikanObat = this.SelectedDataRacikanObat;
        this.resepDokterIrdaService.dataSelectRacikan.next(SelectedDataRacikanObat);
        this.itemsParams = {
            create: () => {
                if (SelectedDataRacikanObat) {
                    this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat')
                        .select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan'])
                        .take(10).where('msi.nama_item', 'contains', SelectedDataRacikanObat.nama_obat, true);
                }
                else {
                    this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat')
                        .select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan'])
                        .take(10).where('msi.nama_item', 'contains', '', true);
                }
                this.itemsElem = document.createElement('input');
                return this.itemsElem;
            },
            read: () => {
                return this.itemsObj.text;
            },
            destroy: () => {
                this.itemsObj.destroy();
            },
            write: () => {
                this.itemsObj = new _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_24__.DropDownList({
                    dataSource: this.dataChild,
                    fields: this.fields,
                    query: this.queryChild,
                    enabled: true,
                    placeholder: 'Select a obat',
                    // floatLabelType: 'Never',
                    allowFiltering: true,
                    popupWidth: '55rem',
                    filtering: function (e) {
                        if (e.text === '') {
                            e.updateData(this.data);
                        }
                        else {
                            let query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where('msi.nama_item', 'contains', e.text, true);
                            e.updateData(this.data, query);
                        }
                    }.bind(this),
                    change: function (args) {
                        currentIdItem = args.itemData.id_item;
                        console.log('currentItem', currentIdItem);
                        this.setFormGrif(args, currentQtyResep, currentIdItem, SelectedDataRacikanObat);
                    }.bind(this),
                });
                this.itemsObj.appendTo(this.itemsElem);
                if (SelectedDataRacikanObat) {
                    this.setFormGrif(null, SelectedDataRacikanObat.qty_resep, currentIdItem, SelectedDataRacikanObat);
                    setTimeout(() => {
                        console.log('', SelectedDataRacikanObat);
                        currentIdItem = SelectedDataRacikanObat.id_item;
                        this.itemsObj.value = currentIdItem;
                    }, 10);
                }
            }
        };
        let counterRacikan = this.counterRacikan;
        let dataSourceChild = this.dataScourceGridChild;
        let dataSourceGrid = this.dataSourceGrid;
        this.resepDokterIrdaService.dataSourceChildGrid.next(dataSourceChild);
        this.resepDokterIrdaService.dataSourceParentGrid.next(dataSourceGrid.value);
        let nav = 'add';
        this.ChildGrid = {
            dataSource: this.dataScourceGridChild,
            queryString: "counter",
            rowHeight: 30,
            allowResizing: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: 'Both' },
            toolbar: ['Add', 'Edit', 'Delete', 'Update', 'Cancel'],
            editSettings: { allowEditing: true, allowAdding: true, allowDeleting: true },
            columns: [
                { field: "counter", headerText: 'c', width: 100, visible: false },
                { field: "no_urut", headerText: 'ID Obat', visible: false },
                { field: "nama_obat", headerText: 'Nama Obat', editType: 'dropdownedit', edit: this.itemsParams, width: 200 },
                { field: "nama_satuan", headerText: 'Satuan', textAlign: 'Right', width: 80, allowEditing: false },
                { field: "id_item", headerText: 'id', width: 100, visible: false },
                { field: "komposisi", headerText: 'kps', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2', allowEditing: false },
                { field: "seper", headerText: '1/', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                { field: "kandungan", headerText: 'Kandungan', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                { field: "qty_resep", headerText: 'qty', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2', visible: false },
                { field: "qty_racikan", headerText: 'QTY', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                { field: "keterangan", headerText: 'Keterangan', headerTextAlign: 'Center', textAlign: 'Left', width: 100 },
            ],
            rowSelected(args) {
                SelectedDataRacikanObat = args.data;
                console.log('row selected', SelectedDataRacikanObat);
            },
            actionBegin(args) {
                console.log('begin', args);
                if (args.requestType === 'add') {
                    const counter = 'counter';
                    args.data[counter] = this.parentDetails.parentKeyFieldValue;
                    args.data['qty_resep'] = this.parentDetails.parentRowData.qty_resep;
                    // (args.data as object)['counterRacikan'] = counterRacikan++;
                    currentQtyResep = this.parentDetails.parentRowData.qty_harian;
                    SelectedDataRacikanObat = null;
                }
                // if (args.requestType === 'beginEdit'){
                //     SelectedDataRacikanObat = args.rowData;
                // }
            },
            actionComplete(args) {
                console.log(args);
                if (args.requestType == 'save') {
                    if (args.action == 'add') {
                        args.data.id_item = currentIdItem;
                        args.data.counterRacikan = counterRacikan++;
                        args.data.qty_racikan = parseFloat(args.data.qty_racikan);
                        console.log(dataSourceChild);
                        dataSourceChild.push(args.data);
                    }
                    if (args.action == 'edit') {
                        args.data.id_item = currentIdItem;
                        args.data.qty_racikan = parseFloat(args.data.qty_racikan);
                        let index = dataSourceChild.map((item) => { return item.counterRacikan; }).indexOf(args.data.counterRacikan);
                        dataSourceChild[index] = args.data;
                    }
                    let data = [];
                    dataSourceChild.orderBy('-counterRacikan');
                    dataSourceGrid.value.forEach((itemPrent, indexPrent) => {
                        data.push(itemPrent);
                    });
                    setTimeout(() => {
                        dataSourceGrid.next(data);
                        console.log(data);
                    }, 500);
                }
                if (args.requestType == "delete") {
                    let index = dataSourceChild.map((item) => { return item.counterRacikan; }).indexOf(args.data[0].counterRacikan);
                    dataSourceChild.splice(index, 1);
                    let data = [];
                    dataSourceChild.orderBy('-counterRacikan');
                    dataSourceGrid.value.forEach((itemPrent, indexPrent) => {
                        data.push(itemPrent);
                    });
                    setTimeout(() => {
                        dataSourceGrid.next(data);
                        console.log(data);
                    }, 500);
                }
            }
        };
        this.setupLabelPemakaianObatService.onGetAll().subscribe((result) => {
            this.dataSourceLabelPemakaian = result.data;
        });
        this.setupMetodeRacikanService.setDataSource();
        // this.resepDokterIrdaService.setDataObat([]);
        this.setupRutePemberianObatService.setDataSource();
        this.setupIntervalAturanPakaiService.setDataSource();
        this.setupTambahanAturanPakaiService.onGetAll().subscribe((result) => {
            this.dataSourceTambahanAturanPakai = result.data;
        });
        this.setupSatuanAturanPakaiService.onGetAll().subscribe((result) => {
            this.dataSourceSatuanAturanPakai = result.data;
        });
        this.resepDokterIrdaService.reset();
        this.setupOutletService.setDataSource();
        this.urlRacikan = this.urlRacikan + '/' + this.daftarPasienService.ActivePasien.value.id_dokter + '/D';
        this.urlTemplateResep = this.urlTemplateResep + '/' + this.daftarPasienService.ActivePasien.value.id_dokter;
        if ((this.router.url).includes('Dokter')) {
            this.ShowTitle = true;
        }
    }
    ngAfterViewInit() {
        if (typeof this.activatedRoute.snapshot.params["id"] !== 'undefined') {
            let idString;
            idString = this.encryptionService.decrypt(this.activatedRoute.snapshot.params["id"]);
            this.idArry = idString.split(',');
            console.log(idString);
            console.log(this.idArry);
            if (this.idArry[1] == 'pulang') {
                this.pulang = true;
                this.ButtonNav = [
                    { Id: "kembali_update", Icons1: "fas fa-arrow-left fa-sm", Captions: "Kembali" },
                    { Id: "ubah", Icons1: "fas fa-save fa-sm", Captions: "Simpan Resep Pulang" },
                ];
            }
            else {
                this.ButtonNav = [
                    { Id: "kembali_update", Icons1: "fas fa-arrow-left fa-sm", Captions: "Kembali" },
                    { Id: "ubah", Icons1: "fas fa-save fa-sm", Captions: "Ubah Resep Dokter" },
                ];
            }
            this.updateResep(parseInt(this.idArry[0]));
        }
    }
    updateResep(id) {
        this.resepDokterIrdaService.onGetById(id).subscribe((result) => {
            this.dataUbah = result.data;
            this.heandleSelectedTemplateResep(result.data);
            this.updateResepDokter = true;
        });
    }
    handleClickTambahObat() {
        this.inputObat = true;
        this.tanggal_mulai_text.setValue(this.utilityService.onFormatDate(this.tanggal_mulai.value, 'Do MMMM yyyy'));
        this.tanggal_sampai_text.setValue(this.utilityService.onFormatDate(this.tanggal_sampai.value, 'Do MMMM yyyy'));
    }
    onLoad(args) {
    }
    handleChangeOutlet(args) {
        this.setIdOutlet = args.value;
    }
    setFormGrif(args, currentQtyResep, id_item, SelectedDataRacikanObat) {
        // console.log('function setgrid',SelectedDataRacikanObat);
        if (SelectedDataRacikanObat) {
            document.getElementsByName("nama_satuan")[0].value = SelectedDataRacikanObat.nama_satuan;
            document.getElementsByName("komposisi")[0].value = SelectedDataRacikanObat.komposisi;
            document.getElementsByName("seper")[0].value = SelectedDataRacikanObat.seper;
            document.getElementsByName("kandungan")[0].value = SelectedDataRacikanObat.kandungan;
            document.getElementsByName("qty_racikan")[0].value = SelectedDataRacikanObat.qty_racikan;
        }
        else {
            document.getElementsByName("nama_satuan")[0].value = args.itemData.nama_satuan;
            document.getElementsByName("komposisi")[0].value = args.itemData.kandungan_obat;
            document.getElementsByName("seper")[0].value = '1';
            document.getElementsByName("kandungan")[0].value = args.itemData.kandungan_obat;
            document.getElementsByName("qty_racikan")[0].value = currentQtyResep.toString();
        }
        let seper = document.getElementsByName("seper")[0];
        if (seper) {
            seper.addEventListener('click', (event) => {
                seper.select();
            });
            seper.addEventListener('keyup', (event) => {
                let komposisi = parseInt(document.getElementsByName("komposisi")[0].value);
                let seper = parseInt(document.getElementsByName("seper")[0].value);
                let hasil = komposisi / seper;
                document.getElementsByName("kandungan")[0].value = hasil.toString();
                let butuh = currentQtyResep * hasil;
                let qty = butuh / komposisi;
                document.getElementsByName("qty_racikan")[0].value = qty.toString();
            });
            this.setInputFilter(seper, function (value) {
                return /^\d*$/.test(value);
            });
        }
        let kandungan = document.getElementsByName("kandungan")[0];
        if (kandungan) {
            kandungan.addEventListener('click', (event) => {
                kandungan.select();
            });
            kandungan.addEventListener('keyup', (event) => {
                let kandungan = parseInt(document.getElementsByName("kandungan")[0].value);
                let komposisi = parseInt(document.getElementsByName("komposisi")[0].value);
                let butuh = currentQtyResep * kandungan;
                console.log(butuh);
                let qty = butuh / komposisi;
                document.getElementsByName("qty_racikan")[0].value = qty.toString();
                document.getElementsByName("seper")[0].value = '1';
            });
            this.setInputFilter(kandungan, function (value) {
                return /^\d*$/.test(value);
            });
        }
        let qty_racikan = document.getElementsByName("qty_racikan")[0];
        if (qty_racikan) {
            qty_racikan.addEventListener('click', (event) => {
                qty_racikan.select();
            });
            this.setInputFilter(qty_racikan, function (value) {
                return /^\d*$/.test(value);
            });
        }
    }
    setInputFilter(textbox, inputFilter) {
        ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function (event) {
            textbox.addEventListener(event, function () {
                if (inputFilter(this.value)) {
                    this.oldValue = this.value;
                    this.oldSelectionStart = this.selectionStart;
                    this.oldSelectionEnd = this.selectionEnd;
                }
                else if (Object.prototype.hasOwnProperty.call(this, 'oldValue')) {
                    this.value = this.oldValue;
                    if (this.oldSelectionStart !== null &&
                        this.oldSelectionEnd !== null) {
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    }
                }
                else {
                    this.value = "";
                }
            });
        });
    }
    rowDataBound(args) {
        var is_racikan = args.data.is_racikan;
        if (!is_racikan) {
            //here hide which parent row has no child records
            args.row.querySelector('td').innerHTML = " ";
            args.row.querySelector('td').className = "e-customizedExpandcell";
        }
        else {
            // args.row.classList.add('is-racikan');
        }
    }
    onDataBound() {
        this.GridResepRacikan.detailRowModule.expandAll();
    }
    // ** Dropdown Nama Obat onchange method
    handleChangeObat(args) {
        this.nama_satuan.setValue(args.itemData.nama_satuan);
        this.nama_obat.setValue(args.itemData.nama_obat);
    }
    handleChangeLabel(args) {
        this.label_pemakaian_obat.setValue('');
        this.id_label_pemakaian_obat.setValue(args.value);
        this.ket_label.setValue(args.itemData.nama_label_pemakaian_obat);
        this.qty_harian.setValue(args.itemData.berapa_kali_per_hari);
    }
    handleChangeAturan(args) {
        if (typeof args.value === 'number' && (args.value % 1) === 0) {
            this.label_tambahan_aturan_pakai_obat.setValue('');
            this.id_tambahan_aturan_pakai.setValue(args.value);
            this.ket_aturan.setValue(args.itemData.tambahan_aturan_pakai);
        }
        else {
            this.label_tambahan_aturan_pakai_obat.setValue(args.value);
            this.id_tambahan_aturan_pakai.setValue(1);
            this.ket_aturan.setValue(args.itemData.tambahan_aturan_pakai);
        }
    }
    handleChangeRacikan(args) {
        if (args) {
            this.nama_satuan.setValue('PUYER');
        }
        else {
            this.nama_satuan.setValue("-");
        }
    }
    handleChangeNamaRacikan() {
        this.set_racikan_id.setValue(null);
    }
    handelClickRacikan() {
        this.LookupRacikan.onOpenModal();
    }
    handleChangeMetodeRacikan(args) {
        this.metode_racikan.setValue(args.itemData.metode_racikan);
        this.nama_satuan.setValue(args.itemData.metode_racikan);
    }
    handleChangeRute(args) {
        this.rute_pemberian_obat.setValue(args.itemData.nama_rute_pemberian_obat);
    }
    handleChangePemakaian(args) {
        console.log(args);
        //   this.interval_aturan_pakai.setValue(args.itemData.interval_aturan_pakai);
    }
    handleChangeSatuanAturan(args) {
        this.satuan_aturan_pakai.setValue(args.itemData.satuan_aturan_pakai);
    }
    handleSelectedRacikan(args) {
        args.is_racikan = true;
        this.set_racikan_id.setValue(args.set_racikan_id);
        this.nama_obat.setValue(args.nama_obat);
        this.nama_racikan.setValue(args.nama_obat);
        this.id_metode_racikan.setValue(args.id_metode_racikan);
        this.metode_racikan.setValue(args.metode_racikan);
        this.id_rute_pemberian_obat.setValue(args.id_rute_pemberian_obat);
        this.rute_pemberian_obat.setValue(args.nama_rute_pemberian_obat);
        this.id_metode_racikan.setValue(args.id_metode_racikan);
        this.nama_satuan.setValue(args.metode_racikan);
        this.label.setValue(args.id_label_pemakaian_obat);
        this.id_label_pemakaian_obat.setValue(args.id_label_pemakaian_obat);
        this.ket_label.setValue(args.ket_label);
        this.id_satuan_aturan_pakai.setValue(args.id_satuan_aturan_pakai);
        this.satuan_aturan_pakai.setValue(args.satuan_aturan_pakai);
        this.aturan.setValue(args.id_tambahan_aturan_pakai);
        this.label_tambahan_aturan_pakai_obat.setValue(args.label_tambahan_aturan_pakai_obat);
        this.id_tambahan_aturan_pakai.setValue(args.id_tambahan_aturan_pakai);
        this.ket_aturan.setValue(args.ket_aturan);
        let detail = [];
        // detail = this.GridResepRacikan.childGrid.dataSource;
        args.details.forEach(element => {
            let counterRacikan = this.counterRacikan++;
            element.counterRacikan = counterRacikan;
            element.komposisi = parseInt(element.kandungan_obat);
            element.kandungan = 1;
            element.seper = 1;
            element.qty_resep = args.qty_resep;
            detail.push(element);
        });
        console.log(detail);
        this.DataRacikan = detail;
    }
    heandleSelectedTemplateResep(args) {
        let obat = [];
        let detail;
        detail = this.GridResepRacikan.childGrid.dataSource;
        args.details.forEach(element => {
            this.counter++;
            element.counter = this.counter;
            if (element.is_racikan) {
                element.nama_racikan = element.nama_obat;
            }
            else {
                element.nama_racikan = '';
            }
            if (element.id_label_pemakaian_obat == 1) {
                element.label = element.ket_label;
            }
            else {
                element.label = element.id_label_pemakaian_obat;
            }
            if (element.id_tambahan_aturan_pakai == 1) {
                element.aturan = element.ket_aturan;
            }
            else {
                element.aturan = element.id_tambahan_aturan_pakai;
            }
            element.rute_pemberian_obat = element.nama_rute_pemberian_obat;
            // this.resepDokterService.addDetail(element);
            obat.push(element);
            element.racikans.forEach(racikan => {
                let counterRacikan = this.counterRacikan++;
                racikan.counter = this.counter;
                racikan.counterRacikan = counterRacikan;
                racikan.komposisi = parseInt(racikan.kandungan_obat);
                racikan.kandungan = 1;
                racikan.seper = 1;
                racikan.qty_resep = element.qty_resep;
                detail.push(racikan);
            });
        });
        this.dataSourceGrid.next(obat);
        this.resepDokterIrdaService.dataSourceChildGrid.next(detail);
        this.resepDokterIrdaService.dataSourceParentGrid.next(obat);
        this.GridResepRacikan.refresh();
        this.isGetFromTemplate = true;
    }
    handleAddObat(FormAddObat) {
        if (this.validasi(FormAddObat)) {
            FormAddObat.nama_rute_pemberian_obat = FormAddObat.rute_pemberian_obat;
            this.counter++;
            FormAddObat.counter = this.counter;
            if (FormAddObat.is_racikan) {
                FormAddObat.nama_obat = FormAddObat.nama_racikan;
            }
            else {
                FormAddObat.id_metode_racikan = null;
                FormAddObat.metode_racikan = null;
            }
            //   this.resepDokterService.addDetail(FormAddObat);
            let dataDetail = this.dataSourceGrid.value;
            dataDetail.push(FormAddObat);
            this.dataSourceGrid.next(dataDetail);
            this.resepDokterIrdaService.dataSourceParentGrid.next(dataDetail);
            let racikan;
            racikan = this.GridResepRacikan.childGrid.dataSource;
            console.log(racikan);
            if (this.is_racikan.value && this.DataRacikan.length > 0) {
                console.log(this.DataRacikan);
                this.DataRacikan.forEach((item, index) => {
                    item.counter = this.counter;
                    racikan.push(item);
                });
                this.DataRacikan = [];
            }
            console.log(racikan);
            this.resepDokterIrdaService.dataSourceChildGrid.next(racikan);
            this.GridResepRacikan.refresh();
            this.onResetFormObat();
        }
    }
    validasi(FormData) {
        let message = [];
        let htmlSelection = '';
        console.log('validasi', FormData);
        if (FormData.is_racikan) {
            if (FormData.nama_racikan == '' || FormData.nama_racikan == null) {
                message.push('Nama Racikan belum di isi');
            }
            if (FormData.metode_racikan == '' || FormData.metode_racikan == null) {
                message.push('Kemasan Racikan belum di isi');
            }
        }
        else {
            if (FormData.nama_obat == '' || FormData.nama_obat == null) {
                message.push('obat belum di pillih');
            }
            if (FormData.satuan_aturan_pakai == '' || FormData.satuan_aturan_pakai == null) {
                message.push('Satuan belum di pillih');
            }
        }
        if (FormData.rute_pemberian_obat == '' || FormData.rute_pemberian_obat == null) {
            message.push('Rute Pemberian Obat Obat belum di isi');
        }
        if (FormData.label == '' || FormData.label == null) {
            message.push('Label Obat belum di isi');
        }
        if (FormData.aturan == '' || FormData.aturan == null) {
            message.push('Aturan Tambahan belum di isi');
        }
        if (message.length > 0) {
            htmlSelection = '<div class="text-danger"><ul>';
            message.forEach((value, index) => {
                htmlSelection += `<li>${value}</li>`;
            });
            htmlSelection += `</ul></div>`;
            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default().fire({
                icon: 'error',
                title: 'Validasi Data',
                html: htmlSelection,
            });
            return false;
        }
        else {
            return true;
        }
    }
    onResetFormObat() {
        this.set_racikan_id.setValue(null);
        this.id_metode_racikan.setValue(null);
        this.metode_racikan.setValue('');
        this.id_item.setValue(null);
        this.nama_racikan.setValue('');
        this.nama_obat.setValue('');
        this.nama_satuan.setValue('-');
        this.SatuanObat = "";
        this.is_racikan.setValue(false);
    }
    // ** Update Data Obat method
    onUpdateDataObat(FormAddObat) {
        if (this.validasi(FormAddObat)) {
            FormAddObat.nama_rute_pemberian_obat = FormAddObat.rute_pemberian_obat;
            if (FormAddObat.is_racikan) {
                FormAddObat.nama_obat = FormAddObat.nama_racikan;
            }
            let dataDetail = this.dataSourceGrid.value;
            dataDetail[this.currentIndex] = FormAddObat;
            this.dataSourceGrid.next(dataDetail);
            this.resepDokterIrdaService.dataSourceParentGrid.next(dataDetail);
            this.onResetFormObat();
            this.GridResepRacikan.refresh();
            this.FormAddObatState = "input";
        }
    }
    // ** Grid Daftar Obat method
    onInitalizedGrid(component) {
        this.gridDaftarObat = component;
    }
    // ** Grid Daftar Obat method
    onToolbarClick(args) {
        switch (args.item.id) {
            case "edit":
                //   this.FormAddObat.setValue(this.SelectedDataObat);
                this.onEditData();
                this.FormAddObatState = "edit";
                break;
            case "delete":
                let dataObat = this.resepDokterIrdaService.dataSourceParentGrid.value;
                dataObat.splice(this.currentIndex, 1);
                this.resepDokterIrdaService.dataSourceParentGrid.next(dataObat);
                this.dataSourceGrid.next(dataObat);
                this.GridResepRacikan.refresh();
                break;
            default:
                break;
        }
        ;
    }
    onEditData() {
        let data = this.SelectedDataObat;
        this.FormAddObat.setValue({
            counter: data.counter,
            no_urut: data.no_urut,
            is_racikan: data.is_racikan,
            set_racikan_id: data.set_racikan_id,
            id_metode_racikan: data.id_metode_racikan,
            metode_racikan: data.metode_racikan,
            id_item: data.id_item,
            nama_obat: data.nama_obat,
            qty_resep: data.qty_resep,
            nama_satuan: data.nama_satuan,
            label: data.label,
            ket_label: data.ket_label,
            id_label_pemakaian_obat: data.id_label_pemakaian_obat,
            label_pemakaian_obat: data.label_pemakaian_obat,
            aturan: data.aturan,
            ket_aturan: data.ket_aturan,
            id_tambahan_aturan_pakai: data.id_tambahan_aturan_pakai,
            label_tambahan_aturan_pakai_obat: data.label_tambahan_aturan_pakai_obat,
            nama_racikan: data.nama_racikan,
            id_satuan_aturan_pakai: data.id_satuan_aturan_pakai,
            satuan_aturan_pakai: data.satuan_aturan_pakai,
            jumlah_hari: data.jumlah_hari,
            qty_harian: data.qty_harian,
            id_rute_pemberian_obat: data.id_rute_pemberian_obat,
            rute_pemberian_obat: data.nama_rute_pemberian_obat
        });
    }
    onActionComplete(args) {
        // let dataSourceParent: any = this.GridResepRacikan.dataSource;
        // this.resepDokterIrdaService.dataSourceParentGrid.next(dataSourceParent);
        // console.log("Parent", this.GridResepRacikan.dataSource);
        // console.log("Children", this.GridResepRacikan.childGrid.dataSource);
    }
    // ** Grid Daftar Obat method
    onRowSelected(args) {
        this.currentIndex = args.rowIndex;
        this.SelectedDataObat = args.data;
    }
    Insert() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_25__.__awaiter)(this, void 0, void 0, function* () {
            this.data_header = {
                id_dokter: this.daftarPasienService.ActivePasien.value.id_dokter,
                id_register: this.daftarPasienService.ActivePasien.value.id_register,
                id_outlet: this.setIdOutlet,
                id_person: this.daftarPasienService.ActivePasien.value.id_person,
                jenis_rawat: 'D',
                nama_template: '',
                tanggal_resep: moment__WEBPACK_IMPORTED_MODULE_4___default()().format()
            };
            this.newdetail = this.resepDokterIrdaService.dataSourceParentGrid.value.filter((item) => {
                return item.is_racikan && !item.set_racikan_id;
            });
            this.baru = 0;
            if (!this.isGetFromTemplate) {
                this.modalRef = this.modalService.show(this.modalTemplateResep, Object.assign({}, { class: 'modal-lg' }));
            }
            else {
                this.methodConfirmSetRacikan(0);
            }
        });
    }
    handleClickSimpanTemplateResepDokter() {
        let nama_resep = document.getElementsByName("nama_resep")[0].value;
        this.data_header.nama_template = nama_resep;
        this.modalRef.hide();
        this.methodConfirmSetRacikan(1);
    }
    handleClickAbaikan() {
        this.modalRef.hide();
        this.methodConfirmSetRacikan(0);
    }
    methodConfirmSetRacikan(simpan_template) {
        if (this.newdetail.length > 0) {
            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default().fire({
                title: 'Apakah Anda Ingin Menyimapan Racikan Baru ke dalam Setting Racikan dokter?',
                text: "Racikan akan bisa di gunakan lagi untuk template",
                icon: 'info',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Iya Simpan Sebagai Template Racikan',
                cancelButtonText: 'Tidak',
                focusCancel: true,
            }).then((result) => {
                if (result.isConfirmed) {
                    this.baru = 1;
                }
                else {
                    this.baru = 0;
                }
                this.methodInsert(this.data_header, simpan_template, this.baru);
            });
        }
        else {
            this.methodInsert(this.data_header, simpan_template, 0);
        }
    }
    methodInsert(Data, is_simpan_template, is_simpan_racikan) {
        this.resepDokterIrdaService.Insert(Data, is_simpan_template, is_simpan_racikan).subscribe((result) => {
            this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                .then(() => {
                // this.resepDokterIrdaService.reset();
                this.isGetFromTemplate = false;
                this.router.navigateByUrl('Dokter/resep-irda/daftar-resep-irda');
            });
        });
    }
    ubahResep() {
        if (this.pulang) {
            this.resepDokterIrdaService.pulangResepRawatInap(this.dataUbah).subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Berhasil Simpan Resep Pulang', result.message)
                    .then(() => {
                    const id = this.encryptionService.encrypt(JSON.stringify(result.data));
                    this.router.navigate(['Dokter/resep-irda/view-resep-irda', id, "GRAHCIS"]);
                });
            });
        }
        else {
            this.resepDokterIrdaService.ubahResepRawatInap(this.dataUbah).subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Resep Ini Berhasil Di Ubah', result.message)
                    .then(() => {
                    const id = this.encryptionService.encrypt(JSON.stringify(result.data));
                    this.router.navigate(['Dokter/resep-irda/view-resep-irda', id, "GRAHCIS"]);
                });
            });
        }
    }
    onClickButtonNav(args) {
        switch (args) {
            case "kembali_update":
                const id = this.encryptionService.encrypt(JSON.stringify(this.dataUbah.resep_id));
                this.router.navigate(['Dokter/resep-irda/view-resep-irda', id, "GRAHCIS"]);
                break;
            case "ubah":
                this.ubahResep();
                break;
            case "Kembali":
                this.router.navigateByUrl('Dokter/resep-irda/daftar-resep-irda');
                break;
            case "Template":
                this.handelClickTemplateResep();
                break;
            case "Reset":
                this.resepDokterIrdaService.reset();
                this.isGetFromTemplate = false;
                break;
            case "Simpan":
                this.resepDokterIrdaService.dataSourceChildGrid.next(this.dataScourceGridChild);
                this.Insert();
                break;
            default:
                break;
        }
    }
    handelClickTemplateResep() {
        this.LookupTemplateResep.onOpenModal();
    }
    get tanggal_mulai() { return this.FormAddObat.get('tanggal_mulai'); }
    ;
    get tanggal_sampai() { return this.FormAddObat.get('tanggal_sampai'); }
    ;
    get tanggal_mulai_text() { return this.FormAddObat.get('tanggal_mulai_text'); }
    ;
    get tanggal_sampai_text() { return this.FormAddObat.get('tanggal_sampai_text'); }
    ;
    get is_racikan() { return this.FormAddObat.get('is_racikan'); }
    ;
    get set_racikan_id() { return this.FormAddObat.get('set_racikan_id'); }
    ;
    get id_metode_racikan() { return this.FormAddObat.get('id_metode_racikan'); }
    ;
    get metode_racikan() { return this.FormAddObat.get('metode_racikan'); }
    ;
    get id_item() { return this.FormAddObat.get('id_item'); }
    ;
    get nama_racikan() { return this.FormAddObat.get('nama_racikan'); }
    get nama_obat() { return this.FormAddObat.get('nama_obat'); }
    ;
    get jumlah_hari() { return this.FormAddObat.get('jumlah_hari'); }
    get qty_harian() { return this.FormAddObat.get('qty_harian'); }
    get qty_resep() { return this.FormAddObat.get('qty_resep'); }
    get nama_satuan() { return this.FormAddObat.get('nama_satuan'); }
    get id_rute_pemberian_obat() { return this.FormAddObat.get('id_rute_pemberian_obat'); }
    get rute_pemberian_obat() { return this.FormAddObat.get('rute_pemberian_obat'); }
    get jumlah_satuan_aturan_pakai() { return this.FormAddObat.get('jumlah_satuan_aturan_pakai'); }
    get id_satuan_aturan_pakai() { return this.FormAddObat.get('id_satuan_aturan_pakai'); }
    get satuan_aturan_pakai() { return this.FormAddObat.get('satuan_aturan_pakai'); }
    //   get jumlah_interval_aturan_pakai(): AbstractControl { return this.FormAddObat.get('jumlah_interval_aturan_pakai'); }
    //   get id_interval_aturan_pakai(): AbstractControl { return this.FormAddObat.get('id_interval_aturan_pakai'); }
    //   get interval_aturan_pakai(): AbstractControl { return this.FormAddObat.get('interval_aturan_pakai'); }
    get aturan() { return this.FormAddObat.get('aturan'); }
    get ket_aturan() { return this.FormAddObat.get('ket_aturan'); }
    get id_tambahan_aturan_pakai() { return this.FormAddObat.get('id_tambahan_aturan_pakai'); }
    get label_tambahan_aturan_pakai_obat() { return this.FormAddObat.get('label_tambahan_aturan_pakai_obat'); }
    get label() { return this.FormAddObat.get('label'); }
    get ket_label() { return this.FormAddObat.get('ket_label'); }
    get id_label_pemakaian_obat() { return this.FormAddObat.get('id_label_pemakaian_obat'); }
    get label_pemakaian_obat() { return this.FormAddObat.get('label_pemakaian_obat'); }
}
InputResepIrdaComponent.ɵfac = function InputResepIrdaComponent_Factory(t) { return new (t || InputResepIrdaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_26__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](_services_resep_dokter_irda_resep_dokter_irda_service__WEBPACK_IMPORTED_MODULE_6__.ResepDokterIrdaService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_metode_racikan_setup_metode_racikan_service__WEBPACK_IMPORTED_MODULE_7__.SetupMetodeRacikanService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_rute_pemberian_obat_setup_rute_pemberian_obat_service__WEBPACK_IMPORTED_MODULE_8__.SetupRutePemberianObatService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_satuan_aturan_pakai_setup_satuan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_9__.SetupSatuanAturanPakaiService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_interval_aturan_pakai_setup_interval_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_10__.SetupIntervalAturanPakaiService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_tambahan_aturan_pakai_setup_tambahan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_11__.SetupTambahanAturanPakaiService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_service__WEBPACK_IMPORTED_MODULE_12__.SetupLabelPemakaianObatService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_13__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_14__.BsModalService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_27__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_15__.EncryptionService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_27__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_16__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_17__.SetupOutletService)); };
InputResepIrdaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdefineComponent"]({ type: InputResepIrdaComponent, selectors: [["app-input-resep-irda"]], viewQuery: function InputResepIrdaComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵviewQuery"](_c1, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵviewQuery"](_c2, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵviewQuery"](_c3, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵviewQuery"](_c4, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵloadQuery"]()) && (ctx.LookupRacikan = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵloadQuery"]()) && (ctx.LookupTemplateResep = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵloadQuery"]()) && (ctx.modalTemplateResep = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵloadQuery"]()) && (ctx.GridResepRacikan = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵloadQuery"]()) && (ctx.itemTemplate = _t.first);
    } }, decls: 97, vars: 87, consts: [[3, "ButtonNav", "ShowTitle", "onClickButtonNav"], [1, "form-irna", 3, "formGroup"], [1, "row"], [1, "col-lg-4"], [1, "row", "mb-2"], [1, "col-lg-2", "col-md-1", "col-sm-1", "col-xs-1"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], ["for", "DropdownObat", 1, "form-label"], ["type", "checkbox", "formControlName", "is_racikan", 1, "form-check-input"], ["class", "col-lg-10 col-md-11 col-sm-11 col-xs-11", 4, "ngIf"], ["class", "col-lg-10 col-md-10 col-sm-10 col-xs-10", 4, "ngIf"], ["class", "row", 4, "ngIf"], [1, "col-lg-12"], ["for", "kemasan", 1, "form-label"], ["id", "DropdownLabelPemakaian", "formControlName", "id_rute_pemberian_obat", "popupWidth", "30rem", 3, "allowFiltering", "dataSource", "fields", "change"], ["for", "label", 1, "form-label"], ["id", "DropdownLabelPemakaian", "formControlName", "label", "popupWidth", "30rem", 3, "allowFiltering", "dataSource", "fields", "change"], ["class", "row mb-2", 4, "ngIf"], ["for", "NumericQty", 1, "form-label"], ["id", "DropdownTambahanAturanPakai", "formControlName", "aturan", "popupWidth", "25rem", 3, "allowFiltering", "dataSource", "fields", "change"], [1, "col-lg-6"], ["id", "NumericQty", "formControlName", "qty_harian", 3, "format", "showSpinButton", "readonly", "showClearButton", "ste"], ["id", "NumericQty", "formControlName", "jumlah_hari", 1, "form_paragraf", 3, "format", "showSpinButton", "showClearButton", "ste"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", 3, "disabled", "hidden", "click"], [1, "fas", "fa-plus-circle", "fa-sm"], [3, "hidden"], ["type", "button", 1, "btn", "btn-warning", "btn-sm", 3, "disabled", "hidden", "click"], [1, "fas", "fa-edit", "fa-sm"], [3, "lookup-url", "columns", "columnsChild", "filter-lookup", "modal-title", "queryString", "onGetSelectedData"], ["LookupTemplateResep", ""], [3, "lookup-url", "columns", "columnsChild", "filter-lookup", "modal-title", "onGetSelectedData"], ["LookupRacikan", ""], [1, "col-lg-8"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "LabelCaption"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], ["id", "marital", 3, "dataSource", "fields", "allowFiltering", "change"], ["MaritalOutletDropdown", ""], [1, "card"], [1, "card-body", "p-0"], ["height", "calc(100vh - 22rem)", "gridLines", "Both", "rowHeight", "30", 3, "dataSource", "childGrid", "toolbar", "allowTextWrap", "textWrapSettings", "toolbarClick", "load", "rowDataBound", "dataBound", "rowSelected", "actionComplete"], ["GridResepRacikan", ""], ["field", "no_urut", "headerText", "no_urut", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "is_racikan", "headerText", "is_racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "set_racikan_id", "headerText", "set_racikan_id", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_metode_racikan", "headerText", "id_metode_racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_item", "headerText", "id_item", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_label_pemakaian_obat", "headerText", "id_label_pemakaian_obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_tambahan_aturan_pakai", "headerText", "id_tambahan_aturan_pakai", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_obat", "headerText", "Nama Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_satuan", "headerText", "Satuan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "metode_racikan", "headerText", "Kemasan Racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_obat", "headerText", "Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "rute_pemberian_obat", "headerText", "Pemakaian", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing", "valueAccessor"], ["field", "qty_harian", "headerText", "Qty", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", 3, "visible", "allowEditing", "width", "valueAccessor"], ["field", "ket_aturan", "headerText", "Aturan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["modalTemplateResep", ""], [1, "col-lg-10", "col-md-11", "col-sm-11", "col-xs-11"], ["id", "DropdownObat", "formControlName", "id_item", "popupWidth", "55rem", 3, "allowFiltering", "dataSource", "fields", "placeholder", "query", "sortOrder", "filtering", "change"], ["Drop", ""], [1, "col-lg-10", "col-md-10", "col-sm-10", "col-xs-10"], [1, "input-group"], ["type", "text", "formControlName", "nama_racikan", 1, "form-control", "form-select-sm", 3, "change"], ["id", "btnInputGroup", "type", "button", 1, "btn", "btn-primary", 2, "padding", ".1rem .8rem", "background-color", "#00afff; border: 0", 3, "click"], [1, "fas", "fa-search"], ["formControlName", "id_metode_racikan", 3, "dataSource", "fields", "allowFiltering", "change"], ["MolDropdown", ""], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "pe-1"], ["id", "DropdownLabelPemakaian", "formControlName", "id_satuan_aturan_pakai", "popupWidth", "30rem", 3, "allowFiltering", "dataSource", "fields", "change"], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body", "p-10"], [1, "row", "mx-0", "my-1"], [1, "col-lg-12", "col-md-12", "col-sm-12", 2, "text-align", "center"], [1, "col-lg-12", "col-md-12", "col-sm-12"], [1, "col-sm-4"], ["for", "nama_resep"], [1, "col-sm-8"], ["type", "text", "name", "nama_resep", 1, "form-control", "form-control-sm"], [1, "modal-footer", "background-abu-muda"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], ["type", "button", 1, "btn", "btn-danger", 3, "click"]], template: function InputResepIrdaComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](0, "org-card-layout", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("onClickButtonNav", function InputResepIrdaComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](1, "form", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](5, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](6, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](7, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](8, "label", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](9, "Racik");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](10, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](11, "input", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtemplate"](12, InputResepIrdaComponent_div_12_Template, 8, 7, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtemplate"](13, InputResepIrdaComponent_div_13_Template, 10, 0, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtemplate"](14, InputResepIrdaComponent_div_14_Template, 10, 5, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](15, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](16, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](17, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](18, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](19, "label", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](20, "Rute Pemberian Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](21, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](22, "ejs-combobox", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("change", function InputResepIrdaComponent_Template_ejs_combobox_change_22_listener($event) { return ctx.handleChangeRute($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpipe"](23, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](24, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](25, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](26, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](27, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](28, "label", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](29, "Label");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](30, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](31, "ejs-dropdownlist", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("change", function InputResepIrdaComponent_Template_ejs_dropdownlist_change_31_listener($event) { return ctx.handleChangeLabel($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtemplate"](32, InputResepIrdaComponent_div_32_Template, 8, 3, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](33, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](34, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](35, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](36, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](37, "label", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](38, "Aturan Tambahan");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](39, "ejs-combobox", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("change", function InputResepIrdaComponent_Template_ejs_combobox_change_39_listener($event) { return ctx.handleChangeAturan($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](40, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](41, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](42, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](43, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](44, "label", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](45, "Qty/Hari");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](46, "ejs-numerictextbox", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](47, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](48, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](49, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](50, "label", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](51, "Untuk Berapa Hari");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](52, "ejs-numerictextbox", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](53, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](54, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](55, "button", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("click", function InputResepIrdaComponent_Template_button_click_55_listener() { return ctx.handleAddObat(ctx.FormAddObat.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](56, "i", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](57, "span", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](58, "\u00A0Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](59, "button", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("click", function InputResepIrdaComponent_Template_button_click_59_listener() { return ctx.onUpdateDataObat(ctx.FormAddObat.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](60, "i", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](61, "span", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](62, "\u00A0Edit Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](63, "org-look-up-hirarki", 28, 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("onGetSelectedData", function InputResepIrdaComponent_Template_org_look_up_hirarki_onGetSelectedData_63_listener($event) { return ctx.heandleSelectedTemplateResep($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](65, "org-look-up-hirarki", 30, 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("onGetSelectedData", function InputResepIrdaComponent_Template_org_look_up_hirarki_onGetSelectedData_65_listener($event) { return ctx.handleSelectedRacikan($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](67, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](68, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](69, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](70, "atm-label", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](71, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](72, "ejs-dropdownlist", 36, 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("change", function InputResepIrdaComponent_Template_ejs_dropdownlist_change_72_listener($event) { return ctx.handleChangeOutlet($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpipe"](74, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](75, "div", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](76, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](77, "ejs-grid", 40, 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("toolbarClick", function InputResepIrdaComponent_Template_ejs_grid_toolbarClick_77_listener($event) { return ctx.onToolbarClick($event); })("load", function InputResepIrdaComponent_Template_ejs_grid_load_77_listener($event) { return ctx.onLoad($event); })("rowDataBound", function InputResepIrdaComponent_Template_ejs_grid_rowDataBound_77_listener($event) { return ctx.rowDataBound($event); })("dataBound", function InputResepIrdaComponent_Template_ejs_grid_dataBound_77_listener() { return ctx.onDataBound(); })("rowSelected", function InputResepIrdaComponent_Template_ejs_grid_rowSelected_77_listener($event) { return ctx.onRowSelected($event); })("actionComplete", function InputResepIrdaComponent_Template_ejs_grid_actionComplete_77_listener($event) { return ctx.onActionComplete($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpipe"](79, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](80, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](81, "e-column", 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](82, "e-column", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](83, "e-column", 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](84, "e-column", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](85, "e-column", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](86, "e-column", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](87, "e-column", 48);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](88, "e-column", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](89, "e-column", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](90, "e-column", 51);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](91, "e-column", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](92, "e-column", 53);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](93, "e-column", 54);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](94, "e-column", 55);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtemplate"](95, InputResepIrdaComponent_ng_template_95_Template, 24, 0, "ng-template", null, 56, _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav)("ShowTitle", ctx.ShowTitle);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("formGroup", ctx.FormAddObat);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](11);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("ngIf", !ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("ngIf", ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("ngIf", ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("allowFiltering", true)("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpipeBind1"](23, 80, ctx.setupRutePemberianObatService.dataSource))("fields", ctx.DropdownRuteFields);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx.dataSourceLabelPemakaian)("fields", ctx.DropdownLabelFields);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("ngIf", !ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx.dataSourceTambahanAturanPakai)("fields", ctx.DropdownAturanFields);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("format", "N0")("showSpinButton", false)("readonly", true)("showClearButton", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("format", "N0")("showSpinButton", false)("showClearButton", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("disabled", ctx.FormAddObat.invalid)("hidden", ctx.FormAddObatState != "input");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("hidden", ctx.width >= 1023 && ctx.width <= 1200);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("disabled", ctx.FormAddObat.invalid)("hidden", ctx.FormAddObatState == "input");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("hidden", ctx.width >= 1023 && ctx.width <= 1200);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("lookup-url", ctx.urlTemplateResep)("columns", ctx.GridlookUpTemplateResep.columns)("columnsChild", ctx.GridlookUpTemplateResep.columnsChild)("filter-lookup", ctx.GridlookUpTemplateResep.filter)("modal-title", "Data Template Resep Dokter")("queryString", "resep_id");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("lookup-url", ctx.urlRacikan)("columns", ctx.GridLookUpItem.columns)("columnsChild", ctx.GridLookUpItem.columnsChild)("filter-lookup", ctx.GridLookUpItem.filter)("modal-title", "Data Racikan Dokter");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("LabelCaption", "Depo Farmasi");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpipeBind1"](74, 82, ctx.setupOutletService.dataSource))("fields", ctx.SetupOutletDropdownField)("allowFiltering", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpipeBind1"](79, 84, ctx.dataSourceGrid))("childGrid", ctx.ChildGrid)("toolbar", ctx.GridDaftarObatToolbar)("allowTextWrap", true)("textWrapSettings", _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpureFunction0"](86, _c5));
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", true)("allowEditing", false)("valueAccessor", ctx.keterangan);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 200)("valueAccessor", ctx.quantity);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_18__.OrgCardLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_26__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_26__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_26__.FormGroupDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_26__.CheckboxControlValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_26__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_26__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_28__.NgIf, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_29__.ComboBoxComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_29__.DropDownListComponent, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_30__.NumericTextBoxComponent, _shared_components_organism_loockUp_org_look_up_hirarki_org_look_up_hirarki_component__WEBPACK_IMPORTED_MODULE_19__.OrgLookUpHirarkiComponent, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_20__.AtmLabelComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_31__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_31__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_31__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_31__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_31__.AggregateColumnDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_26__.DefaultValueAccessor], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_28__.AsyncPipe], styles: ["#basic-addon1[_ngcontent-%COMP%] {\r\n    height: 32px;\r\n    padding-left: 12px;\r\n    width: 100%;\r\n    border-top-left-radius: 0;\r\n    border-bottom-left-radius: 0;\r\n    border: 0;\r\n  }\r\n  \r\n  #DropdownObat[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%] {\r\n    border-top-right-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n  }\r\n  \r\n  #NumericQty[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%]    > input[_ngcontent-%COMP%] {\r\n    text-align: right;\r\n    padding-right: 5px;\r\n  }\r\n  \r\n  div.head[_ngcontent-%COMP%] {\r\n    font-size: 13px !important;\r\n    font-weight: 500 !important;\r\n  }\r\n  \r\n  .is-racikan[_ngcontent-%COMP%]{\r\n    background-color: #f3e6f3;\r\n  }\r\n  \r\n  .form_paragraf[_ngcontent-%COMP%]{\r\n    display: inline-block!important;\r\n  }\r\n  \r\n  .form-label[_ngcontent-%COMP%] {\r\n  margin-bottom: 0px;\r\n}\r\n  \r\n  #basic-addon1[_ngcontent-%COMP%] {\r\n  height: 32px;\r\n  padding-left: 12px;\r\n  width: 100%;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  border: 0;\r\n}\r\n  \r\n  .e-toolbar[_ngcontent-%COMP%]   .e-toolbar-item[_ngcontent-%COMP%]   .e-tbar-btn.e-btn[_ngcontent-%COMP%]   .e-icons.e-btn-icon[_ngcontent-%COMP%] {\r\n  min-height: 14px !important;\r\n}\r\n  \r\n  th.e-headercell[_ngcontent-%COMP%] {\r\n  background-color: rgba(0, 0, 0, 0.03);\r\n  color: black;\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  padding: 5px !important;\r\n  height: 30px !important;\r\n}\r\n  \r\n  span.e-headertext[_ngcontent-%COMP%] {\r\n  font-size: 13px !important;\r\n}\r\n  \r\n  td.e-rowcell[_ngcontent-%COMP%] {\r\n  padding: 5px !important;\r\n}\r\n  \r\n  .e-grid[_ngcontent-%COMP%]   .e-detailheadercell[_ngcontent-%COMP%], td.e-detailcell.e-lastrowcell[_ngcontent-%COMP%] {\r\n  background-color: var(--biru-muda) !important;\r\n}\r\n  \r\n  div.e-gridcontent[_ngcontent-%COMP%]   tr.e-detailrow[_ngcontent-%COMP%]   td.e-detailcell[_ngcontent-%COMP%]   div.e-headercontent[_ngcontent-%COMP%]   th.e-headercell[_ngcontent-%COMP%] {\r\n  background-color: var(--biru-muda) !important;\r\n}"] });


/***/ }),

/***/ 91002:
/*!************************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irda/pulang-resep-irda/pulang-resep-irda.component.ts ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache;
var _json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache;
var _json_GridResep_json__WEBPACK_IMPORTED_MODULE_4___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PulangResepIrdaComponent": () => (/* binding */ PulangResepIrdaComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 43479);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 49548);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sweetalert2 */ 88259);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./json/lookupitem.json */ 19801);
/* harmony import */ var _json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./json/lookuptemplateresep.json */ 76071);
/* harmony import */ var _json_GridResep_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./json/GridResep.json */ 36725);
/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @syncfusion/ej2-data */ 78865);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ 26215);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ 16738);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _services_resep_dokter_irda_resep_dokter_irda_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../services/resep-dokter-irda/resep-dokter-irda.service */ 75631);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-label-pemakaian-obat/setup-label-pemakaian-obat.service */ 65203);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_tambahan_aturan_pakai_setup_tambahan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-tambahan-aturan-pakai/setup-tambahan-aturan-pakai.service */ 561);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_satuan_aturan_pakai_setup_satuan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-satuan-aturan-pakai/setup-satuan-aturan-pakai.service */ 43233);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_metode_racikan_setup_metode_racikan_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-metode-racikan/setup-metode-racikan.service */ 6524);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ngx-bootstrap/modal */ 63301);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 26966);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-outlet/setup-outlet.service */ 80443);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../shared/components/atoms/form/atm-label/atm-label.component */ 49130);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 8210);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 48502);
/* harmony import */ var _shared_components_organism_loockUp_org_look_up_hirarki_org_look_up_hirarki_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../shared/components/organism/loockUp/org-look-up-hirarki/org-look-up-hirarki.component */ 54313);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 46555);






























const _c0 = ["LookupRacikan"];
const _c1 = ["LookupTemplateResep"];
const _c2 = ["GridResepRacikan"];
const _c3 = ["itemTemplate"];
const _c4 = ["modalTemplateResep"];
function PulangResepIrdaComponent_div_21_Template(rf, ctx) { if (rf & 1) {
    const _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "label", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Nama Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "ejs-dropdownlist", 59, 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("filtering", function PulangResepIrdaComponent_div_21_Template_ejs_dropdownlist_filtering_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r12); const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r11.onFiltering($event); })("change", function PulangResepIrdaComponent_div_21_Template_ejs_dropdownlist_change_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r12); const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r13.handleChangeObat($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](10, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "span", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx_r1.data)("fields", ctx_r1.fields)("placeholder", ctx_r1.text)("query", ctx_r1.query)("sortOrder", ctx_r1.sorting)("allowFiltering", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtextInterpolate1"](" ", ctx_r1.nama_satuan.value, " ");
} }
function PulangResepIrdaComponent_div_22_Template(rf, ctx) { if (rf & 1) {
    const _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "label", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Nama Racikan Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "input", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("change", function PulangResepIrdaComponent_div_22_Template_input_change_7_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r15); const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r14.handleChangeNamaRacikan(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "button", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function PulangResepIrdaComponent_div_22_Template_button_click_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r15); const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r16.handelClickRacikan($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](9, "i", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
} }
function PulangResepIrdaComponent_div_23_Template(rf, ctx) { if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "label", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Kemasan Racikan");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "ejs-dropdownlist", 69, 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("change", function PulangResepIrdaComponent_div_23_Template_ejs_dropdownlist_change_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19); const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r18.handleChangeMetodeRacikan($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipe"](9, "async");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipeBind1"](9, 3, ctx_r3.setupMetodeRacikanService.dataSource))("fields", ctx_r3.DropdownMetodeRacikanFields)("allowFiltering", true);
} }
function PulangResepIrdaComponent_div_38_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "label", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Satuan");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "ejs-combobox", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("change", function PulangResepIrdaComponent_div_38_Template_ejs_combobox_change_6_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r21); const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r20.handleChangeSatuanAturan($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx_r4.dataSourceSatuanAturanPakai)("fields", ctx_r4.DropdownsatuanPakaiFields);
} }
function PulangResepIrdaComponent_ng_template_83_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "h5", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](2, "Simpan Template Resep Dokter");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "button", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function PulangResepIrdaComponent_ng_template_83_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r23); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r22.modalRef.hide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](4, "i", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "h2");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](9, "Apakah Dokter Ingin Menyimapan Resep Ini Sebagai Template Resep?");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](10, "p");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](11, "Template resep di gunakan untuk membuat resep dengan data resep yg sudah ada");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](12, "div", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](13, "div", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](14, "div", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](15, "label", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](16, "strong");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](17, "Nama Template Resep");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](18, "div", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](19, "input", 84);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](20, "div", 85);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](21, "button", 86);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function PulangResepIrdaComponent_ng_template_83_Template_button_click_21_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r23); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r24.handleClickSimpanTemplateResepDokter(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](22, "Simpan Template Resep");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](23, "button", 87);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function PulangResepIrdaComponent_ng_template_83_Template_button_click_23_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r23); const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r25.handleClickAbaikan(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](24, "Tidak");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
} }
class PulangResepIrdaComponent {
    constructor(formBuilder, resepDokterIrdaService, setupLabelPemakaianObatService, setupTambahanAturanPakaiService, setupSatuanAturanPakaiService, setupMetodeRacikanService, renderer, daftarPasienService, router, modalService, utilityService, setupOutletService) {
        this.formBuilder = formBuilder;
        this.resepDokterIrdaService = resepDokterIrdaService;
        this.setupLabelPemakaianObatService = setupLabelPemakaianObatService;
        this.setupTambahanAturanPakaiService = setupTambahanAturanPakaiService;
        this.setupSatuanAturanPakaiService = setupSatuanAturanPakaiService;
        this.setupMetodeRacikanService = setupMetodeRacikanService;
        this.renderer = renderer;
        this.daftarPasienService = daftarPasienService;
        this.router = router;
        this.modalService = modalService;
        this.utilityService = utilityService;
        this.setupOutletService = setupOutletService;
        this.ShowTitle = true;
        this.ButtonNav = [
            { Id: 'kembali', Captions: 'Kembali', Icons1: 'fa-arrow-left fa-sm' },
            { Id: 'simpan', Captions: 'Simpan Resep Pulang', Icons1: 'fas fa-save fa-sm' },
        ];
        this.onSetTemplateResep = new _angular_core__WEBPACK_IMPORTED_MODULE_18__.EventEmitter();
        this.urlRacikan = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_RACIKAN;
        this.urlTemplateResep = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_TEMPLATE_RESEP;
        this.GridLookUpItem = /*#__PURE__*/ (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_2__, 2)));
        this.GridlookUpTemplateResep = /*#__PURE__*/ (_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache || (_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache = __webpack_require__.t(_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3__, 2)));
        this.isGetFromTemplate = false;
        this.DropdownLabelFields = { text: "nama_label_pemakaian_obat", value: "id_label_pemakaian_obat" };
        this.DropdownAturanFields = { text: "tambahan_aturan_pakai", value: "id_tambahan_aturan_pakai" };
        this.DropdownsatuanPakaiFields = { text: "satuan_aturan_pakai", value: "id_satuan_aturan_pakai" };
        this.SetupOutletDropdownField = { text: 'nama_outlet', value: 'id_outlet' };
        this.FormAddObatState = "input";
        // ** Satuan 
        this.SatuanObat = "-";
        this.DropdownObatFields = { text: 'nama_obat', value: 'id_item' };
        this.DropdownMetodeRacikanFields = { text: 'metode_racikan', value: 'id_metode_racikan' };
        this.NamaObatDatasource = [];
        // ** Waktu Pakai
        this.WaktuPakai = [];
        // ** Grid Daftar Obat Properties
        this.GridDaftarObatEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
        this.GridDaftarObatDataSource = [];
        this.GridDaftarObatColumns = /*#__PURE__*/ (_json_GridResep_json__WEBPACK_IMPORTED_MODULE_4___namespace_cache || (_json_GridResep_json__WEBPACK_IMPORTED_MODULE_4___namespace_cache = __webpack_require__.t(_json_GridResep_json__WEBPACK_IMPORTED_MODULE_4__, 2)));
        this.GridDetailResepRacikanDatasource = [];
        this.GridResepRacikanDatasource = [];
        this.dataSourceLabelPemakaian = [];
        this.dataSourceTambahanAturanPakai = [];
        this.dataSourceSatuanAturanPakai = [];
        this.counter = 0;
        this.counterRacikan = 0;
        this.dataSourceGrid = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject([]);
        this.dataScourceGridChild = [];
        // SERVER SIDE 
        this.IsUserLogin = JSON.parse(localStorage.getItem('UserData'));
        this.data = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.DataManager({
            headers: [
                {
                    Authorization: "Bearer " + this.IsUserLogin.token
                }
            ],
            url: src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_OBAT_PARAMS_DROPDOWNLIST,
            adaptor: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.ODataV4Adaptor,
            crossDomain: true,
        });
        this.fields = { text: 'nama_obat', value: 'id_item' };
        this.query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where("msi.nama_item", 'contains', '', true);
        this.text = "Select a Obat";
        this.sorting = 'Ascending';
        this.onFiltering = (e) => {
            // load overall data when search key empty.
            if (e.text === '') {
                e.updateData(this.data);
            }
            else {
                let query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where("msi.nama_item", 'contains', e.text, true);
                e.updateData(this.data, query);
            }
        };
        //=====================
        this.dataChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.DataManager({
            headers: [
                {
                    Authorization: "Bearer " + this.IsUserLogin.token
                }
            ],
            url: src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_OBAT_PARAMS_DROPDOWNLIST,
            adaptor: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.ODataV4Adaptor,
            crossDomain: true,
        });
        this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where("msi.nama_item", 'contains', '', true);
        this.dataheader = null;
        this.baru = 0;
        this.setIdOutlet = 0;
    }
    get width() { return window.innerWidth; }
    ;
    ngOnInit() {
        this.FormAddObat = this.formBuilder.group({
            counter: [0, []],
            is_racikan: [false, []],
            no_urut: [0, []],
            set_racikan_id: [null, []],
            id_metode_racikan: [null, []],
            metode_racikan: ['', []],
            id_item: [null, []],
            nama_racikan: ['', []],
            nama_obat: ['', []],
            qty_resep: ['', []],
            nama_satuan: ['-', []],
            label: ['', []],
            ket_label: ['', []],
            id_label_pemakaian_obat: [null, []],
            label_pemakaian_obat: ['', []],
            id_satuan_aturan_pakai: [null, []],
            satuan_aturan_pakai: [null, []],
            aturan: ['', []],
            ket_aturan: ['', []],
            id_tambahan_aturan_pakai: [null, []],
            label_tambahan_aturan_pakai_obat: ['', []],
        });
        this.GridDaftarObatToolbar = [
            { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
            { text: 'Delete', tooltipText: 'Delete', prefixIcon: 'fas fa-trash-alt fa-sm', id: 'delete' },
            'Search'
        ];
        let currentQtyResep = this.currentQtyResep;
        let currentIdItem = this.currentIdItem;
        let SelectedDataRacikanObat = this.SelectedDataRacikanObat;
        this.resepDokterIrdaService.dataSelectRacikan.next(SelectedDataRacikanObat);
        this.itemsParams = {
            create: () => {
                if (SelectedDataRacikanObat) {
                    this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.Query().from('Obat')
                        .select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan'])
                        .take(10).where("msi.nama_item", 'contains', SelectedDataRacikanObat.nama_obat, true);
                }
                else {
                    this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.Query().from('Obat')
                        .select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan'])
                        .take(10).where("msi.nama_item", 'contains', '', true);
                }
                this.itemsElem = document.createElement('input');
                return this.itemsElem;
            },
            read: () => {
                return this.itemsObj.text;
            },
            destroy: () => {
                this.itemsObj.destroy();
            },
            write: () => {
                this.itemsObj = new _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_21__.DropDownList({
                    dataSource: this.dataChild,
                    fields: this.fields,
                    query: this.queryChild,
                    enabled: true,
                    placeholder: 'Select a obat',
                    // floatLabelType: 'Never',
                    allowFiltering: true,
                    popupWidth: '55rem',
                    filtering: function (e) {
                        if (e.text === '') {
                            e.updateData(this.data);
                        }
                        else {
                            let query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where("msi.nama_item", 'contains', e.text, true);
                            e.updateData(this.data, query);
                        }
                    }.bind(this),
                    change: function (args) {
                        currentIdItem = args.itemData.id_item;
                        console.log('currentItem', currentIdItem);
                        this.setFormGrif(args, currentQtyResep, currentIdItem, SelectedDataRacikanObat);
                    }.bind(this),
                });
                this.itemsObj.appendTo(this.itemsElem);
                if (SelectedDataRacikanObat) {
                    this.setFormGrif(null, SelectedDataRacikanObat.qty_resep, currentIdItem, SelectedDataRacikanObat);
                    setTimeout(() => {
                        console.log('', SelectedDataRacikanObat);
                        currentIdItem = SelectedDataRacikanObat.id_item;
                        this.itemsObj.value = currentIdItem;
                    }, 10);
                }
            }
        };
        let counterRacikan = this.counterRacikan;
        let dataSourceChild = this.dataScourceGridChild;
        let dataSourceGrid = this.dataSourceGrid;
        this.resepDokterIrdaService.dataSourceChildGrid.next(dataSourceChild);
        this.resepDokterIrdaService.dataSourceParentGrid.next(dataSourceGrid.value);
        let nav = 'add';
        this.ChildGrid = {
            dataSource: this.dataScourceGridChild,
            queryString: "counter",
            rowHeight: 30,
            allowResizing: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: 'Both' },
            toolbar: ['Add', 'Edit', 'Delete', 'Update', 'Cancel'],
            editSettings: { allowEditing: true, allowAdding: true, allowDeleting: true },
            columns: [
                { field: "counter", headerText: 'c', width: 100, visible: false },
                { field: "no_urut", headerText: 'ID Obat', visible: false },
                { field: "nama_obat", headerText: 'Nama Obat', editType: 'dropdownedit', edit: this.itemsParams, width: 200 },
                { field: "nama_satuan", headerText: 'Satuan', textAlign: 'Right', width: 80, allowEditing: false },
                { field: "id_item", headerText: 'id', width: 100, visible: false },
                { field: "komposisi", headerText: 'kps', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2', allowEditing: false },
                { field: "seper", headerText: '1/', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                { field: "kandungan", headerText: 'Kandungan', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                { field: "qty_resep", headerText: 'qty', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2', visible: false },
                { field: "qty_racikan", headerText: 'QTY', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                { field: "keterangan", headerText: 'Keterangan', headerTextAlign: 'Center', textAlign: 'Left', width: 100 },
            ],
            rowSelected(args) {
                SelectedDataRacikanObat = args.data;
                console.log('row selected', SelectedDataRacikanObat);
            },
            actionBegin(args) {
                console.log('begin', args);
                if (args.requestType === 'add') {
                    const counter = 'counter';
                    args.data[counter] = this.parentDetails.parentKeyFieldValue;
                    args.data['qty_resep'] = this.parentDetails.parentRowData.qty_resep;
                    //   (args.data as object)['counterRacikan'] = counterRacikan++;
                    currentQtyResep = this.parentDetails.parentRowData.qty_resep;
                    SelectedDataRacikanObat = null;
                }
                // if (args.requestType === 'beginEdit'){
                //     SelectedDataRacikanObat = args.rowData;
                // }
            },
            actionComplete(args) {
                console.log(args);
                if (args.requestType == 'save') {
                    if (args.action == 'add') {
                        args.data.id_item = currentIdItem;
                        args.data.counterRacikan = counterRacikan++;
                        args.data.qty_racikan = parseFloat(args.data.qty_racikan);
                        console.log(dataSourceChild);
                        dataSourceChild.push(args.data);
                    }
                    if (args.action == 'edit') {
                        args.data.id_item = currentIdItem;
                        args.data.qty_racikan = parseFloat(args.data.qty_racikan);
                        let index = dataSourceChild.map((item) => { return item.counterRacikan; }).indexOf(args.data.counterRacikan);
                        dataSourceChild[index] = args.data;
                    }
                    let data = [];
                    dataSourceChild.orderBy('-counterRacikan');
                    dataSourceGrid.value.forEach((itemPrent, indexPrent) => {
                        data.push(itemPrent);
                    });
                    setTimeout(() => {
                        dataSourceGrid.next(data);
                        console.log(data);
                    }, 500);
                }
                if (args.requestType == "delete") {
                    let index = dataSourceChild.map((item) => { return item.counterRacikan; }).indexOf(args.data[0].counterRacikan);
                    dataSourceChild.splice(index, 1);
                    let data = [];
                    dataSourceChild.orderBy('-counterRacikan');
                    dataSourceGrid.value.forEach((itemPrent, indexPrent) => {
                        data.push(itemPrent);
                    });
                    setTimeout(() => {
                        dataSourceGrid.next(data);
                        console.log(data);
                    }, 500);
                }
            }
        };
        this.setupLabelPemakaianObatService.onGetAll().subscribe((result) => {
            this.dataSourceLabelPemakaian = result.data;
        });
        this.setupTambahanAturanPakaiService.onGetAll().subscribe((result) => {
            this.dataSourceTambahanAturanPakai = result.data;
        });
        this.setupSatuanAturanPakaiService.onGetAll().subscribe((result) => {
            this.dataSourceSatuanAturanPakai = result.data;
        });
        this.setupMetodeRacikanService.setDataSource();
        this.resepDokterIrdaService.setDataObat([]);
        this.urlTemplateResep = this.urlTemplateResep + '/' + this.daftarPasienService.ActivePasien.value.id_dokter;
        this.urlRacikan = this.urlRacikan + '/' + this.daftarPasienService.ActivePasien.value.id_dokter + '/J';
        this.setupOutletService.setDataSource();
        if ((this.router.url).includes('Dokter')) {
            this.ShowTitle = true;
        }
    }
    onLoad(args) {
    }
    setFormGrif(args, currentQtyResep, id_item, SelectedDataRacikanObat) {
        // console.log('function setgrid',SelectedDataRacikanObat);
        if (SelectedDataRacikanObat) {
            document.getElementsByName("nama_satuan")[0].value = SelectedDataRacikanObat.nama_satuan;
            document.getElementsByName("komposisi")[0].value = SelectedDataRacikanObat.komposisi;
            document.getElementsByName("seper")[0].value = SelectedDataRacikanObat.seper;
            document.getElementsByName("kandungan")[0].value = SelectedDataRacikanObat.kandungan;
            document.getElementsByName("qty_racikan")[0].value = SelectedDataRacikanObat.qty_racikan;
        }
        else {
            document.getElementsByName("nama_satuan")[0].value = args.itemData.nama_satuan;
            document.getElementsByName("komposisi")[0].value = args.itemData.kandungan_obat;
            document.getElementsByName("seper")[0].value = '1';
            document.getElementsByName("kandungan")[0].value = args.itemData.kandungan_obat;
            document.getElementsByName("qty_racikan")[0].value = currentQtyResep.toString();
        }
        let seper = document.getElementsByName("seper")[0];
        if (seper) {
            seper.addEventListener('click', (event) => {
                seper.select();
            });
            seper.addEventListener('keyup', (event) => {
                let komposisi = parseInt(document.getElementsByName("komposisi")[0].value);
                let seper = parseInt(document.getElementsByName("seper")[0].value);
                let hasil = komposisi / seper;
                document.getElementsByName("kandungan")[0].value = hasil.toString();
                let butuh = currentQtyResep * hasil;
                let qty = butuh / komposisi;
                document.getElementsByName("qty_racikan")[0].value = qty.toString();
            });
            this.setInputFilter(seper, function (value) {
                return /^\d*$/.test(value);
            });
        }
        let kandungan = document.getElementsByName("kandungan")[0];
        if (kandungan) {
            kandungan.addEventListener('click', (event) => {
                kandungan.select();
            });
            kandungan.addEventListener('keyup', (event) => {
                let kandungan = parseInt(document.getElementsByName("kandungan")[0].value);
                let komposisi = parseInt(document.getElementsByName("komposisi")[0].value);
                let butuh = currentQtyResep * kandungan;
                console.log(butuh);
                let qty = butuh / komposisi;
                document.getElementsByName("qty_racikan")[0].value = qty.toString();
                document.getElementsByName("seper")[0].value = '1';
            });
            this.setInputFilter(kandungan, function (value) {
                return /^\d*$/.test(value);
            });
        }
        let qty_racikan = document.getElementsByName("qty_racikan")[0];
        if (qty_racikan) {
            qty_racikan.addEventListener('click', (event) => {
                qty_racikan.select();
            });
            this.setInputFilter(qty_racikan, function (value) {
                return /^\d*$/.test(value);
            });
        }
    }
    setInputFilter(textbox, inputFilter) {
        ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function (event) {
            textbox.addEventListener(event, function () {
                if (inputFilter(this.value)) {
                    this.oldValue = this.value;
                    this.oldSelectionStart = this.selectionStart;
                    this.oldSelectionEnd = this.selectionEnd;
                }
                else if (Object.prototype.hasOwnProperty.call(this, 'oldValue')) {
                    this.value = this.oldValue;
                    if (this.oldSelectionStart !== null &&
                        this.oldSelectionEnd !== null) {
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    }
                }
                else {
                    this.value = "";
                }
            });
        });
    }
    rowDataBound(args) {
        var is_racikan = args.data.is_racikan;
        if (!is_racikan) {
            //here hide which parent row has no child records
            args.row.querySelector('td').innerHTML = " ";
            args.row.querySelector('td').className = "e-customizedExpandcell";
        }
        else {
            // args.row.classList.add('is-racikan');
        }
    }
    onDataBound() {
        this.GridResepRacikan.detailRowModule.expandAll();
    }
    // ** Dropdown Nama Obat onchange method
    handleChangeObat(args) {
        this.nama_satuan.setValue(args.itemData.nama_satuan);
        this.nama_obat.setValue(args.itemData.nama_obat);
    }
    handleChangeLabel(args) {
        if (typeof args.value === 'number' && (args.value % 1) === 0) {
            this.label_pemakaian_obat.setValue('');
            this.id_label_pemakaian_obat.setValue(args.value);
            this.ket_label.setValue(args.itemData.nama_label_pemakaian_obat);
        }
        else {
            this.label_pemakaian_obat.setValue(args.value);
            this.id_label_pemakaian_obat.setValue(1);
            this.ket_label.setValue(args.itemData.nama_label_pemakaian_obat);
        }
    }
    handleChangeAturan(args) {
        if (typeof args.value === 'number' && (args.value % 1) === 0) {
            this.label_tambahan_aturan_pakai_obat.setValue('');
            this.id_tambahan_aturan_pakai.setValue(args.value);
            this.ket_aturan.setValue(args.itemData.tambahan_aturan_pakai);
        }
        else {
            this.label_tambahan_aturan_pakai_obat.setValue(args.value);
            this.id_tambahan_aturan_pakai.setValue(1);
            this.ket_aturan.setValue(args.itemData.tambahan_aturan_pakai);
        }
    }
    handleChangeSatuanAturan(args) {
        this.satuan_aturan_pakai.setValue(args.itemData.satuan_aturan_pakai);
    }
    handleChangeNamaRacikan() {
        this.set_racikan_id.setValue(null);
    }
    handelClickRacikan() {
        this.LookupRacikan.onOpenModal();
    }
    handelClickTemplateResep() {
        this.LookupTemplateResep.onOpenModal();
    }
    handleChangeMetodeRacikan(args) {
        this.metode_racikan.setValue(args.itemData.metode_racikan);
    }
    handleChangeOutlet(args) {
        this.setIdOutlet = args.value;
    }
    heandleSelectedRacikan(args) {
        this.counter++;
        args.counter = this.counter;
        args.is_racikan = true;
        args.no_urut = 0;
        args.id_item = null;
        args.nama_satuan = null;
        args.label = null;
        args.nama_racikan = args.nama_obat;
        args.label = args.ket_label;
        args.aturan = args.ket_aturan;
        // this.resepDokterService.addDetail(args);
        let dataObat = this.dataSourceGrid.value;
        dataObat.push(args);
        this.dataSourceGrid.next(dataObat);
        this.resepDokterIrdaService.dataSourceParentGrid.next(dataObat);
        let detail;
        detail = this.GridResepRacikan.childGrid.dataSource;
        args.details.forEach(element => {
            let counterRacikan = this.counterRacikan++;
            element.counter = this.counter;
            element.counterRacikan = counterRacikan;
            element.komposisi = element.kandungan_obat;
            element.kandungan = 1;
            element.seper = 1;
            element.qty_resep = args.qty_resep;
            detail.push(element);
        });
        this.resepDokterIrdaService.dataSourceChildGrid.next(detail);
        this.GridResepRacikan.refresh();
    }
    heandleSelectedTemplateResep(args) {
        console.log(args);
        let obat = [];
        let detail;
        detail = this.GridResepRacikan.childGrid.dataSource;
        args.details.forEach(element => {
            this.counter++;
            element.counter = this.counter;
            if (element.is_racikan) {
                element.nama_racikan = element.nama_obat;
            }
            else {
                element.nama_racikan = '';
            }
            if (element.id_label_pemakaian_obat == 1) {
                element.label = element.ket_label;
            }
            else {
                element.label = element.id_label_pemakaian_obat;
            }
            if (element.id_tambahan_aturan_pakai == 1) {
                element.aturan = element.ket_aturan;
            }
            else {
                element.aturan = element.id_tambahan_aturan_pakai;
            }
            // this.resepDokterService.addDetail(element);
            obat.push(element);
            element.racikans.forEach(racikan => {
                let counterRacikan = this.counterRacikan++;
                racikan.counter = this.counter;
                racikan.counterRacikan = counterRacikan;
                racikan.komposisi = parseInt(racikan.kandungan_obat);
                racikan.kandungan = 1;
                racikan.seper = 1;
                racikan.qty_resep = element.qty_resep;
                detail.push(racikan);
            });
        });
        this.dataSourceGrid.next(obat);
        this.resepDokterIrdaService.dataSourceChildGrid.next(detail);
        this.resepDokterIrdaService.dataSourceParentGrid.next(obat);
        this.GridResepRacikan.refresh();
        this.onSetTemplateResep.emit(true);
    }
    handleAddObat(FormAddObat) {
        if (this.validasi(FormAddObat)) {
            this.counter++;
            FormAddObat.counter = this.counter;
            if (FormAddObat.is_racikan) {
                FormAddObat.nama_obat = FormAddObat.nama_racikan;
            }
            else {
                FormAddObat.id_metode_racikan = null;
                FormAddObat.metode_racikan = null;
            }
            // this.resepDokterService.addDetail(FormAddObat);
            let dataDetail = this.dataSourceGrid.value;
            dataDetail.push(FormAddObat);
            this.dataSourceGrid.next(dataDetail);
            this.resepDokterIrdaService.dataSourceParentGrid.next(dataDetail);
            this.GridResepRacikan.refresh();
            this.onResetFormObat();
        }
    }
    validasi(FormData) {
        let message = [];
        let htmlSelection = '';
        console.log('validasi', FormData);
        if (FormData.is_racikan) {
            if (FormData.nama_racikan == '' || FormData.nama_racikan == null) {
                message.push('Nama Racikan belum di isi');
            }
            if (FormData.metode_racikan == '' || FormData.metode_racikan == null) {
                message.push('Kemasan Racikan belum di isi');
            }
        }
        else {
            if (FormData.nama_obat == '' || FormData.nama_obat == null) {
                message.push('obat belum di pillih');
            }
            if (FormData.satuan_aturan_pakai == '' || FormData.satuan_aturan_pakai == null) {
                message.push('Satuan belum di pillih');
            }
        }
        if (FormData.label == '' || FormData.label == null) {
            message.push('Label Obat belum di isi');
        }
        if (FormData.aturan == '' || FormData.aturan == null) {
            message.push('Aturan Tambahan belum di isi');
        }
        if (message.length > 0) {
            htmlSelection = '<div class="text-danger"><ul>';
            message.forEach((value, index) => {
                htmlSelection += `<li>${value}</li>`;
            });
            htmlSelection += `</ul></div>`;
            sweetalert2__WEBPACK_IMPORTED_MODULE_1___default().fire({
                icon: 'error',
                title: 'Validasi Data',
                html: htmlSelection,
            });
            return false;
        }
        else {
            return true;
        }
    }
    onResetFormObat() {
        this.FormAddObat.reset();
        this.qty_resep.setValue(1);
        this.is_racikan.setValue(false);
    }
    // ** Update Data Obat method
    onUpdateDataObat(FormAddObat) {
        if (this.validasi(FormAddObat)) {
            if (FormAddObat.is_racikan) {
                FormAddObat.nama_obat = FormAddObat.nama_racikan;
            }
            let dataDetail = this.dataSourceGrid.value;
            dataDetail[this.currentIndex] = FormAddObat;
            this.dataSourceGrid.next(dataDetail);
            this.resepDokterIrdaService.dataSourceParentGrid.next(dataDetail);
            this.onResetFormObat();
            this.GridResepRacikan.refresh();
            this.FormAddObatState = "input";
        }
    }
    // ** Reset Form Add Obat 
    onResetFormDataObat() {
        this.FormAddObat.reset();
        this.SatuanObat = "";
    }
    // ** Grid Daftar Obat method
    onInitalizedGrid(component) {
        this.gridDaftarObat = component;
    }
    // ** Grid Daftar Obat method
    onToolbarClick(args) {
        switch (args.item.id) {
            case "edit":
                // this.FormAddObat.setValue(this.SelectedDataObat);
                this.onEditData();
                this.FormAddObatState = "edit";
                break;
            case "delete":
                let dataObat = this.resepDokterIrdaService.dataSourceParentGrid.value;
                dataObat.splice(this.currentIndex, 1);
                this.resepDokterIrdaService.dataSourceParentGrid.next(dataObat);
                this.dataSourceGrid.next(dataObat);
                this.GridResepRacikan.refresh();
                break;
            default:
                break;
        }
        ;
    }
    onEditData() {
        let data = this.SelectedDataObat;
        this.FormAddObat.setValue({
            counter: data.counter,
            no_urut: data.no_urut,
            is_racikan: data.is_racikan,
            set_racikan_id: data.set_racikan_id,
            id_metode_racikan: data.id_metode_racikan,
            metode_racikan: data.metode_racikan,
            id_item: data.id_item,
            nama_obat: data.nama_obat,
            qty_resep: data.qty_resep,
            nama_satuan: data.nama_satuan,
            label: data.label,
            ket_label: data.ket_label,
            id_label_pemakaian_obat: data.id_label_pemakaian_obat,
            label_pemakaian_obat: data.label_pemakaian_obat,
            aturan: data.aturan,
            ket_aturan: data.ket_aturan,
            id_tambahan_aturan_pakai: data.id_tambahan_aturan_pakai,
            label_tambahan_aturan_pakai_obat: data.label_tambahan_aturan_pakai_obat,
            nama_racikan: data.nama_racikan,
            id_satuan_aturan_pakai: data.id_satuan_aturan_pakai,
            satuan_aturan_pakai: data.satuan_aturan_pakai,
        });
    }
    onActionComplete(args) {
        // let dataSourceParent: any = this.GridResepRacikan.dataSource;
        // this.resepDokterIrdaService.dataSourceParentGrid.next(dataSourceParent);
        // console.log("Parent", this.GridResepRacikan.dataSource);
        // console.log("Children", this.GridResepRacikan.childGrid.dataSource);
    }
    // ** Grid Daftar Obat method
    onRowSelected(args) {
        this.currentIndex = args.rowIndex;
        this.SelectedDataObat = args.data;
    }
    onClickButtonNav(args) {
        switch (args) {
            case "simpan":
                this.Insert();
                break;
            case "kembali":
                this.router.navigateByUrl('Dokter/resep-irda/daftar-resep-irda');
                break;
            default:
                break;
        }
    }
    Insert() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_22__.__awaiter)(this, void 0, void 0, function* () {
            this.dataheader = {
                id_dokter: this.daftarPasienService.ActivePasien.value.id_dokter,
                id_register: this.daftarPasienService.ActivePasien.value.id_register,
                id_outlet: this.setIdOutlet,
                id_person: this.daftarPasienService.ActivePasien.value.id_person,
                jenis_rawat: 'D',
                nama_template: '',
                tanggal_resep: moment__WEBPACK_IMPORTED_MODULE_5___default()().format()
            };
            this.newdetail = this.resepDokterIrdaService.dataSourceParentGrid.value.filter((item) => {
                return item.is_racikan && !item.set_racikan_id;
            });
            this.baru = 0;
            if (!this.isGetFromTemplate) {
                // this.modalRef = this.modalService.show(
                //     this.modalTemplateResep,
                //     Object.assign({}, { class: 'modal-lg' })
                // );
                this.methodConfirmSetRacikan(0);
            }
            else {
                this.methodConfirmSetRacikan(0);
            }
        });
    }
    handleClickSimpanTemplateResepDokter() {
        let nama_resep = document.getElementsByName("nama_resep")[0].value;
        this.dataheader.nama_template = nama_resep;
        this.modalRef.hide();
        this.methodConfirmSetRacikan(1);
    }
    handleClickAbaikan() {
        this.modalRef.hide();
        this.methodConfirmSetRacikan(0);
    }
    methodConfirmSetRacikan(simpan_template) {
        if (this.newdetail.length > 0) {
            sweetalert2__WEBPACK_IMPORTED_MODULE_1___default().fire({
                title: 'Apakah Anda Ingin Menyimapan Racikan Baru ke dalam Setting Racikan dokter?',
                text: "Racikan akan bisa di gunakan lagi untuk template",
                icon: 'info',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Iya, Saya Yakin',
                cancelButtonText: 'Tidak',
                focusCancel: true,
            }).then((result) => {
                if (result.isConfirmed) {
                    this.baru = 1;
                }
                else {
                    this.baru = 0;
                }
                this.methodInsert(this.dataheader, simpan_template, this.baru);
            });
        }
        else {
            this.methodInsert(this.dataheader, simpan_template, 0);
        }
    }
    methodInsert(Data, is_simpan_template, is_simpan_racikan) {
        this.resepDokterIrdaService.Pulang(Data, is_simpan_template, is_simpan_racikan).subscribe((result) => {
            this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                .then(() => {
                //   this.resepDokterIrdaService.reset();
                window.location.reload();
                this.isGetFromTemplate = false;
            });
        });
    }
    get is_racikan() { return this.FormAddObat.get('is_racikan'); }
    ;
    get set_racikan_id() { return this.FormAddObat.get('set_racikan_id'); }
    ;
    get id_metode_racikan() { return this.FormAddObat.get('id_metode_racikan'); }
    ;
    get metode_racikan() { return this.FormAddObat.get('metode_racikan'); }
    ;
    get id_item() { return this.FormAddObat.get('id_item'); }
    ;
    get nama_obat() { return this.FormAddObat.get('nama_obat'); }
    ;
    get qty_resep() { return this.FormAddObat.get('qty_resep'); }
    get nama_satuan() { return this.FormAddObat.get('nama_satuan'); }
    get label() { return this.FormAddObat.get('label'); }
    get ket_label() { return this.FormAddObat.get('ket_label'); }
    get id_label_pemakaian_obat() { return this.FormAddObat.get('id_label_pemakaian_obat'); }
    get label_pemakaian_obat() { return this.FormAddObat.get('label_pemakaian_obat'); }
    get aturan() { return this.FormAddObat.get('aturan'); }
    get ket_aturan() { return this.FormAddObat.get('ket_aturan'); }
    get id_tambahan_aturan_pakai() { return this.FormAddObat.get('id_tambahan_aturan_pakai'); }
    get label_tambahan_aturan_pakai_obat() { return this.FormAddObat.get('label_tambahan_aturan_pakai_obat'); }
    get nama_racikan() { return this.FormAddObat.get('nama_racikan'); }
    get satuan_aturan_pakai() { return this.FormAddObat.get('satuan_aturan_pakai'); }
    ;
}
PulangResepIrdaComponent.ɵfac = function PulangResepIrdaComponent_Factory(t) { return new (t || PulangResepIrdaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_23__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_resep_dokter_irda_resep_dokter_irda_service__WEBPACK_IMPORTED_MODULE_6__.ResepDokterIrdaService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_service__WEBPACK_IMPORTED_MODULE_7__.SetupLabelPemakaianObatService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_tambahan_aturan_pakai_setup_tambahan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_8__.SetupTambahanAturanPakaiService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_satuan_aturan_pakai_setup_satuan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_9__.SetupSatuanAturanPakaiService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_metode_racikan_setup_metode_racikan_service__WEBPACK_IMPORTED_MODULE_10__.SetupMetodeRacikanService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_18__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_11__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_24__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_12__.BsModalService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_13__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_14__.SetupOutletService)); };
PulangResepIrdaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdefineComponent"]({ type: PulangResepIrdaComponent, selectors: [["app-pulang-resep-irda"]], viewQuery: function PulangResepIrdaComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c1, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c2, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c3, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c4, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.LookupRacikan = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.LookupTemplateResep = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.GridResepRacikan = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.itemTemplate = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.modalTemplateResep = _t.first);
    } }, outputs: { onSetTemplateResep: "onSetTemplateResep" }, decls: 85, vars: 73, consts: [[3, "ButtonNav", "ShowTitle", "onClickButtonNav"], [3, "formGroup"], [1, "row", "pt-2", "mb-2"], [1, "row"], [1, "col-sm-6"], [1, "card"], [1, "card-body", "p-2"], [1, "row", "mb-2"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "LabelCaption"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], ["id", "marital", 3, "dataSource", "fields", "allowFiltering", "change"], ["MaritalOutletDropdown", ""], [1, "col-lg-1", "col-md-1", "col-sm-1", "col-xs-1"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], ["for", "DropdownObat", 1, "form-label"], ["type", "checkbox", "formControlName", "is_racikan", 1, "form-check-input"], ["class", "col-lg-4 col-md-4 col-sm-4 col-xs-4", 4, "ngIf"], ["class", "col-lg-3 col-md-3 col-sm-3 col-xs-3", 4, "ngIf"], ["class", "col-lg-2 col-md-2 col-sm-2 col-xs-2", 4, "ngIf"], [1, "col-lg-1", "col-md-1", "col-sm-1", "col-xs-1", "pe-1"], ["for", "NumericQty", 1, "form-label"], ["id", "NumericQty", "formControlName", "qty_resep", 3, "format", "showSpinButton", "showClearButton", "ste"], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2", "pe-1"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "pe-1"], ["id", "DropdownLabelPemakaian", "formControlName", "label", "popupWidth", "30rem", 3, "allowFiltering", "dataSource", "fields", "change"], ["class", "col-lg-1 col-md-1 col-sm-1 col-xs-1 pe-1", 4, "ngIf"], ["id", "DropdownTambahanAturanPakai", "formControlName", "aturan", "popupWidth", "25rem", 3, "allowFiltering", "dataSource", "fields", "change"], [1, "col-lg-1", "col-md-1", "col-sm-1", "col-xs-1", "ps-4"], [1, "row", "align-content-center", "h-100", "mb-2"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "px-0", 3, "hidden"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", 3, "disabled", "click"], [1, "fas", "fa-plus-circle", "fa-sm"], [3, "hidden"], ["type", "button", 1, "btn", "btn-warning", "btn-sm", 3, "disabled", "click"], [1, "fas", "fa-edit", "fa-sm"], [3, "lookup-url", "columns", "columnsChild", "filter-lookup", "queryString", "modal-title", "onGetSelectedData"], ["LookupRacikan", ""], [3, "lookup-url", "columns", "columnsChild", "filter-lookup", "modal-title", "queryString", "onGetSelectedData"], ["LookupTemplateResep", ""], [1, "col-lg-12", "col-md-12", "col-xs-12", "col-sm-12"], [1, "card-body", "p-0"], ["height", "calc(100vh - 24rem)", "gridLines", "Both", "rowHeight", "30", 3, "dataSource", "childGrid", "toolbar", "toolbarClick", "load", "rowDataBound", "dataBound", "rowSelected", "actionComplete"], ["GridResepRacikan", ""], ["field", "no_urut", "headerText", "no_urut", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "is_racikan", "headerText", "is_racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "set_racikan_id", "headerText", "set_racikan_id", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_metode_racikan", "headerText", "id_metode_racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_item", "headerText", "id_item", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_label_pemakaian_obat", "headerText", "id_label_pemakaian_obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_tambahan_aturan_pakai", "headerText", "id_tambahan_aturan_pakai", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_obat", "headerText", "Nama Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_satuan", "headerText", "Satuan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "metode_racikan", "headerText", "Kemasan Racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "qty_resep", "headerText", "Qty", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing"], ["field", "ket_label", "headerText", "Pemakaian", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "ket_aturan", "headerText", "Aturan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["modalTemplateResep", ""], [1, "col-lg-10", "col-md-10", "col-sm-10", "col-xs-10", "pe-0"], ["id", "DropdownObat", "formControlName", "id_item", "popupWidth", "55rem", 3, "allowFiltering", "dataSource", "fields", "placeholder", "query", "sortOrder", "filtering", "change"], ["Drop", ""], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2", "px-0"], ["id", "basic-addon1", 1, "input-group-text", "bg-primary", "text-white"], [1, "col-lg-3", "col-md-3", "col-sm-3", "col-xs-3"], [1, "input-group"], ["type", "text", "formControlName", "nama_racikan", 1, "form-control", "form-select-sm", 3, "change"], ["id", "btnInputGroup", "type", "button", 1, "btn", "btn-primary", 2, "padding", ".1rem .8rem", "background-color", "#00afff; border: 0", 3, "click"], [1, "fas", "fa-search"], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2"], ["formControlName", "id_metode_racikan", 3, "dataSource", "fields", "allowFiltering", "change"], ["MolDropdown", ""], ["id", "DropdownLabelPemakaian", "formControlName", "id_satuan_aturan_pakai", "popupWidth", "30rem", 3, "allowFiltering", "dataSource", "fields", "change"], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body", "p-10"], [1, "row", "mx-0", "my-1"], [1, "col-lg-12", "col-md-12", "col-sm-12", 2, "text-align", "center"], [1, "col-lg-12", "col-md-12", "col-sm-12"], [1, "mb-2", "row"], [1, "col-sm-4"], ["for", "nama_resep"], [1, "col-sm-8"], ["type", "text", "name", "nama_resep", 1, "form-control", "form-control-sm"], [1, "modal-footer", "background-abu-muda"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], ["type", "button", 1, "btn", "btn-danger", 3, "click"]], template: function PulangResepIrdaComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "org-card-layout", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onClickButtonNav", function PulangResepIrdaComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "form", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](9, "atm-label", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](10, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "ejs-dropdownlist", 11, 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("change", function PulangResepIrdaComponent_Template_ejs_dropdownlist_change_11_listener($event) { return ctx.handleChangeOutlet($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipe"](13, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](14, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](15, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](17, "label", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](18, "Racik");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](19, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](20, "input", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](21, PulangResepIrdaComponent_div_21_Template, 13, 8, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](22, PulangResepIrdaComponent_div_22_Template, 10, 0, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](23, PulangResepIrdaComponent_div_23_Template, 10, 5, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](24, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](25, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](26, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](27, "label", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](28, "Qty");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](29, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](30, "ejs-numerictextbox", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](31, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](32, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](33, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](34, "label", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](35, "Label Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](36, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](37, "ejs-combobox", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("change", function PulangResepIrdaComponent_Template_ejs_combobox_change_37_listener($event) { return ctx.handleChangeLabel($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](38, PulangResepIrdaComponent_div_38_Template, 7, 3, "div", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](39, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](40, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](41, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](42, "label", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](43, "Aturan Tambahan");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](44, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](45, "ejs-combobox", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("change", function PulangResepIrdaComponent_Template_ejs_combobox_change_45_listener($event) { return ctx.handleChangeAturan($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](46, "div", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](47, "div", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](48, "div", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](49, "button", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function PulangResepIrdaComponent_Template_button_click_49_listener() { return ctx.handleAddObat(ctx.FormAddObat.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](50, "i", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](51, "span", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](52, "\u00A0Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](53, "div", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](54, "button", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function PulangResepIrdaComponent_Template_button_click_54_listener() { return ctx.onUpdateDataObat(ctx.FormAddObat.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](55, "i", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](56, "span", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](57, "\u00A0Edit");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](58, "org-look-up-hirarki", 36, 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onGetSelectedData", function PulangResepIrdaComponent_Template_org_look_up_hirarki_onGetSelectedData_58_listener($event) { return ctx.heandleSelectedRacikan($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](60, "org-look-up-hirarki", 38, 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onGetSelectedData", function PulangResepIrdaComponent_Template_org_look_up_hirarki_onGetSelectedData_60_listener($event) { return ctx.heandleSelectedTemplateResep($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](62, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](63, "div", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](64, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](65, "div", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](66, "ejs-grid", 42, 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("toolbarClick", function PulangResepIrdaComponent_Template_ejs_grid_toolbarClick_66_listener($event) { return ctx.onToolbarClick($event); })("load", function PulangResepIrdaComponent_Template_ejs_grid_load_66_listener($event) { return ctx.onLoad($event); })("rowDataBound", function PulangResepIrdaComponent_Template_ejs_grid_rowDataBound_66_listener($event) { return ctx.rowDataBound($event); })("dataBound", function PulangResepIrdaComponent_Template_ejs_grid_dataBound_66_listener() { return ctx.onDataBound(); })("rowSelected", function PulangResepIrdaComponent_Template_ejs_grid_rowSelected_66_listener($event) { return ctx.onRowSelected($event); })("actionComplete", function PulangResepIrdaComponent_Template_ejs_grid_actionComplete_66_listener($event) { return ctx.onActionComplete($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipe"](68, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](69, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](70, "e-column", 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](71, "e-column", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](72, "e-column", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](73, "e-column", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](74, "e-column", 48);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](75, "e-column", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](76, "e-column", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](77, "e-column", 51);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](78, "e-column", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](79, "e-column", 53);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](80, "e-column", 54);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](81, "e-column", 55);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](82, "e-column", 56);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](83, PulangResepIrdaComponent_ng_template_83_Template, 25, 0, "ng-template", null, 57, _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav)("ShowTitle", ctx.ShowTitle);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("formGroup", ctx.FormAddObat);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("LabelCaption", "Depo Farmasi");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipeBind1"](13, 69, ctx.setupOutletService.dataSource))("fields", ctx.SetupOutletDropdownField)("allowFiltering", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", !ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("format", "N0")("showSpinButton", false)("showClearButton", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx.dataSourceLabelPemakaian)("fields", ctx.DropdownLabelFields);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", !ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx.dataSourceTambahanAturanPakai)("fields", ctx.DropdownAturanFields);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵclassMap"](ctx.width >= 1023 && ctx.width <= 1200 ? "pt-1" : "pt-4");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("hidden", ctx.FormAddObatState != "input");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("disabled", ctx.FormAddObat.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("hidden", ctx.width >= 1023 && ctx.width <= 1200);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("hidden", ctx.FormAddObatState == "input");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("disabled", ctx.FormAddObat.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("hidden", ctx.width >= 1023 && ctx.width <= 1200);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("lookup-url", ctx.urlRacikan)("columns", ctx.GridLookUpItem.columns)("columnsChild", ctx.GridLookUpItem.columnsChild)("filter-lookup", ctx.GridLookUpItem.filter)("queryString", "set_racikan_id")("modal-title", "Data Racikan Dokter");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("lookup-url", ctx.urlTemplateResep)("columns", ctx.GridlookUpTemplateResep.columns)("columnsChild", ctx.GridlookUpTemplateResep.columnsChild)("filter-lookup", ctx.GridlookUpTemplateResep.filter)("modal-title", "Data Template Resep Dokter")("queryString", "resep_id");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipeBind1"](68, 71, ctx.dataSourceGrid))("childGrid", ctx.ChildGrid)("toolbar", ctx.GridDaftarObatToolbar);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", true)("allowEditing", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", true)("allowEditing", false);
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_15__.OrgCardLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_23__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_23__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_23__.FormGroupDirective, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_16__.AtmLabelComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_25__.DropDownListComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_23__.CheckboxControlValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_23__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_23__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_26__.NgIf, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_27__.NumericTextBoxComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_25__.ComboBoxComponent, _shared_components_organism_loockUp_org_look_up_hirarki_org_look_up_hirarki_component__WEBPACK_IMPORTED_MODULE_17__.OrgLookUpHirarkiComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_28__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_28__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_28__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_28__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_28__.AggregateColumnDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_23__.DefaultValueAccessor], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_26__.AsyncPipe], styles: ["#basic-addon1[_ngcontent-%COMP%] {\r\n    height: 32px;\r\n    padding-left: 12px;\r\n    width: 100%;\r\n    border-top-left-radius: 0;\r\n    border-bottom-left-radius: 0;\r\n    border: 0;\r\n  }\r\n  \r\n  #DropdownObat[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%] {\r\n    border-top-right-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n  }\r\n  \r\n  #NumericQty[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%]    > input[_ngcontent-%COMP%] {\r\n    text-align: right;\r\n    padding-right: 5px;\r\n  }\r\n  \r\n  div.head[_ngcontent-%COMP%] {\r\n    font-size: 13px !important;\r\n    font-weight: 500 !important;\r\n  }\r\n  \r\n  .is-racikan[_ngcontent-%COMP%]{\r\n    background-color: #f3e6f3;\r\n  }\r\n  \r\n  .e-grid[_ngcontent-%COMP%]   .e-detailheadercell[_ngcontent-%COMP%], td.e-detailcell.e-lastrowcell[_ngcontent-%COMP%] {\r\n  background-color: var(--biru-muda) !important;\r\n}\r\n  \r\n  div.e-gridcontent[_ngcontent-%COMP%]   tr.e-detailrow[_ngcontent-%COMP%]   td.e-detailcell[_ngcontent-%COMP%]   div.e-headercontent[_ngcontent-%COMP%]   th.e-headercell[_ngcontent-%COMP%] {\r\n  background-color: var(--biru-muda) !important;\r\n}"] });


/***/ }),

/***/ 35446:
/*!********************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irda/view-resep-irda/view-resep-irda.component.ts ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ViewResepIrdaComponent": () => (/* binding */ ViewResepIrdaComponent)
/* harmony export */ });
/* harmony import */ var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/grid.config.json */ 9432);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _services_resep_dokter_irda_resep_dokter_irda_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../services/resep-dokter-irda/resep-dokter-irda.service */ 75631);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/encryption.service */ 26512);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 26966);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-bootstrap/modal */ 63301);
/* harmony import */ var src_app_helpers_utility_utility_helper_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/helpers/utility/utility-helper.service */ 96922);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 27034);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 46555);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 48502);













const _c0 = ["LookupRacikan"];
const _c1 = ["GridResepRacikan"];
const _c2 = ["itemTemplate"];
const _c3 = ["modalTambahanHariResep"];
const _c4 = ["modalStopResep"];
function ViewResepIrdaComponent_ng_template_20_Template(rf, ctx) { if (rf & 1) {
    const _r7 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](0, "div", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](1, "h5", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](2, "Tambahan Hari Pada Resep");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](3, "button", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("click", function ViewResepIrdaComponent_ng_template_20_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵrestoreView"](_r7); const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"](); return ctx_r6.modalRef.hide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](4, "i", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](5, "div", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](6, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](7, "div", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](8, "div", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](9, "h3");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](10, "Tambah Jumlah Hari");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](11, "div", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](12, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](13, "div", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](14, "ejs-numerictextbox", 30, 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](16, "div", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](17, "span", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](18, " Hari ");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](19, "div", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](20, "button", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("click", function ViewResepIrdaComponent_ng_template_20_Template_button_click_20_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵrestoreView"](_r7); const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵreference"](15); const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"](); return ctx_r8.handleClickLanjutkanResepDokter(_r5.value); });
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](21, "Lanjukan Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("innerHTML", ctx_r2.htmlSelection, _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵsanitizeHtml"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("format", "N0")("showSpinButton", false)("showClearButton", false);
} }
function ViewResepIrdaComponent_ng_template_22_Template(rf, ctx) { if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](0, "div", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](1, "h5", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](2, "Stop Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](3, "button", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("click", function ViewResepIrdaComponent_ng_template_22_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵrestoreView"](_r10); const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"](); return ctx_r9.modalRef.hide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](4, "i", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](5, "div", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](6, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](7, "div", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](8, "h3");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](9, "Anda Yakin Akan Menghentikan Obat ini?");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](10, "div", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](11, "div", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](12, "button", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("click", function ViewResepIrdaComponent_ng_template_22_Template_button_click_12_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵrestoreView"](_r10); const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"](); return ctx_r11.handleClickStopResepDokter(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](13, "Stop Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](10);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("innerHTML", ctx_r4.htmlSelection, _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵsanitizeHtml"]);
} }
const _c5 = function () { return { wrapMode: "Both" }; };
class ViewResepIrdaComponent {
    constructor(formBuilder, resepDokterIrdaService, router, encryptionService, activatedRoute, utilityService, modalService, utilityHelperService) {
        this.formBuilder = formBuilder;
        this.resepDokterIrdaService = resepDokterIrdaService;
        this.router = router;
        this.encryptionService = encryptionService;
        this.activatedRoute = activatedRoute;
        this.utilityService = utilityService;
        this.modalService = modalService;
        this.utilityHelperService = utilityHelperService;
        this.ShowTitle = true;
        this.ButtonNav = [
            { Id: 'kembali', Captions: 'Kembali', Icons1: 'fa-arrow-left fa-sm' },
            { Id: 'lanjutkan', Captions: 'Lanjutkan Resep', Icons1: 'fa-forward fa-sm' },
            { Id: 'ubah', Captions: 'Ubah Resep', Icons1: 'fa-edit fa-sm' },
            { Id: 'stop', Captions: 'Hentikan Resep', Icons1: 'fa-stop-circle fa-sm' },
        ];
        this.GridConfig = /*#__PURE__*/ (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
        this.inputFieldState = 'detail';
        this.keterangan = (field, data1) => {
            return data1['nama_rute_pemberian_obat'] +
                ', sehari ' + data1['qty_harian'] + ' ' +
                data1['nama_satuan'] + ' ' + data1['ket_label'] + ' '
                + data1['satuan_aturan_pakai'] + ' ' + data1['ket_aturan'];
            ;
        };
        this.quantity = (field, data1) => {
            return data1['qty_harian'] + ' ' +
                data1['nama_satuan'] + '/Hari, untuk ' + data1['jumlah_hari'] + ' Hari';
        };
        this.dataSourceChild = [];
        this.dataSource = [];
        this.dataHeader = [];
        this.htmlSelection = '';
    }
    ngOnInit() {
        this.formInput = this.formBuilder.group({
            no_register: ['', []],
            no_rekam_medis: ['', []],
            poli: ['', []],
            pasien: ['', []],
            dokter: ['', []],
            umur: ['', []],
        });
        this.childGrid = {
            dataSource: this.dataSourceChild,
            queryString: "resep_detail_id",
            rowHeight: 30,
            allowResizing: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: 'Both' },
            columns: this.GridConfig.columnsChild
        };
        if ((this.router.url).includes('Dokter')) {
            this.ShowTitle = true;
        }
    }
    ngAfterViewInit() {
        let id = this.encryptionService.decrypt(this.activatedRoute.snapshot.params["id"]);
        console.log(id);
        this.onLoadDetailData(id);
    }
    onLoadDetailData(id) {
        this.resepDokterIrdaService.onGetById(id).subscribe((result) => {
            this.formInput.setValue({
                pasien: result.data.nama_pasien,
                dokter: result.data.nama_dokter,
                no_register: result.data.no_register,
                no_rekam_medis: result.data.no_rekam_medis,
                poli: result.data.nama_poli,
                umur: result.data.usia
            });
            this.dataHeader = result.data;
            this.dataSource = result.data.details;
            this.GridResepRacikan.refresh();
            this.mapingRacikan(result.data.details);
            let umur = this.utilityHelperService.getAge(result.data.tgl_lahir);
        });
    }
    mapingRacikan(details) {
        this.dataSourceChild = [];
        details.map((item) => {
            this.dataSourceChild.push(...item.racikans);
        });
        this.childGrid = {
            dataSource: this.dataSourceChild,
            queryString: "resep_detail_id",
            rowHeight: 30,
            allowResizing: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: 'Both' },
            columns: this.GridConfig.columnsChild
        };
    }
    rowDataBound(args) {
        var is_racikan = args.data.is_racikan;
        if (!is_racikan) {
            //here hide which parent row has no child records
            args.row.querySelector('td').innerHTML = " ";
            args.row.querySelector('td').className = "e-customizedExpandcell";
        }
        else {
            // args.row.classList.add('is-racikan');
        }
    }
    onDataBound() {
        this.GridResepRacikan.detailRowModule.expandAll();
    }
    handleClickLanjutkanResepDokter(args) {
        let Body;
        Body = this.GridResepRacikan.getSelectedRecords();
        Body.map((e, i) => {
            e.jumlah_hari = args;
            return e;
        });
        // console.log(Body);
        this.resepDokterIrdaService.lanjutakanResepRawatInap(Body).subscribe((result) => {
            this.utilityService.onShowingCustomAlert('success', 'Obat ini berhasil di lanjutkan', result.message)
                .then(() => {
                this.modalRef.hide();
                this.onLoadDetailData(this.dataHeader.resep_id);
            });
        });
    }
    handleClickStopResepDokter(args) {
        let Body;
        Body = this.GridResepRacikan.getSelectedRecords();
        this.resepDokterIrdaService.stopResepRawatInap(Body).subscribe((result) => {
            this.utilityService.onShowingCustomAlert('success', 'Obat ini berhasil di hentikan/Stop', result.message)
                .then(() => {
                this.modalRef.hide();
                this.onLoadDetailData(this.dataHeader.resep_id);
            });
        });
    }
    onClickButtonNav(args) {
        let data = this.GridResepRacikan.getSelectedRecords();
        switch (args) {
            case "kembali":
                this.router.navigateByUrl('Dokter/resep-irda/daftar-resep-irda');
                break;
            case "lanjutkan":
                if (data.length == 0) {
                    this.utilityService.onShowingCustomAlert('warning', 'Obat belum di pilih', '');
                }
                else {
                    this.templateSelection();
                    this.modalRef = this.modalService.show(this.modalTambahanHariResep, Object.assign({}, { class: 'modal-md' }));
                }
                break;
            case "ubah":
                const id = this.encryptionService.encrypt(this.dataHeader.resep_id + ',ubah');
                this.router.navigate(['Dokter/resep-irda/ubah-resep-irda', id, "GRAHCIS"]);
                break;
            case "stop":
                if (data.length == 0) {
                    this.utilityService.onShowingCustomAlert('warning', 'Obat belum di pilih', '');
                }
                else {
                    this.templateSelection();
                    this.modalRef = this.modalService.show(this.modalStopResep, Object.assign({}, { class: 'modal-md' }));
                }
                break;
            default:
                break;
        }
    }
    templateSelection() {
        let data = this.GridResepRacikan.getSelectedRecords();
        this.htmlSelection = '<ul>';
        data.forEach((value, index) => {
            this.htmlSelection += `<li>${value.nama_obat}</li>`;
        });
        this.htmlSelection += '</ul>';
        console.log(this.htmlSelection);
    }
}
ViewResepIrdaComponent.ɵfac = function ViewResepIrdaComponent_Factory(t) { return new (t || ViewResepIrdaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_services_resep_dokter_irda_resep_dokter_irda_service__WEBPACK_IMPORTED_MODULE_1__.ResepDokterIrdaService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_10__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_2__.EncryptionService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_10__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_3__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__.BsModalService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](src_app_helpers_utility_utility_helper_service__WEBPACK_IMPORTED_MODULE_5__.UtilityHelperService)); };
ViewResepIrdaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineComponent"]({ type: ViewResepIrdaComponent, selectors: [["app-view-resep-irda"]], viewQuery: function ViewResepIrdaComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵviewQuery"](_c1, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵviewQuery"](_c2, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵviewQuery"](_c3, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵviewQuery"](_c4, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.LookupRacikan = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.GridResepRacikan = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.itemTemplate = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.modalTambahanHariResep = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.modalStopResep = _t.first);
    } }, decls: 24, vars: 37, consts: [[3, "ButtonNav", "HeaderRibbonClass", "ButtonNavClass", "ShowTitle", "onClickButtonNav"], [1, "row"], [1, "col-sm-4"], [3, "formGroup"], ["formControlName", "no_register", 3, "label", "inputFieldState"], ["formControlName", "no_rekam_medis", 3, "label", "inputFieldState"], ["formControlName", "pasien", 3, "label", "inputFieldState"], ["formControlName", "poli", 3, "label", "inputFieldState"], ["formControlName", "dokter", 3, "label", "inputFieldState"], ["formControlName", "umur", 3, "label", "inputFieldState"], [1, "col-sm-8"], [1, "card"], [1, "card-body", "p-0"], ["height", "calc(100vh - 15rem)", "gridLines", "Both", "rowHeight", "30", 3, "dataSource", "childGrid", "allowTextWrap", "textWrapSettings", "rowDataBound", "dataBound"], ["GridResepRacikan", ""], [3, "width", "field", "visible", "type", "textAlign", "headerTextAlign"], ["field", "nama_obat", "headerText", "Nama Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "rute_pemberian_obat", "headerText", "Pemakaian", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing", "valueAccessor"], ["field", "qty_harian", "headerText", "Qty", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", 3, "visible", "allowEditing", "width", "valueAccessor"], ["modalTambahanHariResep", ""], ["modalStopResep", ""], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body", "p-10"], [1, "row", "mx-0", "my-1"], [1, "col-lg-12", "col-md-12", "col-sm-12"], [1, "text-success", 3, "innerHTML"], [1, "col-sm-9", "pe-0"], ["id", "tambahan_hari", "name", "tambahan_hari", 3, "format", "showSpinButton", "showClearButton"], ["tambah_hari", ""], [1, "col-lg-3", "col-md-3", "col-sm-3", "col-xs-3", "px-0"], ["id", "basic-addon1", 1, "input-group-text"], [1, "modal-footer", "background-abu-muda"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], [1, "text-danger", 3, "innerHTML"]], template: function ViewResepIrdaComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](0, "org-card-layout", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("onClickButtonNav", function ViewResepIrdaComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](3, "form", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](4, "mol-input-text", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](5, "mol-input-text", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](6, "mol-input-text", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](7, "mol-input-text", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](8, "mol-input-text", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](9, "mol-input-text", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](10, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](11, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](12, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](13, "ejs-grid", 13, 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("rowDataBound", function ViewResepIrdaComponent_Template_ejs_grid_rowDataBound_13_listener($event) { return ctx.rowDataBound($event); })("dataBound", function ViewResepIrdaComponent_Template_ejs_grid_dataBound_13_listener() { return ctx.onDataBound(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](15, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](16, "e-column", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](17, "e-column", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](18, "e-column", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](19, "e-column", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplate"](20, ViewResepIrdaComponent_ng_template_20_Template, 22, 4, "ng-template", null, 19, _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplate"](22, ViewResepIrdaComponent_ng_template_22_Template, 14, 1, "ng-template", null, 20, _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav)("HeaderRibbonClass", "col-lg-4 col-md-4 col-sm-4 col-xs-4")("ButtonNavClass", "col-lg-8 col-md-8 col-sm-8 col-xs-8")("ShowTitle", ctx.ShowTitle);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("formGroup", ctx.formInput);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("label", "No Register")("inputFieldState", ctx.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("label", "No RM")("inputFieldState", ctx.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("label", "Pasien")("inputFieldState", ctx.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("label", "Poli")("inputFieldState", ctx.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("label", "Dokter")("inputFieldState", ctx.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("label", "Umur")("inputFieldState", ctx.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("dataSource", ctx.dataSource)("childGrid", ctx.childGrid)("allowTextWrap", true)("textWrapSettings", _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵpureFunction0"](36, _c5));
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("width", 50)("field", "Checkbox")("visible", true)("type", "checkbox")("textAlign", "Center")("headerTextAlign", "Center");
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("visible", true)("allowEditing", false)("valueAccessor", ctx.keterangan);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 200)("valueAccessor", ctx.quantity);
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_6__.OrgCardLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_9__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_9__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_7__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormControlName, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_11__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_11__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_11__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_11__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_11__.AggregateColumnDirective, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_12__.NumericTextBoxComponent], styles: ["#basic-addon1[_ngcontent-%COMP%] {\r\n    height: 32px;\r\n    padding-left: 12px;\r\n    width: 100%;\r\n    border-top-left-radius: 0;\r\n    border-bottom-left-radius: 0;\r\n    border: 0;\r\n  }\r\n\r\n.e-toolbar[_ngcontent-%COMP%]   .e-toolbar-item[_ngcontent-%COMP%]   .e-tbar-btn.e-btn[_ngcontent-%COMP%]   .e-icons.e-btn-icon[_ngcontent-%COMP%] {\r\n    min-height: 14px !important;\r\n}\r\n\r\nth.e-headercell[_ngcontent-%COMP%] {\r\n    background-color: rgba(0, 0, 0, 0.03);\r\n    color: black;\r\n    border: 1px solid rgba(0, 0, 0, 0.125);\r\n    padding: 5px !important;\r\n    height: 30px !important;\r\n}\r\n\r\nspan.e-headertext[_ngcontent-%COMP%] {\r\n    font-size: 13px !important;\r\n}\r\n\r\ntd.e-rowcell[_ngcontent-%COMP%] {\r\n    padding: 5px !important;\r\n}\r\n\r\n.e-grid[_ngcontent-%COMP%]   .e-detailheadercell[_ngcontent-%COMP%], td.e-detailcell.e-lastrowcell[_ngcontent-%COMP%] {\r\n  background-color: var(--biru-muda) !important;\r\n}\r\n\r\ndiv.e-gridcontent[_ngcontent-%COMP%]   tr.e-detailrow[_ngcontent-%COMP%]   td.e-detailcell[_ngcontent-%COMP%]   div.e-headercontent[_ngcontent-%COMP%]   th.e-headercell[_ngcontent-%COMP%] {\r\n  background-color: var(--biru-muda) !important;\r\n}"] });


/***/ }),

/***/ 79840:
/*!************************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irna/daftar-resep-irna/daftar-resep-irna.component.ts ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DaftarResepIrnaComponent": () => (/* binding */ DaftarResepIrnaComponent)
/* harmony export */ });
/* harmony import */ var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/grid.config.json */ 40221);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/encryption.service */ 26512);
/* harmony import */ var _services_resep_dokter_irna_resep_dokter_irna_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/resep-dokter-irna/resep-dokter-irna.service */ 85191);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);
/* harmony import */ var _shared_components_molecules_filter_mol_offcanvas_filter_mol_offcanvas_filter_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/molecules/filter/mol-offcanvas-filter/mol-offcanvas-filter.component */ 55682);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 46555);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 38583);









const _c0 = ["GridResepRacikan"];
const _c1 = ["GridData"];
function DaftarResepIrnaComponent_ng_template_14_a_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "a", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1, "Lihat Detail Resep");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} }
function DaftarResepIrnaComponent_ng_template_14_Template(rf, ctx) { if (rf & 1) {
    const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function DaftarResepIrnaComponent_ng_template_14_Template_div_click_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r6); const data_r3 = restoredCtx.$implicit; const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](); return ctx_r5.handleClickDetail(data_r3); });
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "p", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipe"](4, "titlecase");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipe"](5, "titlecase");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](6, "span", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](8, DaftarResepIrnaComponent_ng_template_14_a_8_Template, 2, 0, "a", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r3 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate2"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipeBind1"](4, 5, data_r3.headerText), " ", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipeBind1"](5, 7, data_r3.key), " - \u00A0 ");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate2"](" ", data_r3.count, " ", data_r3.field == "nama_dokter" ? "resep" : "obat", " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", data_r3.field == "nomor_resep");
} }
const _c2 = function () { return { wrapMode: "Both" }; };
class DaftarResepIrnaComponent {
    constructor(router, encryptionService, resepDokterIrnaService) {
        this.router = router;
        this.encryptionService = encryptionService;
        this.resepDokterIrnaService = resepDokterIrnaService;
        this.ShowTitle = true;
        this.ButtonNav = [
            { Id: 'Add', Captions: 'Buat Resep Baru', Icons1: 'fa-plus fa-sm' },
            { Id: 'pulang', Captions: 'Resep Pulang', Icons1: 'fa-home fa-sm' },
        ];
        this.GridDataToolbar = [
            { text: 'Add', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-sm', id: 'add' },
            { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
            { text: 'Detail', tooltipText: 'Detail', prefixIcon: 'fas fa-info-circle fa-sm', id: 'detail' },
            'Search'
        ];
        this.FilterColumnDatasource = [
            { text: 'Nomor Resep', value: 'trd.nomor_resep' }
        ];
        this.GridConfig = /*#__PURE__*/ (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
        this.dataSource = [];
        this.dataSourceChild = [];
        this.keterangan = (field, data1) => {
            return data1['nama_rute_pemberian_obat'] + ', sehari ' +
                data1['qty_harian'] + ' ' + data1['nama_satuan'] + ' ' + data1['ket_label'] + ' ' + data1['satuan_aturan_pakai'] + ' ' + data1['ket_aturan'];
        };
        this.quantity = (field, data1) => {
            return data1['qty_harian'] + ' ' +
                data1['nama_satuan'] + '/Hari, untuk ' + data1['jumlah_hari'] + ' Hari';
        };
        this.GridGroupSettings = { showDropArea: false, columns: ['nama_dokter', 'nomor_resep'] };
    }
    ngAfterViewInit() {
        // this.GridData.Grid.refresh();
    }
    ngOnInit() {
        this.childGrid = {
            dataSource: this.dataSourceChild,
            queryString: "resep_detail_id",
            rowHeight: 30,
            allowResizing: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: 'Both' },
            columns: this.GridConfig.columnsChild
        };
        this.resepDokterIrnaService.onInitList();
        this.handlePencarianFilter([]);
        if ((this.router.url).includes('Dokter')) {
            this.ShowTitle = true;
        }
    }
    rowDataBound(args) {
        // console.log(args.data.is_racikan)
        // let is_racikan = args.data.is_racikan;
        // if (!is_racikan) {
        //     //here hide which parent row has no child records
        //     args.row.querySelector('td').innerHTML = " ";
        //     args.row.querySelector('td').className = "e-customizedExpandcell";
        // } else {
        // //     // args.row.classList.add('is-racikan');
        // }
    }
    onDataBound() {
        // this.GridResepRacikan.detailRowModule.expandAll();
    }
    handlePencarianFilter(args) {
        this.resepDokterIrnaService.onGetAllByResepActiveByRegister(args).subscribe((result) => {
            this.dataSource = result.data;
            this.mapingRacikan(result.data);
            this.GridResepRacikan.refresh();
        });
    }
    mapingRacikan(details) {
        this.dataSourceChild = [];
        details.map((item) => {
            this.dataSourceChild.push(...item.racikans);
        });
        this.childGrid = {
            dataSource: this.dataSourceChild,
            queryString: "resep_detail_id",
            rowHeight: 30,
            allowResizing: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: 'Both' },
            columns: this.GridConfig.columnsChild
        };
    }
    handleClickDetail(args) {
        console.log(args.items);
        const id = this.encryptionService.encrypt(JSON.stringify(args.items[0].resep_id));
        this.router.navigate(['Dokter/resep-irna/view-resep-irna', id, "GRAHCIS"]);
    }
    handleClickButtonNav(args) {
        switch (args) {
            case 'Add':
                this.router.navigateByUrl('Dokter/resep-irna/input-resep-irna');
                break;
            case 'Edit':
                const pemesanan_id = this.encryptionService.encrypt(JSON.stringify(this.SelectedData.resep_id));
                this.router.navigate(['Dokter/resep-irna/input-resep-irna', pemesanan_id, "GRAHCIS"]);
                break;
            case 'pulang':
                this.router.navigateByUrl('Dokter/resep-irna/pulang-resep-irna');
                break;
            default:
                break;
        }
    }
    handleSelectedRow(args) {
        this.SelectedData = args.data;
        console.log(this.SelectedData);
    }
}
DaftarResepIrnaComponent.ɵfac = function DaftarResepIrnaComponent_Factory(t) { return new (t || DaftarResepIrnaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_6__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_1__.EncryptionService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_services_resep_dokter_irna_resep_dokter_irna_service__WEBPACK_IMPORTED_MODULE_2__.ResepDokterIrnaService)); };
DaftarResepIrnaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({ type: DaftarResepIrnaComponent, selectors: [["app-daftar-resep-irna"]], viewQuery: function DaftarResepIrnaComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵviewQuery"](_c1, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵloadQuery"]()) && (ctx.GridResepRacikan = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵloadQuery"]()) && (ctx.GridData = _t.first);
    } }, decls: 16, vars: 25, consts: [[3, "ButtonNav", "ShowTitle", "onClickButtonNav"], [1, "row", "pt-2"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "mb-2"], [3, "FilterColumnDatasource", "handle-pencarian"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], ["height", "calc(100vh - 15rem)", "gridLines", "Both", "rowHeight", "30", 3, "dataSource", "childGrid", "allowGrouping", "groupSettings", "allowTextWrap", "textWrapSettings", "rowDataBound", "dataBound"], ["GridResepRacikan", ""], ["field", "nama_dokter", "headerText", "Dokter", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nomor_resep", "headerText", "Nomor Resep", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_obat", "headerText", "Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "rute_pemberian_obat", "headerText", "Pemakain", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing", "valueAccessor"], ["field", "qty_harian", "headerText", "Qty", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", 3, "visible", "allowEditing", "width", "valueAccessor"], ["field", "ket_aturan", "headerText", "Aturan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["groupSettingsCaptionTemplate", ""], ["title", "", 1, "row"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", 3, "click"], [1, "mb-0", 2, "font-size", "15px"], [1, "mb-0"], ["class", "cursor-pointer", "title", "lihat detail resep", 4, "ngIf"], ["title", "lihat detail resep", 1, "cursor-pointer"]], template: function DaftarResepIrnaComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "org-card-layout", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("onClickButtonNav", function DaftarResepIrnaComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.handleClickButtonNav($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](3, "mol-offcanvas-filter", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("handle-pencarian", function DaftarResepIrnaComponent_Template_mol_offcanvas_filter_handle_pencarian_3_listener($event) { return ctx.handlePencarianFilter($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](5, "ejs-grid", 5, 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("rowDataBound", function DaftarResepIrnaComponent_Template_ejs_grid_rowDataBound_5_listener($event) { return ctx.rowDataBound($event); })("dataBound", function DaftarResepIrnaComponent_Template_ejs_grid_dataBound_5_listener() { return ctx.onDataBound(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](7, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](8, "e-column", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](9, "e-column", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](10, "e-column", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](11, "e-column", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](12, "e-column", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](13, "e-column", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](14, DaftarResepIrnaComponent_ng_template_14_Template, 9, 9, "ng-template", null, 13, _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav)("ShowTitle", ctx.ShowTitle);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("FilterColumnDatasource", ctx.FilterColumnDatasource);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("dataSource", ctx.dataSource)("childGrid", ctx.childGrid)("allowGrouping", true)("groupSettings", ctx.GridGroupSettings)("allowTextWrap", true)("textWrapSettings", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpureFunction0"](24, _c2));
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("visible", true)("allowEditing", false)("valueAccessor", ctx.keterangan);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 220)("valueAccessor", ctx.quantity);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("visible", false)("allowEditing", false);
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__.OrgCardLayoutComponent, _shared_components_molecules_filter_mol_offcanvas_filter_mol_offcanvas_filter_component__WEBPACK_IMPORTED_MODULE_4__.MolOffcanvasFilterComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_7__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_7__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_7__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_7__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_7__.AggregateColumnDirective, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgIf], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.TitleCasePipe], styles: [".e-toolbar[_ngcontent-%COMP%]   .e-toolbar-item[_ngcontent-%COMP%]   .e-tbar-btn.e-btn[_ngcontent-%COMP%]   .e-icons.e-btn-icon[_ngcontent-%COMP%] {\r\n    min-height: 14px !important;\r\n  }\r\n  \r\n  th.e-headercell[_ngcontent-%COMP%] {\r\n    background-color: rgba(0, 0, 0, 0.03);\r\n    color: black;\r\n    border: 1px solid rgba(0, 0, 0, 0.125);\r\n    padding: 10px 5px !important;\r\n    height: 30px !important;\r\n  }\r\n  \r\n  span.e-headertext[_ngcontent-%COMP%] {\r\n    font-size: 13px !important;\r\n  }\r\n  \r\n  td.e-rowcell[_ngcontent-%COMP%] {\r\n    padding: 5px !important;\r\n  }\r\n  \r\n  #GridResepRacikancaptioncell[_ngcontent-%COMP%] {\r\n    background-color: var(--biru-tua);\r\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\r\n  }"] });


/***/ }),

/***/ 55062:
/*!**********************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irna/input-resep-irna/input-resep-irna.component.ts ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
var _json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache;
var _json_GridResep_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InputResepIrnaComponent": () => (/* binding */ InputResepIrnaComponent)
/* harmony export */ });
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 43479);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 49548);
/* harmony import */ var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./json/lookupitem.json */ 88135);
/* harmony import */ var _json_GridResep_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./json/GridResep.json */ 80749);
/* harmony import */ var _json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./json/lookuptemplateresep.json */ 57181);
/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @syncfusion/ej2-data */ 78865);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment */ 16738);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sweetalert2 */ 88259);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ 63301);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! rxjs */ 26215);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _services_resep_dokter_irna_resep_dokter_irna_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../services/resep-dokter-irna/resep-dokter-irna.service */ 85191);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_metode_racikan_setup_metode_racikan_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-metode-racikan/setup-metode-racikan.service */ 6524);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_rute_pemberian_obat_setup_rute_pemberian_obat_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-rute-pemberian-obat/setup-rute-pemberian-obat.service */ 88817);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_satuan_aturan_pakai_setup_satuan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-satuan-aturan-pakai/setup-satuan-aturan-pakai.service */ 43233);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_interval_aturan_pakai_setup_interval_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-interval-aturan-pakai/setup-interval-aturan-pakai.service */ 72568);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_tambahan_aturan_pakai_setup_tambahan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-tambahan-aturan-pakai/setup-tambahan-aturan-pakai.service */ 561);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-label-pemakaian-obat/setup-label-pemakaian-obat.service */ 65203);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 26966);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/modules/shared/services/encryption.service */ 26512);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-outlet/setup-outlet.service */ 80443);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 8210);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 48502);
/* harmony import */ var _shared_components_organism_loockUp_org_look_up_hirarki_org_look_up_hirarki_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../../shared/components/organism/loockUp/org-look-up-hirarki/org-look-up-hirarki.component */ 54313);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../shared/components/atoms/form/atm-label/atm-label.component */ 49130);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 46555);
































const _c0 = ["LookupRacikan"];
const _c1 = ["LookupTemplateResep"];
const _c2 = ["modalTemplateResep"];
const _c3 = ["MaritalOutletDropdown"];
const _c4 = ["GridResepRacikan"];
const _c5 = ["itemTemplate"];
function InputResepIrnaComponent_div_12_Template(rf, ctx) { if (rf & 1) {
    const _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](0, "div", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](1, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](2, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](3, "label", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](4, "Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](5, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](6, "ejs-dropdownlist", 58, 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("filtering", function InputResepIrnaComponent_div_12_Template_ejs_dropdownlist_filtering_6_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r12); const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r11.onFiltering($event); })("change", function InputResepIrnaComponent_div_12_Template_ejs_dropdownlist_change_6_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r12); const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r13.handleChangeObat($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx_r0.data)("fields", ctx_r0.fields)("placeholder", ctx_r0.text)("query", ctx_r0.query)("sortOrder", ctx_r0.sorting)("allowFiltering", true);
} }
function InputResepIrnaComponent_div_13_Template(rf, ctx) { if (rf & 1) {
    const _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](0, "div", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](1, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](2, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](3, "label", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](4, "Nama Racikan Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](5, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](6, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](7, "input", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("change", function InputResepIrnaComponent_div_13_Template_input_change_7_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r15); const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r14.handleChangeNamaRacikan(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](8, "button", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("click", function InputResepIrnaComponent_div_13_Template_button_click_8_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r15); const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r16.handelClickRacikan(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](9, "i", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
} }
function InputResepIrnaComponent_div_14_Template(rf, ctx) { if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](0, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](1, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](2, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](3, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](4, "label", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](5, "Kemasan");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](6, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](7, "ejs-dropdownlist", 65, 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("change", function InputResepIrnaComponent_div_14_Template_ejs_dropdownlist_change_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r19); const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r18.handleChangeMetodeRacikan($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpipe"](9, "async");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpipeBind1"](9, 3, ctx_r2.setupMetodeRacikanService.dataSource))("fields", ctx_r2.DropdownMetodeRacikanFields)("allowFiltering", true);
} }
function InputResepIrnaComponent_div_32_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](0, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](1, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](2, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](3, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](4, "label", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](5, "Satuan");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](6, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](7, "ejs-combobox", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("change", function InputResepIrnaComponent_div_32_Template_ejs_combobox_change_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r21); const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r20.handleChangeSatuanAturan($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx_r3.dataSourceSatuanAturanPakai)("fields", ctx_r3.DropdownsatuanPakaiFields);
} }
function InputResepIrnaComponent_ng_template_95_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](0, "div", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](1, "h5", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](2, "Simpan Template Resep Dokter");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](3, "button", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("click", function InputResepIrnaComponent_ng_template_95_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r23); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r22.modalRef.hide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](4, "i", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](5, "div", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](6, "div", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](7, "div", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](8, "h2");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](9, "Apakah Dokter Ingin Menyimpan Resep Ini Sebagai Template Resep?");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](10, "p");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](11, "Template resep di gunakan untuk membuat resep dengan data resep yg sudah ada");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](12, "div", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](13, "div", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](14, "label", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](15, "strong");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](16, "Nama Template Resep");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](17, "div", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](18, "input", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](19, "div", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](20, "button", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("click", function InputResepIrnaComponent_ng_template_95_Template_button_click_20_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r23); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r24.handleClickSimpanTemplateResepDokter(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](21, "Simpan Template Resep");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](22, "button", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("click", function InputResepIrnaComponent_ng_template_95_Template_button_click_22_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵrestoreView"](_r23); const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵnextContext"](); return ctx_r25.handleClickAbaikan(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](23, "Tidak");
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
} }
const _c6 = function () { return { wrapMode: "Both" }; };
class InputResepIrnaComponent {
    constructor(formBuilder, resepDokterService, setupMetodeRacikanService, setupRutePemberianObatService, setupSatuanAturanPakaiService, setupIntervalAturanPakaiService, setupTambahanAturanPakaiService, setupLabelPemakaianObatService, utilityService, modalService, router, encryptionService, activatedRoute, daftarPasienService, setupOutletService) {
        this.formBuilder = formBuilder;
        this.resepDokterService = resepDokterService;
        this.setupMetodeRacikanService = setupMetodeRacikanService;
        this.setupRutePemberianObatService = setupRutePemberianObatService;
        this.setupSatuanAturanPakaiService = setupSatuanAturanPakaiService;
        this.setupIntervalAturanPakaiService = setupIntervalAturanPakaiService;
        this.setupTambahanAturanPakaiService = setupTambahanAturanPakaiService;
        this.setupLabelPemakaianObatService = setupLabelPemakaianObatService;
        this.utilityService = utilityService;
        this.modalService = modalService;
        this.router = router;
        this.encryptionService = encryptionService;
        this.activatedRoute = activatedRoute;
        this.daftarPasienService = daftarPasienService;
        this.setupOutletService = setupOutletService;
        this.ShowTitle = true;
        /**
          * Variable Button Nav
          * @ButtonNav: ButtonNavModel[]
        */
        this.ButtonNav = [
            { Id: "Kembali", Icons1: "fas fa-arrow-left fa-sm", Captions: "Kembali" },
            { Id: "Template", Icons1: "fas fa-tags fa-sm", Captions: "Template Resep" },
            { Id: "Reset", Icons1: "fas fa-undo fa-sm", Captions: "Reset" },
            { Id: "Simpan", Icons1: "fas fa-save fa-sm", Captions: "Simpan" },
        ];
        this.urlRacikan = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_RACIKAN;
        this.urlTemplateResep = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRNA.GET_TEMPLATE_RESEP;
        this.GridLookUpItem = /*#__PURE__*/ (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_1__, 2)));
        this.GridlookUpTemplateResep = /*#__PURE__*/ (_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache || (_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache = __webpack_require__.t(_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3__, 2)));
        this.DropdownAturanFields = { text: "tambahan_aturan_pakai", value: "id_tambahan_aturan_pakai" };
        this.DropdownRuteFields = { text: "nama_rute_pemberian_obat", value: "id_rute_pemberian_obat" };
        this.DropdownPemakaianFields = { text: "interval_aturan_pakai", value: "id_interval_aturan_pakai" };
        this.DropdownLabelFields = { text: "nama_label_pemakaian_obat", value: "id_label_pemakaian_obat" };
        this.SetupOutletDropdownField = { text: 'nama_outlet', value: 'id_outlet' };
        this.FormAddObatState = "input";
        // ** Satuan 
        this.SatuanObat = "-";
        this.DropdownObatFields = { text: 'nama_obat', value: 'id_item' };
        this.DropdownMetodeRacikanFields = { text: 'metode_racikan', value: 'id_metode_racikan' };
        this.DropdownsatuanPakaiFields = { text: "satuan_aturan_pakai", value: "id_satuan_aturan_pakai" };
        this.NamaObatDatasource = [];
        this.dataSourceTambahanAturanPakai = [];
        this.dataSourceLabelPemakaian = [];
        this.dataSourceSatuanAturanPakai = [];
        // ** Waktu Pakai
        this.WaktuPakai = [];
        // ** Grid Daftar Obat Properties
        this.GridDaftarObatEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
        this.GridDaftarObatDataSource = [];
        this.GridDaftarObatColumns = /*#__PURE__*/ (_json_GridResep_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (_json_GridResep_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(_json_GridResep_json__WEBPACK_IMPORTED_MODULE_2__, 2)));
        this.GridDetailResepRacikanDatasource = [];
        this.GridResepRacikanDatasource = [];
        this.DataRacikan = [];
        this.newdetail = [];
        this.baru = 0;
        this.data_header = null;
        this.counter = 0;
        this.counterRacikan = 0;
        this.dataSourceGrid = new rxjs__WEBPACK_IMPORTED_MODULE_22__.BehaviorSubject([]);
        this.dataScourceGridChild = [];
        this.inputObat = false;
        // SERVER SIDE 
        this.IsUserLogin = JSON.parse(localStorage.getItem('UserData'));
        this.data = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.DataManager({
            headers: [
                {
                    Authorization: "Bearer " + this.IsUserLogin.token
                }
            ],
            url: src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_OBAT_PARAMS_DROPDOWNLIST,
            adaptor: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.ODataV4Adaptor,
            crossDomain: true,
        });
        this.fields = { text: 'nama_obat', value: 'id_item' };
        this.query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where("msi.nama_item", 'contains', '', true);
        this.text = "Select a Obat";
        this.sorting = 'Ascending';
        this.onFiltering = (e) => {
            // load overall data when search key empty.
            if (e.text === '') {
                e.updateData(this.data);
            }
            else {
                let query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where("msi.nama_item", 'contains', e.text, true);
                e.updateData(this.data, query);
            }
        };
        //=====================
        this.dataChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.DataManager({
            headers: [
                {
                    Authorization: "Bearer " + this.IsUserLogin.token
                }
            ],
            url: src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_OBAT_PARAMS_DROPDOWNLIST,
            adaptor: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.ODataV4Adaptor,
            crossDomain: true,
        });
        this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where("msi.nama_item", 'contains', '', true);
        this.keterangan = (field, data1) => {
            return data1['rute_pemberian_obat'] + ', sehari ' +
                data1['qty_harian'] + ' ' + data1['nama_satuan'] + ' ' + data1['ket_label'] + ' ' + data1['satuan_aturan_pakai'] + ' ' + data1['ket_aturan'];
        };
        this.quantity = (field, data1) => {
            return data1['qty_harian'] + ' ' +
                data1['nama_satuan'] + '/Hari, untuk ' + data1['jumlah_hari'] + ' Hari';
        };
        this.dataUbah = null;
        this.updateResepDokter = false;
        this.pulang = false;
        this.idArry = [];
        this.setIdOutlet = 0;
    }
    get width() { return window.innerWidth; }
    ;
    ngOnInit() {
        this.FormAddObat = this.formBuilder.group({
            counter: [0, []],
            is_racikan: [false, []],
            no_urut: [0, []],
            set_racikan_id: [null, []],
            id_metode_racikan: [1, []],
            metode_racikan: ['Puyer', []],
            id_item: [null, []],
            nama_racikan: ['', []],
            nama_obat: ['', []],
            jumlah_hari: [1, []],
            qty_harian: [1, []],
            qty_resep: [1, []],
            nama_satuan: ['-', []],
            id_rute_pemberian_obat: [null, []],
            rute_pemberian_obat: ['', []],
            id_satuan_aturan_pakai: [null, []],
            satuan_aturan_pakai: ['', []],
            label: ['', []],
            ket_label: ['', []],
            id_label_pemakaian_obat: [null, []],
            label_pemakaian_obat: ['', []],
            aturan: ['', []],
            ket_aturan: ['', []],
            id_tambahan_aturan_pakai: [null, []],
            label_tambahan_aturan_pakai_obat: ['', []],
        });
        this.GridDaftarObatToolbar = [
            { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
            { text: 'Delete', tooltipText: 'Delete', prefixIcon: 'fas fa-trash-alt fa-sm', id: 'delete' },
            'Search'
        ];
        let currentQtyResep = this.currentQtyResep;
        let currentIdItem = this.currentIdItem;
        let SelectedDataRacikanObat = this.SelectedDataRacikanObat;
        this.resepDokterService.dataSelectRacikan.next(SelectedDataRacikanObat);
        this.itemsParams = {
            create: () => {
                if (SelectedDataRacikanObat) {
                    this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat')
                        .select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan'])
                        .take(10).where("msi.nama_item", 'contains', SelectedDataRacikanObat.nama_obat, true);
                }
                else {
                    this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat')
                        .select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan'])
                        .take(10).where("msi.nama_item", 'contains', '', true);
                }
                this.itemsElem = document.createElement('input');
                return this.itemsElem;
            },
            read: () => {
                return this.itemsObj.text;
            },
            destroy: () => {
                this.itemsObj.destroy();
            },
            write: () => {
                this.itemsObj = new _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_24__.DropDownList({
                    dataSource: this.dataChild,
                    fields: this.fields,
                    query: this.queryChild,
                    enabled: true,
                    placeholder: 'Select a obat',
                    // floatLabelType: 'Never',
                    allowFiltering: true,
                    popupWidth: '55rem',
                    filtering: function (e) {
                        if (e.text === '') {
                            e.updateData(this.data);
                        }
                        else {
                            let query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where("msi.nama_item", 'contains', e.text, true);
                            e.updateData(this.data, query);
                        }
                    }.bind(this),
                    change: function (args) {
                        currentIdItem = args.itemData.id_item;
                        console.log('currentItem', currentIdItem);
                        this.setFormGrif(args, currentQtyResep, currentIdItem, SelectedDataRacikanObat);
                    }.bind(this),
                });
                this.itemsObj.appendTo(this.itemsElem);
                if (SelectedDataRacikanObat) {
                    this.setFormGrif(null, SelectedDataRacikanObat.qty_resep, currentIdItem, SelectedDataRacikanObat);
                    setTimeout(() => {
                        console.log('', SelectedDataRacikanObat);
                        currentIdItem = SelectedDataRacikanObat.id_item;
                        this.itemsObj.value = currentIdItem;
                    }, 10);
                }
            }
        };
        let counterRacikan = this.counterRacikan;
        let dataSourceChild = this.dataScourceGridChild;
        let dataSourceGrid = this.dataSourceGrid;
        this.resepDokterService.dataSourceChildGrid.next(dataSourceChild);
        this.resepDokterService.dataSourceParentGrid.next(dataSourceGrid.value);
        let nav = 'add';
        this.ChildGrid = {
            dataSource: this.dataScourceGridChild,
            queryString: "counter",
            rowHeight: 30,
            allowResizing: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: 'Both' },
            toolbar: ['Add', 'Edit', 'Delete', 'Update', 'Cancel'],
            editSettings: { allowEditing: true, allowAdding: true, allowDeleting: true },
            columns: [
                { field: "counter", headerText: 'c', width: 100, visible: false },
                { field: "no_urut", headerText: 'ID Obat', visible: false },
                { field: "nama_obat", headerText: 'Nama Obat', editType: 'dropdownedit', edit: this.itemsParams, width: 200 },
                { field: "nama_satuan", headerText: 'Satuan', textAlign: 'Right', width: 80, allowEditing: false },
                { field: "id_item", headerText: 'id', width: 100, visible: false },
                { field: "komposisi", headerText: 'kps', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2', allowEditing: false },
                { field: "seper", headerText: '1/', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                { field: "kandungan", headerText: 'Kandungan', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                { field: "qty_resep", headerText: 'qty', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2', visible: false },
                { field: "qty_racikan", headerText: 'QTY', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                { field: "keterangan", headerText: 'Keterangan', headerTextAlign: 'Center', textAlign: 'Left', width: 100 },
            ],
            rowSelected(args) {
                SelectedDataRacikanObat = args.data;
                console.log('row selected', SelectedDataRacikanObat);
            },
            actionBegin(args) {
                console.log('begin', args);
                if (args.requestType === 'add') {
                    const counter = 'counter';
                    args.data[counter] = this.parentDetails.parentKeyFieldValue;
                    args.data['qty_resep'] = this.parentDetails.parentRowData.qty_resep;
                    // (args.data as object)['counterRacikan'] = counterRacikan++;
                    currentQtyResep = this.parentDetails.parentRowData.qty_harian;
                    SelectedDataRacikanObat = null;
                }
            },
            actionComplete(args) {
                console.log(args);
                if (args.requestType == 'save') {
                    if (args.action == 'add') {
                        args.data.id_item = currentIdItem;
                        args.data.counterRacikan = counterRacikan++;
                        args.data.qty_racikan = parseFloat(args.data.qty_racikan);
                        console.log(dataSourceChild);
                        dataSourceChild.push(args.data);
                    }
                    if (args.action == 'edit') {
                        args.data.id_item = currentIdItem;
                        args.data.qty_racikan = parseFloat(args.data.qty_racikan);
                        let index = dataSourceChild.map((item) => { return item.counterRacikan; }).indexOf(args.data.counterRacikan);
                        dataSourceChild[index] = args.data;
                    }
                    let data = [];
                    dataSourceChild.orderBy('-counterRacikan');
                    dataSourceGrid.value.forEach((itemPrent, indexPrent) => {
                        data.push(itemPrent);
                    });
                    setTimeout(() => {
                        dataSourceGrid.next(data);
                        console.log(data);
                    }, 500);
                }
                if (args.requestType == "delete") {
                    let index = dataSourceChild.map((item) => { return item.counterRacikan; }).indexOf(args.data[0].counterRacikan);
                    dataSourceChild.splice(index, 1);
                    let data = [];
                    dataSourceChild.orderBy('-counterRacikan');
                    dataSourceGrid.value.forEach((itemPrent, indexPrent) => {
                        data.push(itemPrent);
                    });
                    setTimeout(() => {
                        dataSourceGrid.next(data);
                        console.log(data);
                    }, 500);
                }
            }
        };
        this.setupLabelPemakaianObatService.onGetAll().subscribe((result) => {
            this.dataSourceLabelPemakaian = result.data;
        });
        this.setupMetodeRacikanService.setDataSource();
        // this.resepDokterService.setDataObat([]);
        this.setupRutePemberianObatService.setDataSource();
        this.setupIntervalAturanPakaiService.setDataSource();
        this.setupTambahanAturanPakaiService.onGetAll().subscribe((result) => {
            this.dataSourceTambahanAturanPakai = result.data;
        });
        this.setupSatuanAturanPakaiService.onGetAll().subscribe((result) => {
            this.dataSourceSatuanAturanPakai = result.data;
        });
        this.resepDokterService.reset();
        this.setupOutletService.setDataSource();
        this.urlRacikan = this.urlRacikan + '/' + this.daftarPasienService.ActivePasien.value.id_dokter + '/I';
        this.urlTemplateResep = this.urlTemplateResep + '/' + this.daftarPasienService.ActivePasien.value.id_dokter;
        if ((this.router.url).includes('Dokter')) {
            this.ShowTitle = true;
        }
    }
    ngAfterViewInit() {
        setTimeout(() => {
            if (typeof this.activatedRoute.snapshot.params["id"] !== 'undefined') {
                let idString;
                idString = this.encryptionService.decrypt(this.activatedRoute.snapshot.params["id"]);
                this.idArry = idString.split(',');
                console.log(idString);
                console.log(this.idArry);
                if (this.idArry[1] == 'pulang') {
                    this.pulang = true;
                    this.ButtonNav = [
                        { Id: "kembali_update", Icons1: "fas fa-arrow-left fa-sm", Captions: "Kembali" },
                        { Id: "ubah", Icons1: "fas fa-save fa-sm", Captions: "Simpan Resep Pulang" },
                    ];
                }
                else {
                    this.ButtonNav = [
                        { Id: "kembali_update", Icons1: "fas fa-arrow-left fa-sm", Captions: "Kembali" },
                        { Id: "ubah", Icons1: "fas fa-save fa-sm", Captions: "Ubah Resep Dokter" },
                    ];
                }
                this.updateResep(parseInt(this.idArry[0]));
            }
        }, 1);
    }
    updateResep(id) {
        this.resepDokterService.onGetById(id).subscribe((result) => {
            this.dataUbah = result.data;
            this.setIdOutlet = result.data.id_outlet;
            this.MaritalOutletDropdown.value = result.data.id_outlet;
            this.heandleSelectedTemplateResep(result.data);
            this.updateResepDokter = true;
        });
    }
    handleClickTambahObat() {
        this.inputObat = true;
        this.tanggal_mulai_text.setValue(this.utilityService.onFormatDate(this.tanggal_mulai.value, 'Do MMMM yyyy'));
        this.tanggal_sampai_text.setValue(this.utilityService.onFormatDate(this.tanggal_sampai.value, 'Do MMMM yyyy'));
    }
    handleChangeOutlet(args) {
        this.setIdOutlet = args.value;
    }
    onLoad(args) {
    }
    setFormGrif(args, currentQtyResep, id_item, SelectedDataRacikanObat) {
        // console.log('function setgrid',SelectedDataRacikanObat);
        if (SelectedDataRacikanObat) {
            document.getElementsByName("nama_satuan")[0].value = SelectedDataRacikanObat.nama_satuan;
            document.getElementsByName("komposisi")[0].value = SelectedDataRacikanObat.komposisi;
            document.getElementsByName("seper")[0].value = SelectedDataRacikanObat.seper;
            document.getElementsByName("kandungan")[0].value = SelectedDataRacikanObat.kandungan;
            document.getElementsByName("qty_racikan")[0].value = SelectedDataRacikanObat.qty_racikan;
        }
        else {
            document.getElementsByName("nama_satuan")[0].value = args.itemData.nama_satuan;
            document.getElementsByName("komposisi")[0].value = args.itemData.kandungan_obat;
            document.getElementsByName("seper")[0].value = '1';
            document.getElementsByName("kandungan")[0].value = args.itemData.kandungan_obat;
            document.getElementsByName("qty_racikan")[0].value = currentQtyResep.toString();
        }
        let seper = document.getElementsByName("seper")[0];
        if (seper) {
            seper.addEventListener('click', (event) => {
                seper.select();
            });
            seper.addEventListener('keyup', (event) => {
                let komposisi = parseInt(document.getElementsByName("komposisi")[0].value);
                let seper = parseInt(document.getElementsByName("seper")[0].value);
                let hasil = komposisi / seper;
                document.getElementsByName("kandungan")[0].value = hasil.toString();
                let butuh = currentQtyResep * hasil;
                let qty = butuh / komposisi;
                document.getElementsByName("qty_racikan")[0].value = qty.toString();
            });
            this.setInputFilter(seper, function (value) {
                return /^\d*$/.test(value);
            });
        }
        let kandungan = document.getElementsByName("kandungan")[0];
        if (kandungan) {
            kandungan.addEventListener('click', (event) => {
                kandungan.select();
            });
            kandungan.addEventListener('keyup', (event) => {
                let kandungan = parseInt(document.getElementsByName("kandungan")[0].value);
                let komposisi = parseInt(document.getElementsByName("komposisi")[0].value);
                let butuh = currentQtyResep * kandungan;
                console.log(butuh);
                let qty = butuh / komposisi;
                document.getElementsByName("qty_racikan")[0].value = qty.toString();
                document.getElementsByName("seper")[0].value = '1';
            });
            this.setInputFilter(kandungan, function (value) {
                return /^\d*$/.test(value);
            });
        }
        let qty_racikan = document.getElementsByName("qty_racikan")[0];
        if (qty_racikan) {
            qty_racikan.addEventListener('click', (event) => {
                qty_racikan.select();
            });
            this.setInputFilter(qty_racikan, function (value) {
                return /^\d*$/.test(value);
            });
        }
    }
    setInputFilter(textbox, inputFilter) {
        ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function (event) {
            textbox.addEventListener(event, function () {
                if (inputFilter(this.value)) {
                    this.oldValue = this.value;
                    this.oldSelectionStart = this.selectionStart;
                    this.oldSelectionEnd = this.selectionEnd;
                }
                else if (Object.prototype.hasOwnProperty.call(this, 'oldValue')) {
                    this.value = this.oldValue;
                    if (this.oldSelectionStart !== null &&
                        this.oldSelectionEnd !== null) {
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    }
                }
                else {
                    this.value = "";
                }
            });
        });
    }
    rowDataBound(args) {
        var is_racikan = args.data.is_racikan;
        if (!is_racikan) {
            //here hide which parent row has no child records
            args.row.querySelector('td').innerHTML = " ";
            args.row.querySelector('td').className = "e-customizedExpandcell";
        }
        else {
            // args.row.classList.add('is-racikan');
        }
    }
    onDataBound() {
        this.GridResepRacikan.detailRowModule.expandAll();
    }
    // ** Dropdown Nama Obat onchange method
    handleChangeObat(args) {
        this.nama_satuan.setValue(args.itemData.nama_satuan);
        this.nama_obat.setValue(args.itemData.nama_obat);
    }
    handleChangeLabel(args) {
        this.label_pemakaian_obat.setValue('');
        this.id_label_pemakaian_obat.setValue(args.value);
        this.ket_label.setValue(args.itemData.nama_label_pemakaian_obat);
        this.qty_harian.setValue(args.itemData.berapa_kali_per_hari);
    }
    handleChangeAturan(args) {
        if (typeof args.value === 'number' && (args.value % 1) === 0) {
            this.label_tambahan_aturan_pakai_obat.setValue('');
            this.id_tambahan_aturan_pakai.setValue(args.value);
            this.ket_aturan.setValue(args.itemData.tambahan_aturan_pakai);
        }
        else {
            this.label_tambahan_aturan_pakai_obat.setValue(args.value);
            this.id_tambahan_aturan_pakai.setValue(1);
            this.ket_aturan.setValue(args.itemData.tambahan_aturan_pakai);
        }
    }
    handleChangeRacikan(args) {
        if (args) {
            this.nama_satuan.setValue('PUYER');
        }
        else {
            this.nama_satuan.setValue("-");
        }
    }
    handleChangeNamaRacikan() {
        this.set_racikan_id.setValue(null);
    }
    handelClickRacikan() {
        this.LookupRacikan.onOpenModal();
    }
    handleChangeMetodeRacikan(args) {
        this.metode_racikan.setValue(args.itemData.metode_racikan);
        this.nama_satuan.setValue(args.itemData.metode_racikan);
    }
    handleChangeRute(args) {
        this.rute_pemberian_obat.setValue(args.itemData.nama_rute_pemberian_obat);
    }
    handleChangePemakaian(args) {
        console.log(args);
        //   this.interval_aturan_pakai.setValue(args.itemData.interval_aturan_pakai);
    }
    handleChangeSatuanAturan(args) {
        this.satuan_aturan_pakai.setValue(args.itemData.satuan_aturan_pakai);
    }
    handleSelectedRacikan(args) {
        args.is_racikan = true;
        this.set_racikan_id.setValue(args.set_racikan_id);
        this.nama_obat.setValue(args.nama_obat);
        this.nama_racikan.setValue(args.nama_obat);
        this.id_metode_racikan.setValue(args.id_metode_racikan);
        this.metode_racikan.setValue(args.metode_racikan);
        this.id_rute_pemberian_obat.setValue(args.id_rute_pemberian_obat);
        this.rute_pemberian_obat.setValue(args.nama_rute_pemberian_obat);
        this.id_metode_racikan.setValue(args.id_metode_racikan);
        this.nama_satuan.setValue(args.metode_racikan);
        this.label.setValue(args.id_label_pemakaian_obat);
        this.id_label_pemakaian_obat.setValue(args.id_label_pemakaian_obat);
        this.ket_label.setValue(args.ket_label);
        this.id_satuan_aturan_pakai.setValue(args.id_satuan_aturan_pakai);
        this.satuan_aturan_pakai.setValue(args.satuan_aturan_pakai);
        this.aturan.setValue(args.id_tambahan_aturan_pakai);
        this.label_tambahan_aturan_pakai_obat.setValue(args.label_tambahan_aturan_pakai_obat);
        this.id_tambahan_aturan_pakai.setValue(args.id_tambahan_aturan_pakai);
        this.ket_aturan.setValue(args.ket_aturan);
        let detail = [];
        // detail = this.GridResepRacikan.childGrid.dataSource;
        args.details.forEach(element => {
            let counterRacikan = this.counterRacikan++;
            element.counterRacikan = counterRacikan;
            element.komposisi = parseInt(element.kandungan_obat);
            element.kandungan = 1;
            element.seper = 1;
            element.qty_resep = args.qty_resep;
            detail.push(element);
        });
        console.log(detail);
        this.DataRacikan = detail;
    }
    heandleSelectedTemplateResep(args) {
        let obat = [];
        let detail;
        detail = this.GridResepRacikan.childGrid.dataSource;
        args.details.forEach(element => {
            this.counter++;
            element.counter = this.counter;
            if (element.is_racikan) {
                element.nama_racikan = element.nama_obat;
            }
            else {
                element.nama_racikan = '';
            }
            if (element.id_label_pemakaian_obat == 1) {
                element.label = element.ket_label;
            }
            else {
                element.label = element.id_label_pemakaian_obat;
            }
            if (element.id_tambahan_aturan_pakai == 1) {
                element.aturan = element.ket_aturan;
            }
            else {
                element.aturan = element.id_tambahan_aturan_pakai;
            }
            element.rute_pemberian_obat = element.nama_rute_pemberian_obat;
            // this.resepDokterService.addDetail(element);
            obat.push(element);
            element.racikans.forEach(racikan => {
                let counterRacikan = this.counterRacikan++;
                racikan.counter = this.counter;
                racikan.counterRacikan = counterRacikan;
                racikan.komposisi = parseInt(racikan.kandungan_obat);
                racikan.kandungan = 1;
                racikan.seper = 1;
                racikan.qty_resep = element.qty_resep;
                detail.push(racikan);
            });
        });
        this.dataSourceGrid.next(obat);
        this.resepDokterService.dataSourceChildGrid.next(detail);
        this.resepDokterService.dataSourceParentGrid.next(obat);
        this.GridResepRacikan.refresh();
        this.isGetFromTemplate = true;
    }
    handleAddObat(FormAddObat) {
        if (this.validasi(FormAddObat)) {
            FormAddObat.nama_rute_pemberian_obat = FormAddObat.rute_pemberian_obat;
            this.counter++;
            FormAddObat.counter = this.counter;
            if (FormAddObat.is_racikan) {
                FormAddObat.nama_obat = FormAddObat.nama_racikan;
            }
            else {
                FormAddObat.id_metode_racikan = null;
                FormAddObat.metode_racikan = null;
            }
            //   this.resepDokterService.addDetail(FormAddObat);
            let dataDetail = this.dataSourceGrid.value;
            dataDetail.push(FormAddObat);
            this.dataSourceGrid.next(dataDetail);
            this.resepDokterService.dataSourceParentGrid.next(dataDetail);
            let racikan;
            racikan = this.GridResepRacikan.childGrid.dataSource;
            console.log(racikan);
            if (this.is_racikan.value && this.DataRacikan.length > 0) {
                console.log(this.DataRacikan);
                this.DataRacikan.forEach((item, index) => {
                    item.counter = this.counter;
                    racikan.push(item);
                });
                this.DataRacikan = [];
            }
            console.log(racikan);
            this.resepDokterService.dataSourceChildGrid.next(racikan);
            this.GridResepRacikan.refresh();
            this.onResetFormObat();
        }
    }
    validasi(FormData) {
        let message = [];
        let htmlSelection = '';
        console.log('validasi', FormData);
        if (FormData.is_racikan) {
            if (FormData.nama_racikan == '' || FormData.nama_racikan == null) {
                message.push('Nama Racikan belum di isi');
            }
            if (FormData.metode_racikan == '' || FormData.metode_racikan == null) {
                message.push('Kemasan Racikan belum di isi');
            }
        }
        else {
            if (FormData.nama_obat == '' || FormData.nama_obat == null) {
                message.push('obat belum di pillih');
            }
            if (FormData.satuan_aturan_pakai == '' || FormData.satuan_aturan_pakai == null) {
                message.push('Satuan belum di pillih');
            }
        }
        if (FormData.rute_pemberian_obat == '' || FormData.rute_pemberian_obat == null) {
            message.push('Rute Pemberian Obat Obat belum di isi');
        }
        if (FormData.label == '' || FormData.label == null) {
            message.push('Label Obat belum di isi');
        }
        if (FormData.aturan == '' || FormData.aturan == null) {
            message.push('Aturan Tambahan belum di isi');
        }
        if (message.length > 0) {
            htmlSelection = '<div class="text-danger"><ul>';
            message.forEach((value, index) => {
                htmlSelection += `<li>${value}</li>`;
            });
            htmlSelection += `</ul></div>`;
            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default().fire({
                icon: 'error',
                title: 'Validasi Data',
                html: htmlSelection,
            });
            return false;
        }
        else {
            return true;
        }
    }
    onResetFormObat() {
        this.set_racikan_id.setValue(null);
        this.id_metode_racikan.setValue(null);
        this.metode_racikan.setValue('');
        this.id_item.setValue(null);
        this.nama_racikan.setValue('');
        this.nama_obat.setValue('');
        this.nama_satuan.setValue('-');
        this.SatuanObat = "";
        this.is_racikan.setValue(false);
    }
    // ** Update Data Obat method
    onUpdateDataObat(FormAddObat) {
        if (this.validasi(FormAddObat)) {
            FormAddObat.nama_rute_pemberian_obat = FormAddObat.rute_pemberian_obat;
            if (FormAddObat.is_racikan) {
                FormAddObat.nama_obat = FormAddObat.nama_racikan;
            }
            let dataDetail = this.dataSourceGrid.value;
            dataDetail[this.currentIndex] = FormAddObat;
            this.dataSourceGrid.next(dataDetail);
            this.resepDokterService.dataSourceParentGrid.next(dataDetail);
            this.onResetFormObat();
            this.GridResepRacikan.refresh();
            this.FormAddObatState = "input";
        }
    }
    // ** Grid Daftar Obat method
    onInitalizedGrid(component) {
        this.gridDaftarObat = component;
    }
    // ** Grid Daftar Obat method
    onToolbarClick(args) {
        switch (args.item.id) {
            case "edit":
                //   this.FormAddObat.setValue(this.SelectedDataObat);
                this.onEditData();
                this.FormAddObatState = "edit";
                break;
            case "delete":
                let dataObat = this.resepDokterService.dataSourceParentGrid.value;
                dataObat.splice(this.currentIndex, 1);
                this.resepDokterService.dataSourceParentGrid.next(dataObat);
                this.dataSourceGrid.next(dataObat);
                this.GridResepRacikan.refresh();
                break;
            default:
                break;
        }
        ;
    }
    onEditData() {
        let data = this.SelectedDataObat;
        console.log(data);
        this.FormAddObat.setValue({
            counter: data.counter,
            no_urut: data.no_urut,
            is_racikan: data.is_racikan,
            set_racikan_id: data.set_racikan_id,
            id_metode_racikan: data.id_metode_racikan,
            metode_racikan: data.metode_racikan,
            id_item: data.id_item,
            nama_obat: data.nama_obat,
            qty_resep: data.qty_resep,
            nama_satuan: data.nama_satuan,
            label: data.label,
            ket_label: data.ket_label,
            id_label_pemakaian_obat: data.id_label_pemakaian_obat,
            label_pemakaian_obat: data.label_pemakaian_obat,
            aturan: data.aturan,
            ket_aturan: data.ket_aturan,
            id_tambahan_aturan_pakai: data.id_tambahan_aturan_pakai,
            label_tambahan_aturan_pakai_obat: data.label_tambahan_aturan_pakai_obat,
            nama_racikan: data.nama_racikan,
            id_satuan_aturan_pakai: data.id_satuan_aturan_pakai,
            satuan_aturan_pakai: data.satuan_aturan_pakai,
            jumlah_hari: data.jumlah_hari,
            qty_harian: data.qty_harian,
            id_rute_pemberian_obat: data.id_rute_pemberian_obat,
            rute_pemberian_obat: data.nama_rute_pemberian_obat
        });
    }
    onActionComplete(args) {
        // let dataSourceParent: any = this.GridResepRacikan.dataSource;
        // this.resepDokterService.dataSourceParentGrid.next(dataSourceParent);
        // console.log("Parent", this.GridResepRacikan.dataSource);
        // console.log("Children", this.GridResepRacikan.childGrid.dataSource);
    }
    // ** Grid Daftar Obat method
    onRowSelected(args) {
        this.currentIndex = args.rowIndex;
        this.SelectedDataObat = args.data;
    }
    Insert() {
        if (this.setIdOutlet == 0) {
            this.utilityService.onShowingCustomAlert('warning', 'Depo Farmasi belum di isi', '');
            return false;
        }
        this.data_header = {
            id_dokter: this.daftarPasienService.ActivePasien.value.id_dokter,
            id_register: this.daftarPasienService.ActivePasien.value.id_register,
            id_outlet: this.setIdOutlet,
            id_person: this.daftarPasienService.ActivePasien.value.id_person,
            jenis_rawat: 'I',
            nama_template: '',
            tanggal_resep: moment__WEBPACK_IMPORTED_MODULE_4___default()().format()
        };
        this.newdetail = this.resepDokterService.dataSourceParentGrid.value.filter((item) => {
            return item.is_racikan && !item.set_racikan_id;
        });
        this.baru = 0;
        if (!this.isGetFromTemplate) {
            this.modalRef = this.modalService.show(this.modalTemplateResep, Object.assign({}, { class: 'modal-lg' }));
        }
        else {
            this.methodConfirmSetRacikan(0);
        }
    }
    handleClickSimpanTemplateResepDokter() {
        let nama_resep = document.getElementsByName("nama_resep")[0].value;
        this.data_header.nama_template = nama_resep;
        this.modalRef.hide();
        this.methodConfirmSetRacikan(1);
    }
    handleClickAbaikan() {
        this.modalRef.hide();
        this.methodConfirmSetRacikan(0);
    }
    methodConfirmSetRacikan(simpan_template) {
        if (this.newdetail.length > 0) {
            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default().fire({
                title: 'Apakah Anda Ingin Menyimpan Racikan Baru ke dalam Setting Racikan dokter?',
                text: "Racikan akan bisa di gunakan lagi untuk template",
                icon: 'info',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Iya Simpan Sebagai Template Racikan',
                cancelButtonText: 'Tidak',
                focusCancel: true,
            }).then((result) => {
                if (result.isConfirmed) {
                    this.baru = 1;
                }
                else {
                    this.baru = 0;
                }
                this.methodInsert(this.data_header, simpan_template, this.baru);
            });
        }
        else {
            this.methodInsert(this.data_header, simpan_template, 0);
        }
    }
    methodInsert(Data, is_simpan_template, is_simpan_racikan) {
        this.resepDokterService.Insert(Data, is_simpan_template, is_simpan_racikan).subscribe((result) => {
            this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                .then(() => {
                // this.resepDokterService.reset();
                this.isGetFromTemplate = false;
                this.router.navigateByUrl('Dokter/resep-irna/daftar-resep-irna');
            });
        });
    }
    ubahResep() {
        if (this.pulang) {
            this.resepDokterService.pulangResepRawatInap(this.dataUbah).subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Berhasil Simpan Resep Pulang', result.message)
                    .then(() => {
                    const id = this.encryptionService.encrypt(JSON.stringify(result.data));
                    this.router.navigate(['Dokter/resep-irna/view-resep-irna', id, "GRAHCIS"]);
                });
            });
        }
        else {
            this.resepDokterService.ubahResepRawatInap(this.dataUbah).subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Resep Ini Berhasil Di Ubah', result.message)
                    .then(() => {
                    const id = this.encryptionService.encrypt(JSON.stringify(result.data));
                    this.router.navigate(['Dokter/resep-irna/view-resep-irna', id, "GRAHCIS"]);
                });
            });
        }
    }
    onClickButtonNav(args) {
        switch (args) {
            case "kembali_update":
                const id = this.encryptionService.encrypt(JSON.stringify(this.dataUbah.resep_id));
                this.router.navigate(['Dokter/resep-irna/view-resep-irna', id, "GRAHCIS"]);
                break;
            case "ubah":
                this.ubahResep();
                break;
            case "Kembali":
                this.router.navigateByUrl('Dokter/resep-irna/daftar-resep-irna');
                break;
            case "Template":
                this.handelClickTemplateResep();
                break;
            case "Reset":
                // this.resepDokterService.reset();
                this.isGetFromTemplate = false;
                window.location.reload();
                break;
            case "Simpan":
                // console.log('childernya',this.dataScourceGridChild)  
                this.resepDokterService.dataSourceChildGrid.next(this.dataScourceGridChild);
                this.Insert();
                // this.resepDokterService.saveResep();
                break;
            default:
                break;
        }
    }
    handelClickTemplateResep() {
        this.LookupTemplateResep.onOpenModal();
    }
    get tanggal_mulai() { return this.FormAddObat.get('tanggal_mulai'); }
    ;
    get tanggal_sampai() { return this.FormAddObat.get('tanggal_sampai'); }
    ;
    get tanggal_mulai_text() { return this.FormAddObat.get('tanggal_mulai_text'); }
    ;
    get tanggal_sampai_text() { return this.FormAddObat.get('tanggal_sampai_text'); }
    ;
    get is_racikan() { return this.FormAddObat.get('is_racikan'); }
    ;
    get set_racikan_id() { return this.FormAddObat.get('set_racikan_id'); }
    ;
    get id_metode_racikan() { return this.FormAddObat.get('id_metode_racikan'); }
    ;
    get metode_racikan() { return this.FormAddObat.get('metode_racikan'); }
    ;
    get id_item() { return this.FormAddObat.get('id_item'); }
    ;
    get nama_racikan() { return this.FormAddObat.get('nama_racikan'); }
    get nama_obat() { return this.FormAddObat.get('nama_obat'); }
    ;
    get jumlah_hari() { return this.FormAddObat.get('jumlah_hari'); }
    get qty_harian() { return this.FormAddObat.get('qty_harian'); }
    get qty_resep() { return this.FormAddObat.get('qty_resep'); }
    get nama_satuan() { return this.FormAddObat.get('nama_satuan'); }
    get id_rute_pemberian_obat() { return this.FormAddObat.get('id_rute_pemberian_obat'); }
    get rute_pemberian_obat() { return this.FormAddObat.get('rute_pemberian_obat'); }
    get jumlah_satuan_aturan_pakai() { return this.FormAddObat.get('jumlah_satuan_aturan_pakai'); }
    get id_satuan_aturan_pakai() { return this.FormAddObat.get('id_satuan_aturan_pakai'); }
    get satuan_aturan_pakai() { return this.FormAddObat.get('satuan_aturan_pakai'); }
    //   get jumlah_interval_aturan_pakai(): AbstractControl { return this.FormAddObat.get('jumlah_interval_aturan_pakai'); }
    //   get id_interval_aturan_pakai(): AbstractControl { return this.FormAddObat.get('id_interval_aturan_pakai'); }
    //   get interval_aturan_pakai(): AbstractControl { return this.FormAddObat.get('interval_aturan_pakai'); }
    get aturan() { return this.FormAddObat.get('aturan'); }
    get ket_aturan() { return this.FormAddObat.get('ket_aturan'); }
    get id_tambahan_aturan_pakai() { return this.FormAddObat.get('id_tambahan_aturan_pakai'); }
    get label_tambahan_aturan_pakai_obat() { return this.FormAddObat.get('label_tambahan_aturan_pakai_obat'); }
    get label() { return this.FormAddObat.get('label'); }
    get ket_label() { return this.FormAddObat.get('ket_label'); }
    get id_label_pemakaian_obat() { return this.FormAddObat.get('id_label_pemakaian_obat'); }
    get label_pemakaian_obat() { return this.FormAddObat.get('label_pemakaian_obat'); }
}
InputResepIrnaComponent.ɵfac = function InputResepIrnaComponent_Factory(t) { return new (t || InputResepIrnaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_25__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](_services_resep_dokter_irna_resep_dokter_irna_service__WEBPACK_IMPORTED_MODULE_7__.ResepDokterIrnaService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_metode_racikan_setup_metode_racikan_service__WEBPACK_IMPORTED_MODULE_8__.SetupMetodeRacikanService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_rute_pemberian_obat_setup_rute_pemberian_obat_service__WEBPACK_IMPORTED_MODULE_9__.SetupRutePemberianObatService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_satuan_aturan_pakai_setup_satuan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_10__.SetupSatuanAturanPakaiService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_interval_aturan_pakai_setup_interval_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_11__.SetupIntervalAturanPakaiService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_tambahan_aturan_pakai_setup_tambahan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_12__.SetupTambahanAturanPakaiService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_service__WEBPACK_IMPORTED_MODULE_13__.SetupLabelPemakaianObatService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_14__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__.BsModalService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_26__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_15__.EncryptionService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_26__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_16__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_17__.SetupOutletService)); };
InputResepIrnaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵdefineComponent"]({ type: InputResepIrnaComponent, selectors: [["app-input-resep-irna"]], viewQuery: function InputResepIrnaComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵviewQuery"](_c1, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵviewQuery"](_c2, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵviewQuery"](_c3, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵviewQuery"](_c4, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵviewQuery"](_c5, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵloadQuery"]()) && (ctx.LookupRacikan = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵloadQuery"]()) && (ctx.LookupTemplateResep = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵloadQuery"]()) && (ctx.modalTemplateResep = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵloadQuery"]()) && (ctx.MaritalOutletDropdown = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵloadQuery"]()) && (ctx.GridResepRacikan = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵloadQuery"]()) && (ctx.itemTemplate = _t.first);
    } }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵProvidersFeature"]([ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__.BsModalService])], decls: 97, vars: 88, consts: [[3, "ButtonNav", "ShowTitle", "onClickButtonNav"], [1, "form-irna", 3, "formGroup"], [1, "row"], [1, "col-lg-4"], [1, "row", "mb-2"], [1, "col-lg-2", "col-md-1", "col-sm-1", "col-xs-1"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], ["for", "DropdownObat", 1, "form-label"], ["type", "checkbox", "formControlName", "is_racikan", 1, "form-check-input"], ["class", "col-lg-10 col-md-11 col-sm-11 col-xs-11", 4, "ngIf"], ["class", "col-lg-10 col-md-10 col-sm-10 col-xs-10", 4, "ngIf"], ["class", "row", 4, "ngIf"], [1, "col-lg-12"], ["for", "kemasan", 1, "form-label"], ["id", "DropdownRutePemberian", "formControlName", "id_rute_pemberian_obat", "popupWidth", "30rem", 3, "allowFiltering", "dataSource", "fields", "change"], ["for", "label", 1, "form-label"], ["id", "DropdownLabelPemakaian", "formControlName", "label", "popupWidth", "30rem", 3, "allowFiltering", "dataSource", "fields", "change"], ["class", "row mb-2", 4, "ngIf"], ["for", "NumericQty", 1, "form-label"], ["id", "DropdownTambahanAturanPakai", "formControlName", "aturan", "popupWidth", "25rem", 3, "allowFiltering", "dataSource", "fields", "change"], [1, "col-lg-6"], ["id", "NumericQty", "formControlName", "qty_harian", 3, "format", "showSpinButton", "readonly", "showClearButton", "ste"], ["id", "NumericQty", "formControlName", "jumlah_hari", 1, "form_paragraf", 3, "format", "showSpinButton", "showClearButton", "min", "ste"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", 3, "disabled", "hidden", "click"], [1, "fas", "fa-plus-circle", "fa-sm"], [3, "hidden"], ["type", "button", 1, "btn", "btn-warning", "btn-sm", 3, "disabled", "hidden", "click"], [1, "fas", "fa-edit", "fa-sm"], [3, "lookup-url", "columns", "columnsChild", "filter-lookup", "modal-title", "queryString", "onGetSelectedData"], ["LookupTemplateResep", ""], [3, "lookup-url", "columns", "columnsChild", "filter-lookup", "modal-title", "onGetSelectedData"], ["LookupRacikan", ""], [1, "col-lg-8"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "LabelCaption"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], ["id", "marital", 3, "dataSource", "fields", "allowFiltering", "change"], ["MaritalOutletDropdown", ""], [1, "card"], [1, "card-body", "p-0"], ["height", "calc(100vh - 15rem)", "gridLines", "Both", "rowHeight", "30", 3, "dataSource", "childGrid", "toolbar", "allowTextWrap", "textWrapSettings", "toolbarClick", "load", "rowDataBound", "dataBound", "rowSelected", "actionComplete"], ["GridResepRacikan", ""], ["field", "no_urut", "headerText", "no_urut", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "is_racikan", "headerText", "is_racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "set_racikan_id", "headerText", "set_racikan_id", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_metode_racikan", "headerText", "id_metode_racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_item", "headerText", "id_item", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_label_pemakaian_obat", "headerText", "id_label_pemakaian_obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_tambahan_aturan_pakai", "headerText", "id_tambahan_aturan_pakai", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_obat", "headerText", "Nama Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_satuan", "headerText", "Satuan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "metode_racikan", "headerText", "Kemasan Racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_obat", "headerText", "Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "rute_pemberian_obat", "headerText", "Pemakaian", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing", "valueAccessor"], ["field", "qty_harian", "headerText", "Qty", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", 3, "visible", "allowEditing", "width", "valueAccessor"], ["field", "ket_aturan", "headerText", "Aturan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["modalTemplateResep", ""], [1, "col-lg-10", "col-md-11", "col-sm-11", "col-xs-11"], ["id", "DropdownObat", "formControlName", "id_item", "popupWidth", "55rem", 3, "allowFiltering", "dataSource", "fields", "placeholder", "query", "sortOrder", "filtering", "change"], ["Drop", ""], [1, "col-lg-10", "col-md-10", "col-sm-10", "col-xs-10"], [1, "input-group"], ["type", "text", "formControlName", "nama_racikan", 1, "form-control", "form-select-sm", 3, "change"], ["id", "btnInputGroup", "type", "button", 1, "btn", "btn-primary", 2, "padding", ".1rem .8rem", "background-color", "#00afff; border: 0", 3, "click"], [1, "fas", "fa-search"], ["formControlName", "id_metode_racikan", 3, "dataSource", "fields", "allowFiltering", "change"], ["MolDropdown", ""], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "pe-1"], ["id", "DropdownLabelPemakaian", "formControlName", "id_satuan_aturan_pakai", "popupWidth", "30rem", 3, "allowFiltering", "dataSource", "fields", "change"], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body", "p-10"], [1, "row", "mx-0", "my-1"], [1, "col-lg-12", "col-md-12", "col-sm-12", 2, "text-align", "center"], [1, "col-lg-12", "col-md-12", "col-sm-12"], [1, "col-sm-4"], ["for", "nama_resep"], [1, "col-sm-8"], ["type", "text", "name", "nama_resep", 1, "form-control", "form-control-sm"], [1, "modal-footer", "background-abu-muda"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], ["type", "button", 1, "btn", "btn-danger", 3, "click"]], template: function InputResepIrnaComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](0, "org-card-layout", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("onClickButtonNav", function InputResepIrnaComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](1, "form", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](5, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](6, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](7, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](8, "label", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](9, "Racik");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](10, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](11, "input", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtemplate"](12, InputResepIrnaComponent_div_12_Template, 8, 7, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtemplate"](13, InputResepIrnaComponent_div_13_Template, 10, 0, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtemplate"](14, InputResepIrnaComponent_div_14_Template, 10, 5, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](15, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](16, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](17, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](18, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](19, "label", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](20, "Rute Pemberian Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](21, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](22, "ejs-combobox", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("change", function InputResepIrnaComponent_Template_ejs_combobox_change_22_listener($event) { return ctx.handleChangeRute($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpipe"](23, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](24, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](25, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](26, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](27, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](28, "label", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](29, "Label");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](30, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](31, "ejs-dropdownlist", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("change", function InputResepIrnaComponent_Template_ejs_dropdownlist_change_31_listener($event) { return ctx.handleChangeLabel($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtemplate"](32, InputResepIrnaComponent_div_32_Template, 8, 3, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](33, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](34, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](35, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](36, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](37, "label", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](38, "Aturan Tambahan");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](39, "ejs-combobox", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("change", function InputResepIrnaComponent_Template_ejs_combobox_change_39_listener($event) { return ctx.handleChangeAturan($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](40, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](41, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](42, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](43, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](44, "label", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](45, "Qty/Hari");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](46, "ejs-numerictextbox", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](47, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](48, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](49, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](50, "label", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](51, "Untuk Berapa Hari");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](52, "ejs-numerictextbox", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](53, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](54, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](55, "button", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("click", function InputResepIrnaComponent_Template_button_click_55_listener() { return ctx.handleAddObat(ctx.FormAddObat.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](56, "i", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](57, "span", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](58, "\u00A0Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](59, "button", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("click", function InputResepIrnaComponent_Template_button_click_59_listener() { return ctx.onUpdateDataObat(ctx.FormAddObat.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](60, "i", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](61, "span", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtext"](62, "\u00A0Edit Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](63, "org-look-up-hirarki", 28, 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("onGetSelectedData", function InputResepIrnaComponent_Template_org_look_up_hirarki_onGetSelectedData_63_listener($event) { return ctx.heandleSelectedTemplateResep($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](65, "org-look-up-hirarki", 30, 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("onGetSelectedData", function InputResepIrnaComponent_Template_org_look_up_hirarki_onGetSelectedData_65_listener($event) { return ctx.handleSelectedRacikan($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](67, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](68, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](69, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](70, "atm-label", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](71, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](72, "ejs-dropdownlist", 36, 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("change", function InputResepIrnaComponent_Template_ejs_dropdownlist_change_72_listener($event) { return ctx.handleChangeOutlet($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpipe"](74, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](75, "div", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](76, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](77, "ejs-grid", 40, 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵlistener"]("toolbarClick", function InputResepIrnaComponent_Template_ejs_grid_toolbarClick_77_listener($event) { return ctx.onToolbarClick($event); })("load", function InputResepIrnaComponent_Template_ejs_grid_load_77_listener($event) { return ctx.onLoad($event); })("rowDataBound", function InputResepIrnaComponent_Template_ejs_grid_rowDataBound_77_listener($event) { return ctx.rowDataBound($event); })("dataBound", function InputResepIrnaComponent_Template_ejs_grid_dataBound_77_listener() { return ctx.onDataBound(); })("rowSelected", function InputResepIrnaComponent_Template_ejs_grid_rowSelected_77_listener($event) { return ctx.onRowSelected($event); })("actionComplete", function InputResepIrnaComponent_Template_ejs_grid_actionComplete_77_listener($event) { return ctx.onActionComplete($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpipe"](79, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementStart"](80, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](81, "e-column", 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](82, "e-column", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](83, "e-column", 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](84, "e-column", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](85, "e-column", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](86, "e-column", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](87, "e-column", 48);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](88, "e-column", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](89, "e-column", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](90, "e-column", 51);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](91, "e-column", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](92, "e-column", 53);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](93, "e-column", 54);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelement"](94, "e-column", 55);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtemplate"](95, InputResepIrnaComponent_ng_template_95_Template, 24, 0, "ng-template", null, 56, _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav)("ShowTitle", ctx.ShowTitle);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("formGroup", ctx.FormAddObat);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](11);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("ngIf", !ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("ngIf", ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("ngIf", ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("allowFiltering", true)("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpipeBind1"](23, 81, ctx.setupRutePemberianObatService.dataSource))("fields", ctx.DropdownRuteFields);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx.dataSourceLabelPemakaian)("fields", ctx.DropdownLabelFields);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("ngIf", !ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx.dataSourceTambahanAturanPakai)("fields", ctx.DropdownAturanFields);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("format", "N0")("showSpinButton", false)("readonly", true)("showClearButton", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("format", "N0")("showSpinButton", false)("showClearButton", false)("min", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("disabled", ctx.FormAddObat.invalid)("hidden", ctx.FormAddObatState != "input");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("hidden", ctx.width >= 1023 && ctx.width <= 1200);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("disabled", ctx.FormAddObat.invalid)("hidden", ctx.FormAddObatState == "input");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("hidden", ctx.width >= 1023 && ctx.width <= 1200);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("lookup-url", ctx.urlTemplateResep)("columns", ctx.GridlookUpTemplateResep.columns)("columnsChild", ctx.GridlookUpTemplateResep.columnsChild)("filter-lookup", ctx.GridlookUpTemplateResep.filter)("modal-title", "Data Template Resep Dokter")("queryString", "resep_id");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("lookup-url", ctx.urlRacikan)("columns", ctx.GridLookUpItem.columns)("columnsChild", ctx.GridLookUpItem.columnsChild)("filter-lookup", ctx.GridLookUpItem.filter)("modal-title", "Data Racikan Dokter");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("LabelCaption", "Depo Farmasi");
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpipeBind1"](74, 83, ctx.setupOutletService.dataSource))("fields", ctx.SetupOutletDropdownField)("allowFiltering", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpipeBind1"](79, 85, ctx.dataSourceGrid))("childGrid", ctx.ChildGrid)("toolbar", ctx.GridDaftarObatToolbar)("allowTextWrap", true)("textWrapSettings", _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵpureFunction0"](87, _c6));
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", true)("allowEditing", false)("valueAccessor", ctx.keterangan);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 200)("valueAccessor", ctx.quantity);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_21__["ɵɵproperty"]("visible", false)("allowEditing", false);
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_18__.OrgCardLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_25__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_25__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_25__.FormGroupDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_25__.CheckboxControlValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_25__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_25__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_27__.NgIf, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_28__.ComboBoxComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_28__.DropDownListComponent, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_29__.NumericTextBoxComponent, _shared_components_organism_loockUp_org_look_up_hirarki_org_look_up_hirarki_component__WEBPACK_IMPORTED_MODULE_19__.OrgLookUpHirarkiComponent, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_20__.AtmLabelComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_30__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_30__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_30__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_30__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_30__.AggregateColumnDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_25__.DefaultValueAccessor], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_27__.AsyncPipe], styles: ["#basic-addon1[_ngcontent-%COMP%] {\r\n    height: 32px;\r\n    padding-left: 12px;\r\n    width: 100%;\r\n    border-top-left-radius: 0;\r\n    border-bottom-left-radius: 0;\r\n    border: 0;\r\n  }\r\n  \r\n  #DropdownObat[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%] {\r\n    border-top-right-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n  }\r\n  \r\n  #NumericQty[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%]    > input[_ngcontent-%COMP%] {\r\n    text-align: right;\r\n    padding-right: 5px;\r\n  }\r\n  \r\n  div.head[_ngcontent-%COMP%] {\r\n    font-size: 13px !important;\r\n    font-weight: 500 !important;\r\n  }\r\n  \r\n  .is-racikan[_ngcontent-%COMP%]{\r\n    background-color: #f3e6f3;\r\n  }\r\n  \r\n  .form_paragraf[_ngcontent-%COMP%]{\r\n    display: inline-block!important;\r\n  }\r\n  \r\n  .form-label[_ngcontent-%COMP%] {\r\n  margin-bottom: 0px;\r\n}\r\n  \r\n  #basic-addon1[_ngcontent-%COMP%] {\r\n  height: 32px;\r\n  padding-left: 12px;\r\n  width: 100%;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  border: 0;\r\n}\r\n  \r\n  .e-toolbar[_ngcontent-%COMP%]   .e-toolbar-item[_ngcontent-%COMP%]   .e-tbar-btn.e-btn[_ngcontent-%COMP%]   .e-icons.e-btn-icon[_ngcontent-%COMP%] {\r\n  min-height: 14px !important;\r\n}\r\n  \r\n  th.e-headercell[_ngcontent-%COMP%] {\r\n  background-color: rgba(0, 0, 0, 0.03);\r\n  color: black;\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  padding: 5px !important;\r\n  height: 30px !important;\r\n}\r\n  \r\n  span.e-headertext[_ngcontent-%COMP%] {\r\n  font-size: 13px !important;\r\n}\r\n  \r\n  td.e-rowcell[_ngcontent-%COMP%] {\r\n  padding: 5px !important;\r\n}"] });


/***/ }),

/***/ 25552:
/*!************************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irna/pulang-resep-irna/pulang-resep-irna.component.ts ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache;
var _json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache;
var _json_GridResep_json__WEBPACK_IMPORTED_MODULE_4___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PulangResepIrnaComponent": () => (/* binding */ PulangResepIrnaComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 43479);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 49548);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sweetalert2 */ 88259);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./json/lookupitem.json */ 29625);
/* harmony import */ var _json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./json/lookuptemplateresep.json */ 36508);
/* harmony import */ var _json_GridResep_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./json/GridResep.json */ 96237);
/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @syncfusion/ej2-data */ 78865);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ 26215);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ 16738);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _services_resep_dokter_resep_dokter_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../services/resep-dokter/resep-dokter.service */ 67669);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-label-pemakaian-obat/setup-label-pemakaian-obat.service */ 65203);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_tambahan_aturan_pakai_setup_tambahan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-tambahan-aturan-pakai/setup-tambahan-aturan-pakai.service */ 561);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_satuan_aturan_pakai_setup_satuan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-satuan-aturan-pakai/setup-satuan-aturan-pakai.service */ 43233);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_metode_racikan_setup_metode_racikan_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-metode-racikan/setup-metode-racikan.service */ 6524);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ngx-bootstrap/modal */ 63301);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 26966);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-outlet/setup-outlet.service */ 80443);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../shared/components/atoms/form/atm-label/atm-label.component */ 49130);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 8210);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 48502);
/* harmony import */ var _shared_components_organism_loockUp_org_look_up_hirarki_org_look_up_hirarki_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../shared/components/organism/loockUp/org-look-up-hirarki/org-look-up-hirarki.component */ 54313);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 46555);






























const _c0 = ["LookupRacikan"];
const _c1 = ["LookupTemplateResep"];
const _c2 = ["GridResepRacikan"];
const _c3 = ["itemTemplate"];
const _c4 = ["modalTemplateResep"];
function PulangResepIrnaComponent_div_21_Template(rf, ctx) { if (rf & 1) {
    const _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "label", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Nama Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "ejs-dropdownlist", 59, 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("filtering", function PulangResepIrnaComponent_div_21_Template_ejs_dropdownlist_filtering_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r12); const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r11.onFiltering($event); })("change", function PulangResepIrnaComponent_div_21_Template_ejs_dropdownlist_change_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r12); const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r13.handleChangeObat($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](10, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "span", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx_r1.data)("fields", ctx_r1.fields)("placeholder", ctx_r1.text)("query", ctx_r1.query)("sortOrder", ctx_r1.sorting)("allowFiltering", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtextInterpolate1"](" ", ctx_r1.nama_satuan.value, " ");
} }
function PulangResepIrnaComponent_div_22_Template(rf, ctx) { if (rf & 1) {
    const _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "label", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Nama Racikan Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "input", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("change", function PulangResepIrnaComponent_div_22_Template_input_change_7_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r15); const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r14.handleChangeNamaRacikan(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "button", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function PulangResepIrnaComponent_div_22_Template_button_click_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r15); const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r16.handelClickRacikan($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](9, "i", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
} }
function PulangResepIrnaComponent_div_23_Template(rf, ctx) { if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "label", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Kemasan Racikan");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "ejs-dropdownlist", 69, 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("change", function PulangResepIrnaComponent_div_23_Template_ejs_dropdownlist_change_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19); const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r18.handleChangeMetodeRacikan($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipe"](9, "async");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipeBind1"](9, 3, ctx_r3.setupMetodeRacikanService.dataSource))("fields", ctx_r3.DropdownMetodeRacikanFields)("allowFiltering", true);
} }
function PulangResepIrnaComponent_div_38_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "label", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Satuan");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "ejs-combobox", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("change", function PulangResepIrnaComponent_div_38_Template_ejs_combobox_change_6_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r21); const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r20.handleChangeSatuanAturan($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx_r4.dataSourceSatuanAturanPakai)("fields", ctx_r4.DropdownsatuanPakaiFields);
} }
function PulangResepIrnaComponent_ng_template_83_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "h5", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](2, "Simpan Template Resep Dokter");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "button", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function PulangResepIrnaComponent_ng_template_83_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r23); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r22.modalRef.hide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](4, "i", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "h2");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](9, "Apakah Dokter Ingin Menyimapan Resep Ini Sebagai Template Resep?");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](10, "p");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](11, "Template resep di gunakan untuk membuat resep dengan data resep yg sudah ada");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](12, "div", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](13, "div", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](14, "div", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](15, "label", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](16, "strong");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](17, "Nama Template Resep");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](18, "div", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](19, "input", 84);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](20, "div", 85);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](21, "button", 86);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function PulangResepIrnaComponent_ng_template_83_Template_button_click_21_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r23); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r24.handleClickSimpanTemplateResepDokter(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](22, "Simpan Template Resep");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](23, "button", 87);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function PulangResepIrnaComponent_ng_template_83_Template_button_click_23_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r23); const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r25.handleClickAbaikan(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](24, "Tidak");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
} }
class PulangResepIrnaComponent {
    constructor(formBuilder, resepDokterService, setupLabelPemakaianObatService, setupTambahanAturanPakaiService, setupSatuanAturanPakaiService, setupMetodeRacikanService, renderer, daftarPasienService, router, modalService, utilityService, setupOutletService) {
        this.formBuilder = formBuilder;
        this.resepDokterService = resepDokterService;
        this.setupLabelPemakaianObatService = setupLabelPemakaianObatService;
        this.setupTambahanAturanPakaiService = setupTambahanAturanPakaiService;
        this.setupSatuanAturanPakaiService = setupSatuanAturanPakaiService;
        this.setupMetodeRacikanService = setupMetodeRacikanService;
        this.renderer = renderer;
        this.daftarPasienService = daftarPasienService;
        this.router = router;
        this.modalService = modalService;
        this.utilityService = utilityService;
        this.setupOutletService = setupOutletService;
        this.ShowTitle = true;
        this.ButtonNav = [
            { Id: 'kembali', Captions: 'Kembali', Icons1: 'fa-arrow-left fa-sm' },
            { Id: 'simpan', Captions: 'Simpan Resep Pulang', Icons1: 'fas fa-save fa-sm' },
        ];
        this.onSetTemplateResep = new _angular_core__WEBPACK_IMPORTED_MODULE_18__.EventEmitter();
        this.urlRacikan = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_RACIKAN;
        this.urlTemplateResep = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_TEMPLATE_RESEP;
        this.GridLookUpItem = /*#__PURE__*/ (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_2__, 2)));
        this.GridlookUpTemplateResep = /*#__PURE__*/ (_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache || (_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache = __webpack_require__.t(_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3__, 2)));
        this.isGetFromTemplate = false;
        this.DropdownLabelFields = { text: "nama_label_pemakaian_obat", value: "id_label_pemakaian_obat" };
        this.DropdownAturanFields = { text: "tambahan_aturan_pakai", value: "id_tambahan_aturan_pakai" };
        this.DropdownsatuanPakaiFields = { text: "satuan_aturan_pakai", value: "id_satuan_aturan_pakai" };
        this.SetupOutletDropdownField = { text: 'nama_outlet', value: 'id_outlet' };
        this.FormAddObatState = "input";
        // ** Satuan 
        this.SatuanObat = "-";
        this.DropdownObatFields = { text: 'nama_obat', value: 'id_item' };
        this.DropdownMetodeRacikanFields = { text: 'metode_racikan', value: 'id_metode_racikan' };
        this.NamaObatDatasource = [];
        // ** Waktu Pakai
        this.WaktuPakai = [];
        // ** Grid Daftar Obat Properties
        this.GridDaftarObatEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
        this.GridDaftarObatDataSource = [];
        this.GridDaftarObatColumns = /*#__PURE__*/ (_json_GridResep_json__WEBPACK_IMPORTED_MODULE_4___namespace_cache || (_json_GridResep_json__WEBPACK_IMPORTED_MODULE_4___namespace_cache = __webpack_require__.t(_json_GridResep_json__WEBPACK_IMPORTED_MODULE_4__, 2)));
        this.GridDetailResepRacikanDatasource = [];
        this.GridResepRacikanDatasource = [];
        this.dataSourceLabelPemakaian = [];
        this.dataSourceTambahanAturanPakai = [];
        this.dataSourceSatuanAturanPakai = [];
        this.counter = 0;
        this.counterRacikan = 0;
        this.dataSourceGrid = new rxjs__WEBPACK_IMPORTED_MODULE_19__.BehaviorSubject([]);
        this.dataScourceGridChild = [];
        // SERVER SIDE 
        this.IsUserLogin = JSON.parse(localStorage.getItem('UserData'));
        this.data = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.DataManager({
            headers: [
                {
                    Authorization: "Bearer " + this.IsUserLogin.token
                }
            ],
            url: src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_OBAT_PARAMS_DROPDOWNLIST,
            adaptor: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.ODataV4Adaptor,
            crossDomain: true,
        });
        this.fields = { text: 'nama_obat', value: 'id_item' };
        this.query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where("msi.nama_item", 'contains', '', true);
        this.text = "Select a Obat";
        this.sorting = 'Ascending';
        this.onFiltering = (e) => {
            // load overall data when search key empty.
            if (e.text === '') {
                e.updateData(this.data);
            }
            else {
                let query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where("msi.nama_item", 'contains', e.text, true);
                e.updateData(this.data, query);
            }
        };
        //=====================
        this.dataChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.DataManager({
            headers: [
                {
                    Authorization: "Bearer " + this.IsUserLogin.token
                }
            ],
            url: src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_OBAT_PARAMS_DROPDOWNLIST,
            adaptor: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.ODataV4Adaptor,
            crossDomain: true,
        });
        this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where("msi.nama_item", 'contains', '', true);
        this.dataheader = null;
        this.baru = 0;
        this.setIdOutlet = 0;
    }
    get width() { return window.innerWidth; }
    ;
    ngOnInit() {
        this.FormAddObat = this.formBuilder.group({
            counter: [0, []],
            is_racikan: [false, []],
            no_urut: [0, []],
            set_racikan_id: [null, []],
            id_metode_racikan: [null, []],
            metode_racikan: ['', []],
            id_item: [null, []],
            nama_racikan: ['', []],
            nama_obat: ['', []],
            qty_resep: ['', []],
            nama_satuan: ['-', []],
            label: ['', []],
            ket_label: ['', []],
            id_label_pemakaian_obat: [null, []],
            label_pemakaian_obat: ['', []],
            id_satuan_aturan_pakai: [null, []],
            satuan_aturan_pakai: [null, []],
            aturan: ['', []],
            ket_aturan: ['', []],
            id_tambahan_aturan_pakai: [null, []],
            label_tambahan_aturan_pakai_obat: ['', []],
        });
        this.GridDaftarObatToolbar = [
            { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
            { text: 'Delete', tooltipText: 'Delete', prefixIcon: 'fas fa-trash-alt fa-sm', id: 'delete' },
            'Search'
        ];
        let currentQtyResep = this.currentQtyResep;
        let currentIdItem = this.currentIdItem;
        let SelectedDataRacikanObat = this.SelectedDataRacikanObat;
        this.resepDokterService.dataSelectRacikan.next(SelectedDataRacikanObat);
        this.itemsParams = {
            create: () => {
                if (SelectedDataRacikanObat) {
                    this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.Query().from('Obat')
                        .select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan'])
                        .take(10).where("msi.nama_item", 'contains', SelectedDataRacikanObat.nama_obat, true);
                }
                else {
                    this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.Query().from('Obat')
                        .select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan'])
                        .take(10).where("msi.nama_item", 'contains', '', true);
                }
                this.itemsElem = document.createElement('input');
                return this.itemsElem;
            },
            read: () => {
                return this.itemsObj.text;
            },
            destroy: () => {
                this.itemsObj.destroy();
            },
            write: () => {
                this.itemsObj = new _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_21__.DropDownList({
                    dataSource: this.dataChild,
                    fields: this.fields,
                    query: this.queryChild,
                    enabled: true,
                    placeholder: 'Select a obat',
                    // floatLabelType: 'Never',
                    allowFiltering: true,
                    popupWidth: '55rem',
                    filtering: function (e) {
                        if (e.text === '') {
                            e.updateData(this.data);
                        }
                        else {
                            let query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_20__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where("msi.nama_item", 'contains', e.text, true);
                            e.updateData(this.data, query);
                        }
                    }.bind(this),
                    change: function (args) {
                        currentIdItem = args.itemData.id_item;
                        console.log('currentItem', currentIdItem);
                        this.setFormGrif(args, currentQtyResep, currentIdItem, SelectedDataRacikanObat);
                    }.bind(this),
                });
                this.itemsObj.appendTo(this.itemsElem);
                if (SelectedDataRacikanObat) {
                    this.setFormGrif(null, SelectedDataRacikanObat.qty_resep, currentIdItem, SelectedDataRacikanObat);
                    setTimeout(() => {
                        console.log('', SelectedDataRacikanObat);
                        currentIdItem = SelectedDataRacikanObat.id_item;
                        this.itemsObj.value = currentIdItem;
                    }, 10);
                }
            }
        };
        let counterRacikan = this.counterRacikan;
        let dataSourceChild = this.dataScourceGridChild;
        let dataSourceGrid = this.dataSourceGrid;
        this.resepDokterService.dataSourceChildGrid.next(dataSourceChild);
        this.resepDokterService.dataSourceParentGrid.next(dataSourceGrid.value);
        let nav = 'add';
        this.ChildGrid = {
            dataSource: this.dataScourceGridChild,
            queryString: "counter",
            rowHeight: 30,
            allowResizing: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: 'Both' },
            toolbar: ['Add', 'Edit', 'Delete', 'Update', 'Cancel'],
            editSettings: { allowEditing: true, allowAdding: true, allowDeleting: true },
            columns: [
                { field: "counter", headerText: 'c', width: 100, visible: false },
                { field: "no_urut", headerText: 'ID Obat', visible: false },
                { field: "nama_obat", headerText: 'Nama Obat', editType: 'dropdownedit', edit: this.itemsParams, width: 200 },
                { field: "nama_satuan", headerText: 'Satuan', textAlign: 'Right', width: 80, allowEditing: false },
                { field: "id_item", headerText: 'id', width: 100, visible: false },
                { field: "komposisi", headerText: 'kps', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2', allowEditing: false },
                { field: "seper", headerText: '1/', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                { field: "kandungan", headerText: 'Kandungan', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                { field: "qty_resep", headerText: 'qty', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2', visible: false },
                { field: "qty_racikan", headerText: 'QTY', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                { field: "keterangan", headerText: 'Keterangan', headerTextAlign: 'Center', textAlign: 'Left', width: 100 },
            ],
            rowSelected(args) {
                SelectedDataRacikanObat = args.data;
                console.log('row selected', SelectedDataRacikanObat);
            },
            actionBegin(args) {
                console.log('begin', args);
                if (args.requestType === 'add') {
                    const counter = 'counter';
                    args.data[counter] = this.parentDetails.parentKeyFieldValue;
                    args.data['qty_resep'] = this.parentDetails.parentRowData.qty_resep;
                    //   (args.data as object)['counterRacikan'] = counterRacikan++;
                    currentQtyResep = this.parentDetails.parentRowData.qty_resep;
                    SelectedDataRacikanObat = null;
                }
                // if (args.requestType === 'beginEdit'){
                //     SelectedDataRacikanObat = args.rowData;
                // }
            },
            actionComplete(args) {
                console.log(args);
                if (args.requestType == 'save') {
                    if (args.action == 'add') {
                        args.data.id_item = currentIdItem;
                        args.data.counterRacikan = counterRacikan++;
                        args.data.qty_racikan = parseFloat(args.data.qty_racikan);
                        console.log(dataSourceChild);
                        dataSourceChild.push(args.data);
                    }
                    if (args.action == 'edit') {
                        args.data.id_item = currentIdItem;
                        args.data.qty_racikan = parseFloat(args.data.qty_racikan);
                        let index = dataSourceChild.map((item) => { return item.counterRacikan; }).indexOf(args.data.counterRacikan);
                        dataSourceChild[index] = args.data;
                    }
                    let data = [];
                    dataSourceChild.orderBy('-counterRacikan');
                    dataSourceGrid.value.forEach((itemPrent, indexPrent) => {
                        data.push(itemPrent);
                    });
                    setTimeout(() => {
                        dataSourceGrid.next(data);
                        console.log(data);
                    }, 500);
                }
                if (args.requestType == "delete") {
                    let index = dataSourceChild.map((item) => { return item.counterRacikan; }).indexOf(args.data[0].counterRacikan);
                    dataSourceChild.splice(index, 1);
                    let data = [];
                    dataSourceChild.orderBy('-counterRacikan');
                    dataSourceGrid.value.forEach((itemPrent, indexPrent) => {
                        data.push(itemPrent);
                    });
                    setTimeout(() => {
                        dataSourceGrid.next(data);
                        console.log(data);
                    }, 500);
                }
            }
        };
        this.setupLabelPemakaianObatService.onGetAll().subscribe((result) => {
            this.dataSourceLabelPemakaian = result.data;
        });
        this.setupTambahanAturanPakaiService.onGetAll().subscribe((result) => {
            this.dataSourceTambahanAturanPakai = result.data;
        });
        this.setupSatuanAturanPakaiService.onGetAll().subscribe((result) => {
            this.dataSourceSatuanAturanPakai = result.data;
        });
        this.setupMetodeRacikanService.setDataSource();
        this.resepDokterService.setDataObat([]);
        this.urlTemplateResep = this.urlTemplateResep + '/' + this.daftarPasienService.ActivePasien.value.id_dokter;
        this.urlRacikan = this.urlRacikan + '/' + this.daftarPasienService.ActivePasien.value.id_dokter + '/J';
        this.setupOutletService.setDataSource();
        if ((this.router.url).includes('Dokter')) {
            this.ShowTitle = true;
        }
    }
    onLoad(args) {
    }
    setFormGrif(args, currentQtyResep, id_item, SelectedDataRacikanObat) {
        // console.log('function setgrid',SelectedDataRacikanObat);
        if (SelectedDataRacikanObat) {
            document.getElementsByName("nama_satuan")[0].value = SelectedDataRacikanObat.nama_satuan;
            document.getElementsByName("komposisi")[0].value = SelectedDataRacikanObat.komposisi;
            document.getElementsByName("seper")[0].value = SelectedDataRacikanObat.seper;
            document.getElementsByName("kandungan")[0].value = SelectedDataRacikanObat.kandungan;
            document.getElementsByName("qty_racikan")[0].value = SelectedDataRacikanObat.qty_racikan;
        }
        else {
            document.getElementsByName("nama_satuan")[0].value = args.itemData.nama_satuan;
            document.getElementsByName("komposisi")[0].value = args.itemData.kandungan_obat;
            document.getElementsByName("seper")[0].value = '1';
            document.getElementsByName("kandungan")[0].value = args.itemData.kandungan_obat;
            document.getElementsByName("qty_racikan")[0].value = currentQtyResep.toString();
        }
        let seper = document.getElementsByName("seper")[0];
        if (seper) {
            seper.addEventListener('click', (event) => {
                seper.select();
            });
            seper.addEventListener('keyup', (event) => {
                let komposisi = parseInt(document.getElementsByName("komposisi")[0].value);
                let seper = parseInt(document.getElementsByName("seper")[0].value);
                let hasil = komposisi / seper;
                document.getElementsByName("kandungan")[0].value = hasil.toString();
                let butuh = currentQtyResep * hasil;
                let qty = butuh / komposisi;
                document.getElementsByName("qty_racikan")[0].value = qty.toString();
            });
            this.setInputFilter(seper, function (value) {
                return /^\d*$/.test(value);
            });
        }
        let kandungan = document.getElementsByName("kandungan")[0];
        if (kandungan) {
            kandungan.addEventListener('click', (event) => {
                kandungan.select();
            });
            kandungan.addEventListener('keyup', (event) => {
                let kandungan = parseInt(document.getElementsByName("kandungan")[0].value);
                let komposisi = parseInt(document.getElementsByName("komposisi")[0].value);
                let butuh = currentQtyResep * kandungan;
                console.log(butuh);
                let qty = butuh / komposisi;
                document.getElementsByName("qty_racikan")[0].value = qty.toString();
                document.getElementsByName("seper")[0].value = '1';
            });
            this.setInputFilter(kandungan, function (value) {
                return /^\d*$/.test(value);
            });
        }
        let qty_racikan = document.getElementsByName("qty_racikan")[0];
        if (qty_racikan) {
            qty_racikan.addEventListener('click', (event) => {
                qty_racikan.select();
            });
            this.setInputFilter(qty_racikan, function (value) {
                return /^\d*$/.test(value);
            });
        }
    }
    setInputFilter(textbox, inputFilter) {
        ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function (event) {
            textbox.addEventListener(event, function () {
                if (inputFilter(this.value)) {
                    this.oldValue = this.value;
                    this.oldSelectionStart = this.selectionStart;
                    this.oldSelectionEnd = this.selectionEnd;
                }
                else if (Object.prototype.hasOwnProperty.call(this, 'oldValue')) {
                    this.value = this.oldValue;
                    if (this.oldSelectionStart !== null &&
                        this.oldSelectionEnd !== null) {
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    }
                }
                else {
                    this.value = "";
                }
            });
        });
    }
    rowDataBound(args) {
        var is_racikan = args.data.is_racikan;
        if (!is_racikan) {
            //here hide which parent row has no child records
            args.row.querySelector('td').innerHTML = " ";
            args.row.querySelector('td').className = "e-customizedExpandcell";
        }
        else {
            // args.row.classList.add('is-racikan');
        }
    }
    onDataBound() {
        this.GridResepRacikan.detailRowModule.expandAll();
    }
    // ** Dropdown Nama Obat onchange method
    handleChangeObat(args) {
        this.nama_satuan.setValue(args.itemData.nama_satuan);
        this.nama_obat.setValue(args.itemData.nama_obat);
    }
    handleChangeLabel(args) {
        if (typeof args.value === 'number' && (args.value % 1) === 0) {
            this.label_pemakaian_obat.setValue('');
            this.id_label_pemakaian_obat.setValue(args.value);
            this.ket_label.setValue(args.itemData.nama_label_pemakaian_obat);
        }
        else {
            this.label_pemakaian_obat.setValue(args.value);
            this.id_label_pemakaian_obat.setValue(1);
            this.ket_label.setValue(args.itemData.nama_label_pemakaian_obat);
        }
    }
    handleChangeAturan(args) {
        if (typeof args.value === 'number' && (args.value % 1) === 0) {
            this.label_tambahan_aturan_pakai_obat.setValue('');
            this.id_tambahan_aturan_pakai.setValue(args.value);
            this.ket_aturan.setValue(args.itemData.tambahan_aturan_pakai);
        }
        else {
            this.label_tambahan_aturan_pakai_obat.setValue(args.value);
            this.id_tambahan_aturan_pakai.setValue(1);
            this.ket_aturan.setValue(args.itemData.tambahan_aturan_pakai);
        }
    }
    handleChangeSatuanAturan(args) {
        this.satuan_aturan_pakai.setValue(args.itemData.satuan_aturan_pakai);
    }
    handleChangeNamaRacikan() {
        this.set_racikan_id.setValue(null);
    }
    handelClickRacikan() {
        this.LookupRacikan.onOpenModal();
    }
    handelClickTemplateResep() {
        this.LookupTemplateResep.onOpenModal();
    }
    handleChangeMetodeRacikan(args) {
        this.metode_racikan.setValue(args.itemData.metode_racikan);
    }
    handleChangeOutlet(args) {
        this.setIdOutlet = args.value;
    }
    heandleSelectedRacikan(args) {
        this.counter++;
        args.counter = this.counter;
        args.is_racikan = true;
        args.no_urut = 0;
        args.id_item = null;
        args.nama_satuan = null;
        args.label = null;
        args.nama_racikan = args.nama_obat;
        args.label = args.ket_label;
        args.aturan = args.ket_aturan;
        // this.resepDokterService.addDetail(args);
        let dataObat = this.dataSourceGrid.value;
        dataObat.push(args);
        this.dataSourceGrid.next(dataObat);
        this.resepDokterService.dataSourceParentGrid.next(dataObat);
        let detail;
        detail = this.GridResepRacikan.childGrid.dataSource;
        args.details.forEach(element => {
            let counterRacikan = this.counterRacikan++;
            element.counter = this.counter;
            element.counterRacikan = counterRacikan;
            element.komposisi = element.kandungan_obat;
            element.kandungan = 1;
            element.seper = 1;
            element.qty_resep = args.qty_resep;
            detail.push(element);
        });
        this.resepDokterService.dataSourceChildGrid.next(detail);
        this.GridResepRacikan.refresh();
    }
    heandleSelectedTemplateResep(args) {
        console.log(args);
        let obat = [];
        let detail;
        detail = this.GridResepRacikan.childGrid.dataSource;
        args.details.forEach(element => {
            this.counter++;
            element.counter = this.counter;
            if (element.is_racikan) {
                element.nama_racikan = element.nama_obat;
            }
            else {
                element.nama_racikan = '';
            }
            if (element.id_label_pemakaian_obat == 1) {
                element.label = element.ket_label;
            }
            else {
                element.label = element.id_label_pemakaian_obat;
            }
            if (element.id_tambahan_aturan_pakai == 1) {
                element.aturan = element.ket_aturan;
            }
            else {
                element.aturan = element.id_tambahan_aturan_pakai;
            }
            // this.resepDokterService.addDetail(element);
            obat.push(element);
            element.racikans.forEach(racikan => {
                let counterRacikan = this.counterRacikan++;
                racikan.counter = this.counter;
                racikan.counterRacikan = counterRacikan;
                racikan.komposisi = parseInt(racikan.kandungan_obat);
                racikan.kandungan = 1;
                racikan.seper = 1;
                racikan.qty_resep = element.qty_resep;
                detail.push(racikan);
            });
        });
        this.dataSourceGrid.next(obat);
        this.resepDokterService.dataSourceChildGrid.next(detail);
        this.resepDokterService.dataSourceParentGrid.next(obat);
        this.GridResepRacikan.refresh();
        this.onSetTemplateResep.emit(true);
    }
    handleAddObat(FormAddObat) {
        if (this.validasi(FormAddObat)) {
            this.counter++;
            FormAddObat.counter = this.counter;
            if (FormAddObat.is_racikan) {
                FormAddObat.nama_obat = FormAddObat.nama_racikan;
            }
            else {
                FormAddObat.id_metode_racikan = null;
                FormAddObat.metode_racikan = null;
            }
            // this.resepDokterService.addDetail(FormAddObat);
            let dataDetail = this.dataSourceGrid.value;
            dataDetail.push(FormAddObat);
            this.dataSourceGrid.next(dataDetail);
            this.resepDokterService.dataSourceParentGrid.next(dataDetail);
            this.GridResepRacikan.refresh();
            this.onResetFormObat();
        }
    }
    validasi(FormData) {
        let message = [];
        let htmlSelection = '';
        console.log('validasi', FormData);
        if (FormData.is_racikan) {
            if (FormData.nama_racikan == '' || FormData.nama_racikan == null) {
                message.push('Nama Racikan belum di isi');
            }
            if (FormData.metode_racikan == '' || FormData.metode_racikan == null) {
                message.push('Kemasan Racikan belum di isi');
            }
        }
        else {
            if (FormData.nama_obat == '' || FormData.nama_obat == null) {
                message.push('obat belum di pillih');
            }
            if (FormData.satuan_aturan_pakai == '' || FormData.satuan_aturan_pakai == null) {
                message.push('Satuan belum di pillih');
            }
        }
        if (FormData.label == '' || FormData.label == null) {
            message.push('Label Obat belum di isi');
        }
        if (FormData.aturan == '' || FormData.aturan == null) {
            message.push('Aturan Tambahan belum di isi');
        }
        if (message.length > 0) {
            htmlSelection = '<div class="text-danger"><ul>';
            message.forEach((value, index) => {
                htmlSelection += `<li>${value}</li>`;
            });
            htmlSelection += `</ul></div>`;
            sweetalert2__WEBPACK_IMPORTED_MODULE_1___default().fire({
                icon: 'error',
                title: 'Validasi Data',
                html: htmlSelection,
            });
            return false;
        }
        else {
            return true;
        }
    }
    onResetFormObat() {
        this.FormAddObat.reset();
        this.qty_resep.setValue(1);
        this.is_racikan.setValue(false);
    }
    // ** Update Data Obat method
    onUpdateDataObat(FormAddObat) {
        if (this.validasi(FormAddObat)) {
            if (FormAddObat.is_racikan) {
                FormAddObat.nama_obat = FormAddObat.nama_racikan;
            }
            let dataDetail = this.dataSourceGrid.value;
            dataDetail[this.currentIndex] = FormAddObat;
            this.dataSourceGrid.next(dataDetail);
            this.resepDokterService.dataSourceParentGrid.next(dataDetail);
            this.onResetFormObat();
            this.GridResepRacikan.refresh();
            this.FormAddObatState = "input";
        }
    }
    // ** Reset Form Add Obat 
    onResetFormDataObat() {
        this.FormAddObat.reset();
        this.SatuanObat = "";
    }
    // ** Grid Daftar Obat method
    onInitalizedGrid(component) {
        this.gridDaftarObat = component;
    }
    // ** Grid Daftar Obat method
    onToolbarClick(args) {
        switch (args.item.id) {
            case "edit":
                // this.FormAddObat.setValue(this.SelectedDataObat);
                this.onEditData();
                this.FormAddObatState = "edit";
                break;
            case "delete":
                let dataObat = this.resepDokterService.dataSourceParentGrid.value;
                dataObat.splice(this.currentIndex, 1);
                this.resepDokterService.dataSourceParentGrid.next(dataObat);
                this.dataSourceGrid.next(dataObat);
                this.GridResepRacikan.refresh();
                break;
            default:
                break;
        }
        ;
    }
    onEditData() {
        let data = this.SelectedDataObat;
        this.FormAddObat.setValue({
            counter: data.counter,
            no_urut: data.no_urut,
            is_racikan: data.is_racikan,
            set_racikan_id: data.set_racikan_id,
            id_metode_racikan: data.id_metode_racikan,
            metode_racikan: data.metode_racikan,
            id_item: data.id_item,
            nama_obat: data.nama_obat,
            qty_resep: data.qty_resep,
            nama_satuan: data.nama_satuan,
            label: data.label,
            ket_label: data.ket_label,
            id_label_pemakaian_obat: data.id_label_pemakaian_obat,
            label_pemakaian_obat: data.label_pemakaian_obat,
            aturan: data.aturan,
            ket_aturan: data.ket_aturan,
            id_tambahan_aturan_pakai: data.id_tambahan_aturan_pakai,
            label_tambahan_aturan_pakai_obat: data.label_tambahan_aturan_pakai_obat,
            nama_racikan: data.nama_racikan,
            id_satuan_aturan_pakai: data.id_satuan_aturan_pakai,
            satuan_aturan_pakai: data.satuan_aturan_pakai,
        });
    }
    onActionComplete(args) {
        // let dataSourceParent: any = this.GridResepRacikan.dataSource;
        // this.resepDokterService.dataSourceParentGrid.next(dataSourceParent);
        // console.log("Parent", this.GridResepRacikan.dataSource);
        // console.log("Children", this.GridResepRacikan.childGrid.dataSource);
    }
    // ** Grid Daftar Obat method
    onRowSelected(args) {
        this.currentIndex = args.rowIndex;
        this.SelectedDataObat = args.data;
    }
    onClickButtonNav(args) {
        switch (args) {
            case "simpan":
                this.Insert();
                break;
            case "kembali":
                this.router.navigateByUrl('Dokter/resep-irna/daftar-resep-irna');
                break;
            default:
                break;
        }
    }
    Insert() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_22__.__awaiter)(this, void 0, void 0, function* () {
            if (this.setIdOutlet == 0) {
                this.utilityService.onShowingCustomAlert('warning', 'Depo Farmasi belum di isi', '');
                return false;
            }
            this.dataheader = {
                id_dokter: this.daftarPasienService.ActivePasien.value.id_dokter,
                id_register: this.daftarPasienService.ActivePasien.value.id_register,
                id_outlet: this.setIdOutlet,
                id_person: this.daftarPasienService.ActivePasien.value.id_person,
                jenis_rawat: 'I',
                nama_template: '',
                tanggal_resep: moment__WEBPACK_IMPORTED_MODULE_5___default()().format()
            };
            this.newdetail = this.resepDokterService.dataSourceParentGrid.value.filter((item) => {
                return item.is_racikan && !item.set_racikan_id;
            });
            this.baru = 0;
            if (!this.isGetFromTemplate) {
                // this.modalRef = this.modalService.show(
                //     this.modalTemplateResep,
                //     Object.assign({}, { class: 'modal-lg' })
                // );
                this.methodConfirmSetRacikan(0);
            }
            else {
                this.methodConfirmSetRacikan(0);
            }
        });
    }
    handleClickSimpanTemplateResepDokter() {
        let nama_resep = document.getElementsByName("nama_resep")[0].value;
        this.dataheader.nama_template = nama_resep;
        this.modalRef.hide();
        this.methodConfirmSetRacikan(1);
    }
    handleClickAbaikan() {
        this.modalRef.hide();
        this.methodConfirmSetRacikan(0);
    }
    methodConfirmSetRacikan(simpan_template) {
        if (this.newdetail.length > 0) {
            sweetalert2__WEBPACK_IMPORTED_MODULE_1___default().fire({
                title: 'Apakah Anda Ingin Menyimapan Racikan Baru ke dalam Setting Racikan dokter?',
                text: "Racikan akan bisa di gunakan lagi untuk template",
                icon: 'info',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Iya, Saya Yakin',
                cancelButtonText: 'Tidak',
                focusCancel: true,
            }).then((result) => {
                if (result.isConfirmed) {
                    this.baru = 1;
                }
                else {
                    this.baru = 0;
                }
                this.methodInsert(this.dataheader, simpan_template, this.baru);
            });
        }
        else {
            this.methodInsert(this.dataheader, simpan_template, 0);
        }
    }
    methodInsert(Data, is_simpan_template, is_simpan_racikan) {
        this.resepDokterService.Pulang(Data, is_simpan_template, is_simpan_racikan).subscribe((result) => {
            this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                .then(() => {
                //   this.resepDokterService.reset();
                window.location.reload();
                this.isGetFromTemplate = false;
            });
        });
    }
    get is_racikan() { return this.FormAddObat.get('is_racikan'); }
    ;
    get set_racikan_id() { return this.FormAddObat.get('set_racikan_id'); }
    ;
    get id_metode_racikan() { return this.FormAddObat.get('id_metode_racikan'); }
    ;
    get metode_racikan() { return this.FormAddObat.get('metode_racikan'); }
    ;
    get id_item() { return this.FormAddObat.get('id_item'); }
    ;
    get nama_obat() { return this.FormAddObat.get('nama_obat'); }
    ;
    get qty_resep() { return this.FormAddObat.get('qty_resep'); }
    get nama_satuan() { return this.FormAddObat.get('nama_satuan'); }
    get label() { return this.FormAddObat.get('label'); }
    get ket_label() { return this.FormAddObat.get('ket_label'); }
    get id_label_pemakaian_obat() { return this.FormAddObat.get('id_label_pemakaian_obat'); }
    get label_pemakaian_obat() { return this.FormAddObat.get('label_pemakaian_obat'); }
    get aturan() { return this.FormAddObat.get('aturan'); }
    get ket_aturan() { return this.FormAddObat.get('ket_aturan'); }
    get id_tambahan_aturan_pakai() { return this.FormAddObat.get('id_tambahan_aturan_pakai'); }
    get label_tambahan_aturan_pakai_obat() { return this.FormAddObat.get('label_tambahan_aturan_pakai_obat'); }
    get nama_racikan() { return this.FormAddObat.get('nama_racikan'); }
    get satuan_aturan_pakai() { return this.FormAddObat.get('satuan_aturan_pakai'); }
    ;
}
PulangResepIrnaComponent.ɵfac = function PulangResepIrnaComponent_Factory(t) { return new (t || PulangResepIrnaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_23__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_resep_dokter_resep_dokter_service__WEBPACK_IMPORTED_MODULE_6__.ResepDokterService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_service__WEBPACK_IMPORTED_MODULE_7__.SetupLabelPemakaianObatService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_tambahan_aturan_pakai_setup_tambahan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_8__.SetupTambahanAturanPakaiService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_satuan_aturan_pakai_setup_satuan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_9__.SetupSatuanAturanPakaiService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_metode_racikan_setup_metode_racikan_service__WEBPACK_IMPORTED_MODULE_10__.SetupMetodeRacikanService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_18__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_11__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_24__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_12__.BsModalService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_13__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_14__.SetupOutletService)); };
PulangResepIrnaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdefineComponent"]({ type: PulangResepIrnaComponent, selectors: [["app-pulang-resep-irna"]], viewQuery: function PulangResepIrnaComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c1, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c2, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c3, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c4, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.LookupRacikan = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.LookupTemplateResep = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.GridResepRacikan = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.itemTemplate = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.modalTemplateResep = _t.first);
    } }, outputs: { onSetTemplateResep: "onSetTemplateResep" }, decls: 85, vars: 73, consts: [[3, "ButtonNav", "ShowTitle", "onClickButtonNav"], [3, "formGroup"], [1, "row"], [1, "col-sm-6"], [1, "card"], [1, "card-body", "p-2"], [1, "row", "mb-2"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "LabelCaption"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], ["id", "marital", 3, "dataSource", "fields", "allowFiltering", "change"], ["MaritalOutletDropdown", ""], [1, "row", "pt-2", "mb-2"], [1, "col-lg-1", "col-md-1", "col-sm-1", "col-xs-1"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], ["for", "DropdownObat", 1, "form-label"], ["type", "checkbox", "formControlName", "is_racikan", 1, "form-check-input"], ["class", "col-lg-4 col-md-4 col-sm-4 col-xs-4", 4, "ngIf"], ["class", "col-lg-3 col-md-3 col-sm-3 col-xs-3", 4, "ngIf"], ["class", "col-lg-2 col-md-2 col-sm-2 col-xs-2", 4, "ngIf"], [1, "col-lg-1", "col-md-1", "col-sm-1", "col-xs-1", "pe-1"], ["for", "NumericQty", 1, "form-label"], ["id", "NumericQty", "formControlName", "qty_resep", 3, "format", "showSpinButton", "showClearButton", "ste"], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2", "pe-1"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "pe-1"], ["id", "DropdownLabelPemakaian", "formControlName", "label", "popupWidth", "30rem", 3, "allowFiltering", "dataSource", "fields", "change"], ["class", "col-lg-1 col-md-1 col-sm-1 col-xs-1 pe-1", 4, "ngIf"], ["id", "DropdownTambahanAturanPakai", "formControlName", "aturan", "popupWidth", "25rem", 3, "allowFiltering", "dataSource", "fields", "change"], [1, "col-lg-1", "col-md-1", "col-sm-1", "col-xs-1", "ps-4"], [1, "row", "align-content-center", "h-100", "mb-2"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "px-0", 3, "hidden"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", 3, "disabled", "click"], [1, "fas", "fa-plus-circle", "fa-sm"], [3, "hidden"], ["type", "button", 1, "btn", "btn-warning", "btn-sm", 3, "disabled", "click"], [1, "fas", "fa-edit", "fa-sm"], [3, "lookup-url", "columns", "columnsChild", "filter-lookup", "queryString", "modal-title", "onGetSelectedData"], ["LookupRacikan", ""], [3, "lookup-url", "columns", "columnsChild", "filter-lookup", "modal-title", "queryString", "onGetSelectedData"], ["LookupTemplateResep", ""], [1, "col-lg-12", "col-md-12", "col-xs-12", "col-sm-12"], [1, "card-body", "p-0"], ["height", "calc(100vh - 24rem)", "gridLines", "Both", "rowHeight", "30", 3, "dataSource", "childGrid", "toolbar", "toolbarClick", "load", "rowDataBound", "dataBound", "rowSelected", "actionComplete"], ["GridResepRacikan", ""], ["field", "no_urut", "headerText", "no_urut", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "is_racikan", "headerText", "is_racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "set_racikan_id", "headerText", "set_racikan_id", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_metode_racikan", "headerText", "id_metode_racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_item", "headerText", "id_item", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_label_pemakaian_obat", "headerText", "id_label_pemakaian_obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_tambahan_aturan_pakai", "headerText", "id_tambahan_aturan_pakai", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_obat", "headerText", "Nama Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_satuan", "headerText", "Satuan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "metode_racikan", "headerText", "Kemasan Racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "qty_resep", "headerText", "Qty", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing"], ["field", "ket_label", "headerText", "Pemakaian", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "ket_aturan", "headerText", "Aturan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["modalTemplateResep", ""], [1, "col-lg-10", "col-md-10", "col-sm-10", "col-xs-10", "pe-0"], ["id", "DropdownObat", "formControlName", "id_item", "popupWidth", "55rem", 3, "allowFiltering", "dataSource", "fields", "placeholder", "query", "sortOrder", "filtering", "change"], ["Drop", ""], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2", "px-0"], ["id", "basic-addon1", 1, "input-group-text", "bg-primary", "text-white"], [1, "col-lg-3", "col-md-3", "col-sm-3", "col-xs-3"], [1, "input-group"], ["type", "text", "formControlName", "nama_racikan", 1, "form-control", "form-select-sm", 3, "change"], ["id", "btnInputGroup", "type", "button", 1, "btn", "btn-primary", 2, "padding", ".1rem .8rem", "background-color", "#00afff; border: 0", 3, "click"], [1, "fas", "fa-search"], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2"], ["formControlName", "id_metode_racikan", 3, "dataSource", "fields", "allowFiltering", "change"], ["MolDropdown", ""], ["id", "DropdownLabelPemakaian", "formControlName", "id_satuan_aturan_pakai", "popupWidth", "30rem", 3, "allowFiltering", "dataSource", "fields", "change"], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body", "p-10"], [1, "row", "mx-0", "my-1"], [1, "col-lg-12", "col-md-12", "col-sm-12", 2, "text-align", "center"], [1, "col-lg-12", "col-md-12", "col-sm-12"], [1, "mb-2", "row"], [1, "col-sm-4"], ["for", "nama_resep"], [1, "col-sm-8"], ["type", "text", "name", "nama_resep", 1, "form-control", "form-control-sm"], [1, "modal-footer", "background-abu-muda"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], ["type", "button", 1, "btn", "btn-danger", 3, "click"]], template: function PulangResepIrnaComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "org-card-layout", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onClickButtonNav", function PulangResepIrnaComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "form", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](8, "atm-label", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](10, "ejs-dropdownlist", 10, 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("change", function PulangResepIrnaComponent_Template_ejs_dropdownlist_change_10_listener($event) { return ctx.handleChangeOutlet($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipe"](12, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](13, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](14, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](15, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](17, "label", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](18, "Racik");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](19, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](20, "input", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](21, PulangResepIrnaComponent_div_21_Template, 13, 8, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](22, PulangResepIrnaComponent_div_22_Template, 10, 0, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](23, PulangResepIrnaComponent_div_23_Template, 10, 5, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](24, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](25, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](26, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](27, "label", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](28, "Qty");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](29, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](30, "ejs-numerictextbox", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](31, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](32, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](33, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](34, "label", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](35, "Label Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](36, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](37, "ejs-combobox", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("change", function PulangResepIrnaComponent_Template_ejs_combobox_change_37_listener($event) { return ctx.handleChangeLabel($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](38, PulangResepIrnaComponent_div_38_Template, 7, 3, "div", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](39, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](40, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](41, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](42, "label", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](43, "Aturan Tambahan");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](44, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](45, "ejs-combobox", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("change", function PulangResepIrnaComponent_Template_ejs_combobox_change_45_listener($event) { return ctx.handleChangeAturan($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](46, "div", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](47, "div", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](48, "div", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](49, "button", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function PulangResepIrnaComponent_Template_button_click_49_listener() { return ctx.handleAddObat(ctx.FormAddObat.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](50, "i", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](51, "span", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](52, "\u00A0Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](53, "div", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](54, "button", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function PulangResepIrnaComponent_Template_button_click_54_listener() { return ctx.onUpdateDataObat(ctx.FormAddObat.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](55, "i", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](56, "span", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](57, "\u00A0Edit");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](58, "org-look-up-hirarki", 36, 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onGetSelectedData", function PulangResepIrnaComponent_Template_org_look_up_hirarki_onGetSelectedData_58_listener($event) { return ctx.heandleSelectedRacikan($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](60, "org-look-up-hirarki", 38, 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onGetSelectedData", function PulangResepIrnaComponent_Template_org_look_up_hirarki_onGetSelectedData_60_listener($event) { return ctx.heandleSelectedTemplateResep($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](62, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](63, "div", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](64, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](65, "div", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](66, "ejs-grid", 42, 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("toolbarClick", function PulangResepIrnaComponent_Template_ejs_grid_toolbarClick_66_listener($event) { return ctx.onToolbarClick($event); })("load", function PulangResepIrnaComponent_Template_ejs_grid_load_66_listener($event) { return ctx.onLoad($event); })("rowDataBound", function PulangResepIrnaComponent_Template_ejs_grid_rowDataBound_66_listener($event) { return ctx.rowDataBound($event); })("dataBound", function PulangResepIrnaComponent_Template_ejs_grid_dataBound_66_listener() { return ctx.onDataBound(); })("rowSelected", function PulangResepIrnaComponent_Template_ejs_grid_rowSelected_66_listener($event) { return ctx.onRowSelected($event); })("actionComplete", function PulangResepIrnaComponent_Template_ejs_grid_actionComplete_66_listener($event) { return ctx.onActionComplete($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipe"](68, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](69, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](70, "e-column", 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](71, "e-column", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](72, "e-column", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](73, "e-column", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](74, "e-column", 48);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](75, "e-column", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](76, "e-column", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](77, "e-column", 51);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](78, "e-column", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](79, "e-column", 53);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](80, "e-column", 54);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](81, "e-column", 55);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](82, "e-column", 56);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](83, PulangResepIrnaComponent_ng_template_83_Template, 25, 0, "ng-template", null, 57, _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav)("ShowTitle", ctx.ShowTitle);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("formGroup", ctx.FormAddObat);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("LabelCaption", "Depo Farmasi");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipeBind1"](12, 69, ctx.setupOutletService.dataSource))("fields", ctx.SetupOutletDropdownField)("allowFiltering", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](11);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", !ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("format", "N0")("showSpinButton", false)("showClearButton", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx.dataSourceLabelPemakaian)("fields", ctx.DropdownLabelFields);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", !ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx.dataSourceTambahanAturanPakai)("fields", ctx.DropdownAturanFields);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵclassMap"](ctx.width >= 1023 && ctx.width <= 1200 ? "pt-1" : "pt-4");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("hidden", ctx.FormAddObatState != "input");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("disabled", ctx.FormAddObat.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("hidden", ctx.width >= 1023 && ctx.width <= 1200);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("hidden", ctx.FormAddObatState == "input");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("disabled", ctx.FormAddObat.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("hidden", ctx.width >= 1023 && ctx.width <= 1200);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("lookup-url", ctx.urlRacikan)("columns", ctx.GridLookUpItem.columns)("columnsChild", ctx.GridLookUpItem.columnsChild)("filter-lookup", ctx.GridLookUpItem.filter)("queryString", "set_racikan_id")("modal-title", "Data Racikan Dokter");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("lookup-url", ctx.urlTemplateResep)("columns", ctx.GridlookUpTemplateResep.columns)("columnsChild", ctx.GridlookUpTemplateResep.columnsChild)("filter-lookup", ctx.GridlookUpTemplateResep.filter)("modal-title", "Data Template Resep Dokter")("queryString", "resep_id");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipeBind1"](68, 71, ctx.dataSourceGrid))("childGrid", ctx.ChildGrid)("toolbar", ctx.GridDaftarObatToolbar);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", true)("allowEditing", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("visible", true)("allowEditing", false);
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_15__.OrgCardLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_23__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_23__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_23__.FormGroupDirective, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_16__.AtmLabelComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_25__.DropDownListComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_23__.CheckboxControlValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_23__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_23__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_26__.NgIf, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_27__.NumericTextBoxComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_25__.ComboBoxComponent, _shared_components_organism_loockUp_org_look_up_hirarki_org_look_up_hirarki_component__WEBPACK_IMPORTED_MODULE_17__.OrgLookUpHirarkiComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_28__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_28__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_28__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_28__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_28__.AggregateColumnDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_23__.DefaultValueAccessor], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_26__.AsyncPipe], styles: ["#basic-addon1[_ngcontent-%COMP%] {\r\n    height: 32px;\r\n    padding-left: 12px;\r\n    width: 100%;\r\n    border-top-left-radius: 0;\r\n    border-bottom-left-radius: 0;\r\n    border: 0;\r\n  }\r\n  \r\n  #DropdownObat[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%] {\r\n    border-top-right-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n  }\r\n  \r\n  #NumericQty[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%]    > input[_ngcontent-%COMP%] {\r\n    text-align: right;\r\n    padding-right: 5px;\r\n  }\r\n  \r\n  div.head[_ngcontent-%COMP%] {\r\n    font-size: 13px !important;\r\n    font-weight: 500 !important;\r\n  }\r\n  \r\n  .is-racikan[_ngcontent-%COMP%]{\r\n    background-color: #f3e6f3;\r\n  }"] });


/***/ }),

/***/ 5852:
/*!********************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irna/view-resep-irna/view-resep-irna.component.ts ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ViewResepIrnaComponent": () => (/* binding */ ViewResepIrnaComponent)
/* harmony export */ });
/* harmony import */ var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/grid.config.json */ 90860);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-bootstrap/modal */ 63301);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _services_resep_dokter_irna_resep_dokter_irna_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/resep-dokter-irna/resep-dokter-irna.service */ 85191);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/encryption.service */ 26512);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 26966);
/* harmony import */ var src_app_helpers_utility_utility_helper_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/helpers/utility/utility-helper.service */ 96922);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 27034);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 46555);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 48502);














const _c0 = ["LookupRacikan"];
const _c1 = ["GridResepRacikan"];
const _c2 = ["itemTemplate"];
const _c3 = ["modalTambahanHariResep"];
const _c4 = ["modalStopResep"];
function ViewResepIrnaComponent_ng_template_20_Template(rf, ctx) { if (rf & 1) {
    const _r7 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](0, "div", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](1, "h5", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](2, "Tambahan Hari Pada Resep");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](3, "button", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("click", function ViewResepIrnaComponent_ng_template_20_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵrestoreView"](_r7); const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"](); return ctx_r6.modalRef.hide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](4, "i", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](5, "div", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](6, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](7, "div", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](8, "div", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](9, "h3");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](10, "Tambah Jumlah Hari");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](11, "div", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](12, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](13, "div", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](14, "ejs-numerictextbox", 30, 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](16, "div", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](17, "span", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](18, " Hari ");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](19, "div", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](20, "button", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("click", function ViewResepIrnaComponent_ng_template_20_Template_button_click_20_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵrestoreView"](_r7); const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵreference"](15); const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"](); return ctx_r8.handleClickLanjutkanResepDokter(_r5.value); });
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](21, "Lanjukan Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("innerHTML", ctx_r2.htmlSelection, _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵsanitizeHtml"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("format", "N0")("showSpinButton", false)("showClearButton", false);
} }
function ViewResepIrnaComponent_ng_template_22_Template(rf, ctx) { if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](0, "div", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](1, "h5", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](2, "Stop Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](3, "button", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("click", function ViewResepIrnaComponent_ng_template_22_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵrestoreView"](_r10); const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"](); return ctx_r9.modalRef.hide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](4, "i", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](5, "div", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](6, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](7, "div", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](8, "h3");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](9, "Anda Yakin Akan Menghentikan Obat ini?");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](10, "div", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](11, "div", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](12, "button", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("click", function ViewResepIrnaComponent_ng_template_22_Template_button_click_12_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵrestoreView"](_r10); const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"](); return ctx_r11.handleClickStopResepDokter(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](13, "Stop Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](10);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("innerHTML", ctx_r4.htmlSelection, _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵsanitizeHtml"]);
} }
const _c5 = function () { return { wrapMode: "Both" }; };
class ViewResepIrnaComponent {
    constructor(formBuilder, resepDokterIrnaService, router, encryptionService, activatedRoute, utilityService, modalService, utilityHelperService) {
        this.formBuilder = formBuilder;
        this.resepDokterIrnaService = resepDokterIrnaService;
        this.router = router;
        this.encryptionService = encryptionService;
        this.activatedRoute = activatedRoute;
        this.utilityService = utilityService;
        this.modalService = modalService;
        this.utilityHelperService = utilityHelperService;
        this.ShowTitle = true;
        this.ButtonNav = [
            { Id: 'kembali', Captions: 'Kembali', Icons1: 'fa-arrow-left fa-sm' },
            { Id: 'lanjutkan', Captions: 'Lanjutkan Resep', Icons1: 'fa-forward fa-sm' },
            { Id: 'ubah', Captions: 'Ubah Resep', Icons1: 'fa-edit fa-sm' },
            { Id: 'stop', Captions: 'Hentikan Resep', Icons1: 'fa-stop-circle fa-sm' },
        ];
        this.GridConfig = /*#__PURE__*/ (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
        this.inputFieldState = 'detail';
        this.keterangan = (field, data1) => {
            return data1['nama_rute_pemberian_obat'] +
                ', sehari ' + data1['qty_harian'] + ' ' +
                data1['nama_satuan'] + ' ' + data1['ket_label'] + ' '
                + data1['satuan_aturan_pakai'] + ' ' + data1['ket_aturan'];
            ;
        };
        this.quantity = (field, data1) => {
            return data1['qty_harian'] + ' ' +
                data1['nama_satuan'] + '/Hari, untuk ' + data1['jumlah_hari'] + ' Hari';
        };
        this.dataSourceChild = [];
        this.dataSource = [];
        this.dataHeader = [];
        this.htmlSelection = '';
    }
    ngOnInit() {
        this.formInput = this.formBuilder.group({
            no_register: ['', []],
            no_rekam_medis: ['', []],
            poli: ['', []],
            pasien: ['', []],
            bed: ['', []],
            dokter: ['', []],
            umur: ['', []],
        });
        this.childGrid = {
            dataSource: this.dataSourceChild,
            queryString: "resep_detail_id",
            rowHeight: 30,
            allowResizing: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: 'Both' },
            columns: this.GridConfig.columnsChild
        };
        if ((this.router.url).includes('Dokter')) {
            this.ShowTitle = true;
        }
    }
    ngAfterViewInit() {
        let id = this.encryptionService.decrypt(this.activatedRoute.snapshot.params["id"]);
        console.log(id);
        this.onLoadDetailData(id);
    }
    onLoadDetailData(id) {
        this.resepDokterIrnaService.onGetById(id).subscribe((result) => {
            this.formInput.setValue({
                bed: result.data.bed_no + ' - ' + result.data.bed_no,
                pasien: result.data.nama_pasien,
                dokter: result.data.nama_dokter,
                no_register: result.data.no_register,
                no_rekam_medis: result.data.no_rekam_medis,
                poli: result.data.nama_poli,
                umur: result.data.usia
            });
            this.dataHeader = result.data;
            this.dataSource = result.data.details;
            this.GridResepRacikan.refresh();
            this.mapingRacikan(result.data.details);
            let umur = this.utilityHelperService.getAge(result.data.tgl_lahir);
        });
    }
    mapingRacikan(details) {
        this.dataSourceChild = [];
        details.map((item) => {
            this.dataSourceChild.push(...item.racikans);
        });
        this.childGrid = {
            dataSource: this.dataSourceChild,
            queryString: "resep_detail_id",
            rowHeight: 30,
            allowResizing: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: 'Both' },
            columns: this.GridConfig.columnsChild
        };
    }
    rowDataBound(args) {
        var is_racikan = args.data.is_racikan;
        if (!is_racikan) {
            //here hide which parent row has no child records
            args.row.querySelector('td').innerHTML = " ";
            args.row.querySelector('td').className = "e-customizedExpandcell";
        }
        else {
            // args.row.classList.add('is-racikan');
        }
    }
    onDataBound() {
        this.GridResepRacikan.detailRowModule.expandAll();
    }
    handleClickLanjutkanResepDokter(args) {
        let Body;
        Body = this.GridResepRacikan.getSelectedRecords();
        Body.map((e, i) => {
            e.jumlah_hari = args;
            return e;
        });
        // console.log(Body);
        this.resepDokterIrnaService.lanjutakanResepRawatInap(Body).subscribe((result) => {
            this.utilityService.onShowingCustomAlert('success', 'Obat ini berhasil di lanjutkan', result.message)
                .then(() => {
                this.modalRef.hide();
                this.onLoadDetailData(this.dataHeader.resep_id);
            });
        });
    }
    handleClickStopResepDokter(args) {
        let Body;
        Body = this.GridResepRacikan.getSelectedRecords();
        this.resepDokterIrnaService.stopResepRawatInap(Body).subscribe((result) => {
            this.utilityService.onShowingCustomAlert('success', 'Obat ini berhasil di hentikan/Stop', result.message)
                .then(() => {
                this.modalRef.hide();
                this.onLoadDetailData(this.dataHeader.resep_id);
            });
        });
    }
    onClickButtonNav(args) {
        let data = this.GridResepRacikan.getSelectedRecords();
        switch (args) {
            case "kembali":
                this.router.navigateByUrl('Dokter/resep-irna/daftar-resep-irna');
                break;
            case "lanjutkan":
                if (data.length == 0) {
                    this.utilityService.onShowingCustomAlert('warning', 'Obat belum di pilih', '');
                }
                else {
                    this.templateSelection();
                    this.modalRef = this.modalService.show(this.modalTambahanHariResep, Object.assign({}, { class: 'modal-md' }));
                }
                break;
            case "ubah":
                const id = this.encryptionService.encrypt(this.dataHeader.resep_id + ',ubah');
                this.router.navigate(['Dokter/resep-irna/ubah-resep-irna', id, "GRAHCIS"]);
                break;
            case "pulang":
                const id_resep = this.encryptionService.encrypt(this.dataHeader.resep_id + ',pulang');
                this.router.navigate(['Dokter/resep-irna/ubah-resep-irna', id_resep, "GRAHCIS"]);
                break;
            case "stop":
                if (data.length == 0) {
                    this.utilityService.onShowingCustomAlert('warning', 'Obat belum di pilih', '');
                }
                else {
                    this.templateSelection();
                    this.modalRef = this.modalService.show(this.modalStopResep, Object.assign({}, { class: 'modal-md' }));
                }
                break;
            default:
                break;
        }
    }
    templateSelection() {
        let data = this.GridResepRacikan.getSelectedRecords();
        this.htmlSelection = '<ul>';
        data.forEach((value, index) => {
            this.htmlSelection += `<li>${value.nama_obat}</li>`;
        });
        this.htmlSelection += '</ul>';
        console.log(this.htmlSelection);
    }
}
ViewResepIrnaComponent.ɵfac = function ViewResepIrnaComponent_Factory(t) { return new (t || ViewResepIrnaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_services_resep_dokter_irna_resep_dokter_irna_service__WEBPACK_IMPORTED_MODULE_2__.ResepDokterIrnaService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_10__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_3__.EncryptionService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_10__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_4__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_1__.BsModalService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](src_app_helpers_utility_utility_helper_service__WEBPACK_IMPORTED_MODULE_5__.UtilityHelperService)); };
ViewResepIrnaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineComponent"]({ type: ViewResepIrnaComponent, selectors: [["app-view-resep-irna"]], viewQuery: function ViewResepIrnaComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵviewQuery"](_c1, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵviewQuery"](_c2, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵviewQuery"](_c3, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵviewQuery"](_c4, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.LookupRacikan = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.GridResepRacikan = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.itemTemplate = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.modalTambahanHariResep = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.modalStopResep = _t.first);
    } }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵProvidersFeature"]([ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_1__.BsModalService])], decls: 24, vars: 37, consts: [[3, "ButtonNav", "HeaderRibbonClass", "ButtonNavClass", "ShowTitle", "onClickButtonNav"], [1, "row"], [1, "col-sm-4"], [3, "formGroup"], ["formControlName", "no_register", 3, "label", "inputFieldState"], ["formControlName", "no_rekam_medis", 3, "label", "inputFieldState"], ["formControlName", "pasien", 3, "label", "inputFieldState"], ["formControlName", "poli", 3, "label", "inputFieldState"], ["formControlName", "bed", 3, "label", "inputFieldState"], ["formControlName", "dokter", 3, "label", "inputFieldState"], ["formControlName", "umur", 3, "label", "inputFieldState"], [1, "col-sm-8"], [1, "card"], [1, "card-body", "p-0"], ["height", "calc(100vh - 15rem)", "gridLines", "Both", "rowHeight", "30", 3, "dataSource", "childGrid", "allowTextWrap", "textWrapSettings", "rowDataBound", "dataBound"], ["GridResepRacikan", ""], [3, "width", "field", "visible", "type", "textAlign", "headerTextAlign"], ["field", "rute_pemberian_obat", "headerText", "Resep", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing", "valueAccessor"], ["field", "qty_harian", "headerText", "Qty", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", 3, "visible", "allowEditing", "width", "valueAccessor"], ["modalTambahanHariResep", ""], ["modalStopResep", ""], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body", "p-10"], [1, "row", "mx-0", "my-1"], [1, "col-lg-12", "col-md-12", "col-sm-12"], [1, "text-success", 3, "innerHTML"], [1, "col-sm-9", "pe-0"], ["id", "tambahan_hari", "name", "tambahan_hari", 3, "format", "showSpinButton", "showClearButton"], ["tambah_hari", ""], [1, "col-lg-3", "col-md-3", "col-sm-3", "col-xs-3", "px-0"], ["id", "basic-addon1", 1, "input-group-text"], [1, "modal-footer", "background-abu-muda"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], [1, "text-danger", 3, "innerHTML"]], template: function ViewResepIrnaComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](0, "org-card-layout", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("onClickButtonNav", function ViewResepIrnaComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](3, "form", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](4, "mol-input-text", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](5, "mol-input-text", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](6, "mol-input-text", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](7, "mol-input-text", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](8, "mol-input-text", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](9, "mol-input-text", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](10, "mol-input-text", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](11, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](12, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](13, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](14, "ejs-grid", 14, 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("rowDataBound", function ViewResepIrnaComponent_Template_ejs_grid_rowDataBound_14_listener($event) { return ctx.rowDataBound($event); })("dataBound", function ViewResepIrnaComponent_Template_ejs_grid_dataBound_14_listener() { return ctx.onDataBound(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](16, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](17, "e-column", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](18, "e-column", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](19, "e-column", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplate"](20, ViewResepIrnaComponent_ng_template_20_Template, 22, 4, "ng-template", null, 19, _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplate"](22, ViewResepIrnaComponent_ng_template_22_Template, 14, 1, "ng-template", null, 20, _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav)("HeaderRibbonClass", "col-lg-4 col-md-4 col-sm-4 col-xs-4")("ButtonNavClass", "col-lg-8 col-md-8 col-sm-8 col-xs-8")("ShowTitle", ctx.ShowTitle);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("formGroup", ctx.formInput);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("label", "No Register")("inputFieldState", ctx.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("label", "No RM")("inputFieldState", ctx.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("label", "Pasien")("inputFieldState", ctx.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("label", "Poli")("inputFieldState", ctx.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("label", "Bed")("inputFieldState", ctx.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("label", "Dokter")("inputFieldState", ctx.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("label", "Umur")("inputFieldState", ctx.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("dataSource", ctx.dataSource)("childGrid", ctx.childGrid)("allowTextWrap", true)("textWrapSettings", _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵpureFunction0"](36, _c5));
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("width", 50)("field", "Checkbox")("visible", true)("type", "checkbox")("textAlign", "Center")("headerTextAlign", "Center");
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("visible", true)("allowEditing", false)("valueAccessor", ctx.keterangan);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 220)("valueAccessor", ctx.quantity);
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_6__.OrgCardLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_9__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_9__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_7__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormControlName, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_11__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_11__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_11__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_11__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_11__.AggregateColumnDirective, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_12__.NumericTextBoxComponent], styles: ["#basic-addon1[_ngcontent-%COMP%] {\r\n    height: 32px;\r\n    padding-left: 12px;\r\n    width: 100%;\r\n    border-top-left-radius: 0;\r\n    border-bottom-left-radius: 0;\r\n    border: 0;\r\n  }\r\n\r\n.e-toolbar[_ngcontent-%COMP%]   .e-toolbar-item[_ngcontent-%COMP%]   .e-tbar-btn.e-btn[_ngcontent-%COMP%]   .e-icons.e-btn-icon[_ngcontent-%COMP%] {\r\n    min-height: 14px !important;\r\n}\r\n\r\nth.e-headercell[_ngcontent-%COMP%] {\r\n    background-color: rgba(0, 0, 0, 0.03);\r\n    color: black;\r\n    border: 1px solid rgba(0, 0, 0, 0.125);\r\n    padding: 5px !important;\r\n    height: 30px !important;\r\n}\r\n\r\nspan.e-headertext[_ngcontent-%COMP%] {\r\n    font-size: 13px !important;\r\n}\r\n\r\ntd.e-rowcell[_ngcontent-%COMP%] {\r\n    padding: 5px !important;\r\n}"] });


/***/ }),

/***/ 26237:
/*!***********************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep/history-resep/history-resep.component.ts ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HistoryResepComponent": () => (/* binding */ HistoryResepComponent)
/* harmony export */ });
/* harmony import */ var _json_grid_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/grid.json */ 89210);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _services_resep_dokter_resep_dokter_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../services/resep-dokter/resep-dokter.service */ 67669);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 8210);
/* harmony import */ var _syncfusion_ej2_angular_calendars__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @syncfusion/ej2-angular-calendars */ 28219);
/* harmony import */ var _shared_components_atoms_buttons_atm_button_primary_atm_button_primary_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/components/atoms/buttons/atm-button-primary/atm-button-primary.component */ 43480);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 88594);








const _c0 = ["gridDetailResep"];
function HistoryResepComponent_div_37_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "div", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](2, "div", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](3, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](4, "p", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipe"](6, "date");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](7, "div", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function HistoryResepComponent_div_37_Template_div_click_7_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r4); const item_r2 = restoredCtx.$implicit; const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r3.onLihatDaftarObat(item_r2); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](8, "span", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](9, "Lihat Daftar Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](10, "div", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](11, "p", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](12, " Diinput Oleh ");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](13, "span", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](14);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](15, "div", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](16, "p", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](17);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r2 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipeBind2"](6, 3, item_r2.tanggal_resep, "dd MMMM yyyy"), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](9);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate"](item_r2.nama_dokter);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" No. Resep ", item_r2.nomor_resep, " ");
} }
class HistoryResepComponent {
    constructor(resepDokterService) {
        this.resepDokterService = resepDokterService;
        this.GridConfig = /*#__PURE__*/ (_json_grid_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
        /**
         * @GridDetailResepEditSettings
         * @Model EditSettingsModel
         * @Keterangan Variable untuk mensetting Edit Setting pada Grid
        */
        this.GridDetailResepEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
        /**
         * @GridDetailResepColumns
         * @Model any
         * @Keterangan Variable untuk mensetting Columns pada Grid
        */
        this.GridDetailResepColumns = /*#__PURE__*/ (_json_grid_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
        /**
         * @DropdownFields
         * @Keterangan Variable untuk mapping Dropdown
        */
        this.DropdownFields = { text: "text", value: "text" };
        /**
         * @DokterEntryDatasource
         * @Keterangan Dropdown Dokter Entry Datasource
        */
        this.DokterEntryDatasource = [
            { id: 1, text: "dr. Anastasia Nadia", },
        ];
        this.dataSource = [];
        this.dataSourceChild = [];
    }
    ngOnInit() {
        // this.DaftarHistoryResep = this.History.HistoryResep;
        this.childGrid = {
            dataSource: this.dataSourceChild,
            queryString: "resep_detail_id",
            rowHeight: 30,
            allowResizing: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: 'Both' },
            columns: this.GridConfig.columnsChild
        };
    }
    onLihatDaftarObat(HistoryDetailObat) {
        this.dataSource = HistoryDetailObat.details;
        this.mapingRacikan(HistoryDetailObat.details);
    }
    mapingRacikan(details) {
        this.dataSourceChild = [];
        details.map((item) => {
            this.dataSourceChild.push(...item.racikans);
        });
        this.childGrid = {
            dataSource: this.dataSourceChild,
            queryString: "resep_detail_id",
            rowHeight: 30,
            allowResizing: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: 'Both' },
            columns: this.GridConfig.columnsChild
        };
    }
    rowDataBound(args) {
        var is_racikan = args.data.is_racikan;
        if (!is_racikan) {
            //here hide which parent row has no child records
            args.row.querySelector('td').innerHTML = " ";
            args.row.querySelector('td').className = "e-customizedExpandcell";
        }
        else {
            // args.row.classList.add('is-racikan');
        }
    }
    onDataBound(args) {
        this.gridDetailResep.Grid.detailRowModule.expandAll();
    }
    onSearchHistoryResep() {
    }
}
HistoryResepComponent.ɵfac = function HistoryResepComponent_Factory(t) { return new (t || HistoryResepComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_services_resep_dokter_resep_dokter_service__WEBPACK_IMPORTED_MODULE_1__.ResepDokterService)); };
HistoryResepComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({ type: HistoryResepComponent, selectors: [["app-history-resep"]], viewQuery: function HistoryResepComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵloadQuery"]()) && (ctx.gridDetailResep = _t.first);
    } }, decls: 47, vars: 19, consts: [[1, "row", "pt-2"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [1, "card"], [1, "card-header"], [1, "row"], [1, "col-8"], [1, "text-biru-tua", "mb-0"], ["data-bs-toggle", "offcanvas", "data-bs-target", "#offcanvasFilter", "aria-controls", "offcanvasFilter", 1, "col-4", "text-end", "px-2", "cursor-pointer"], [1, "badge", "bg-primary"], [1, "fas", "fa-filter"], ["tabindex", "-1", "id", "offcanvasFilter", "aria-labelledby", "offcanvasFilterLabel", 1, "offcanvas", "offcanvas-end", 2, "width", "30rem"], [1, "offcanvas-header"], ["id", "offcanvasFilterLabel"], ["type", "button", "data-bs-dismiss", "offcanvas", "aria-label", "Close", 1, "btn-close", "text-reset"], [1, "offcanvas-body"], [1, "mb-3"], ["for", "no_resep", 1, "form-label"], ["type", "text", "id", "no_resep", 1, "form-control", "form-select-sm"], ["id", "DropdownObat", 3, "allowFiltering", "dataSource", "fields"], [1, "row", "mb-4"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6"], ["id", "WaktuEntryStart", 3, "format"], ["id", "WaktuEntryEnd", 3, "format"], [1, "row", "mb-2"], [3, "ButtonPrimaryCaption", "IsButtonBlock", "ButtonPrimaryIcon", "onClickButtonPrimary"], [1, "card-body", "p-1", "cardBodyHistoryResep", "p-1"], ["class", "card shadow-sm border-1 mb-2", 4, "ngFor", "ngForOf"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], [1, "card-body", "cardBodyHistoryResep", "p-0"], [3, "grid-id", "grid-height", "grid-lines", "grid-editSettings", "grid-toolbar", "columns", "childGrid", "grid-DataSource", "data-bound", "row-data-bound"], ["gridDetailResep", ""], [1, "card", "shadow-sm", "border-1", "mb-2"], [1, "card-body", "p-2"], [1, "row", "mb-1"], [1, "text-black", "mb-0", 2, "font-size", "17px", "font-weight", "600"], [1, "col-4", "text-end", "ps-0", "cursor-pointer", 3, "click"], [1, "mb-1"], [1, "text-hitam-muda", "mb-0", 2, "font-size", "15px"], [1, "text-biru-muda"], [1, "mb-0"], [1, "text-abu-tua", "mb-0", 2, "font-size", "14px"]], template: function HistoryResepComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](5, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](6, "p", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](7, "Daftar History Resep");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](8, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](9, "span", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](10, "i", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](11, "\u00A0 Filter (F1) ");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](12, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](13, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](14, "h5", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](15, "Filter Pencarian History Resep");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](16, "button", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](17, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](18, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](19, "label", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](20, "No. Resep");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](21, "input", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](22, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](23, "label", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](24, "Dokter Entry Resep");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](25, "ejs-dropdownlist", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](26, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](27, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](28, "label", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](29, "Waktu Entry");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](30, "div", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](31, "ejs-datepicker", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](32, "div", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](33, "ejs-datepicker", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](34, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](35, "atm-button-primary", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("onClickButtonPrimary", function HistoryResepComponent_Template_atm_button_primary_onClickButtonPrimary_35_listener() { return ctx.onSearchHistoryResep(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](36, "div", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](37, HistoryResepComponent_div_37_Template, 18, 6, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipe"](38, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](39, "div", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](40, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](41, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](42, "p", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](43, "Daftar Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](44, "div", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](45, "mol-grid", 30, 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("data-bound", function HistoryResepComponent_Template_mol_grid_data_bound_45_listener($event) { return ctx.onDataBound($event); })("row-data-bound", function HistoryResepComponent_Template_mol_grid_row_data_bound_45_listener($event) { return ctx.rowDataBound($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](25);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx.DokterEntryDatasource)("fields", ctx.DropdownFields);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("format", "dd MMMM yyyy");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("format", "dd MMMM yyyy");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ButtonPrimaryCaption", "Cari")("IsButtonBlock", true)("ButtonPrimaryIcon", "fas fa-search fa-sm");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipeBind1"](38, 17, ctx.resepDokterService.dataHistoryResep));
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("grid-id", "GridDetailResep")("grid-height", "calc(100vh - 19rem)")("grid-lines", "Both")("grid-editSettings", ctx.GridDetailResepEditSettings)("grid-toolbar", ctx.GridDetailResepToolbar)("columns", ctx.GridConfig.columns)("childGrid", ctx.childGrid)("grid-DataSource", ctx.dataSource);
    } }, directives: [_syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_5__.DropDownListComponent, _syncfusion_ej2_angular_calendars__WEBPACK_IMPORTED_MODULE_6__.DatePickerComponent, _shared_components_atoms_buttons_atm_button_primary_atm_button_primary_component__WEBPACK_IMPORTED_MODULE_2__.AtmButtonPrimaryComponent, _angular_common__WEBPACK_IMPORTED_MODULE_7__.NgForOf, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_3__.MolGridComponent], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__.AsyncPipe, _angular_common__WEBPACK_IMPORTED_MODULE_7__.DatePipe], styles: [".cardBodyHistoryResep[_ngcontent-%COMP%] {\r\n  height: calc(100vh - 16.5rem);\r\n  max-height: calc(100vh - 16.5rem);\r\n  overflow-y: auto;\r\n}"] });


/***/ }),

/***/ 54911:
/*!*******************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep/input-resep/input-resep.component.ts ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache;
var _json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache;
var _json_GridResep_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InputResepComponent": () => (/* binding */ InputResepComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _json_GridResep_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../json/GridResep.json */ 79288);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 43479);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ 26215);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/api/PHARMACY */ 49548);
/* harmony import */ var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./json/lookupitem.json */ 26767);
/* harmony import */ var _json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./json/lookuptemplateresep.json */ 515);
/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @syncfusion/ej2-data */ 78865);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! sweetalert2 */ 88259);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var src_app_prototype_ArrPrototype__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/prototype/ArrPrototype */ 24292);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _services_resep_dokter_resep_dokter_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../services/resep-dokter/resep-dokter.service */ 67669);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-label-pemakaian-obat/setup-label-pemakaian-obat.service */ 65203);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_tambahan_aturan_pakai_setup_tambahan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-tambahan-aturan-pakai/setup-tambahan-aturan-pakai.service */ 561);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_satuan_aturan_pakai_setup_satuan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-satuan-aturan-pakai/setup-satuan-aturan-pakai.service */ 43233);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_metode_racikan_setup_metode_racikan_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-metode-racikan/setup-metode-racikan.service */ 6524);
/* harmony import */ var src_app_modules_Pharmacy_services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/setup-data/setup-outlet/setup-outlet.service */ 80443);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../shared/components/atoms/form/atm-label/atm-label.component */ 49130);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 8210);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/common */ 38583);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 48502);
/* harmony import */ var _shared_components_organism_loockUp_org_look_up_hirarki_org_look_up_hirarki_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../shared/components/organism/loockUp/org-look-up-hirarki/org-look-up-hirarki.component */ 54313);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 46555);

























const _c0 = ["LookupRacikan"];
const _c1 = ["LookupTemplateResep"];
const _c2 = ["GridResepRacikan"];
const _c3 = ["itemTemplate"];
function InputResepComponent_div_20_Template(rf, ctx) { if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](1, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](2, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](3, "label", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](4, "Nama Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](5, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](6, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](7, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](8, "ejs-dropdownlist", 57, 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("filtering", function InputResepComponent_div_20_Template_ejs_dropdownlist_filtering_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r10); const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](); return ctx_r9.onFiltering($event); })("change", function InputResepComponent_div_20_Template_ejs_dropdownlist_change_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r10); const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](); return ctx_r11.handleChangeObat($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](10, "div", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](11, "span", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](12);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx_r1.data)("fields", ctx_r1.fields)("placeholder", ctx_r1.text)("query", ctx_r1.query)("sortOrder", ctx_r1.sorting)("allowFiltering", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtextInterpolate1"](" ", ctx_r1.nama_satuan.value, " ");
} }
function InputResepComponent_div_21_Template(rf, ctx) { if (rf & 1) {
    const _r13 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](1, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](2, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](3, "label", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](4, "Nama Racikan Obat");
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](5, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](6, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](7, "input", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("change", function InputResepComponent_div_21_Template_input_change_7_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r13); const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](); return ctx_r12.handleChangeNamaRacikan(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](8, "button", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("click", function InputResepComponent_div_21_Template_button_click_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r13); const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](); return ctx_r14.handelClickRacikan($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](9, "i", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
} }
function InputResepComponent_div_22_Template(rf, ctx) { if (rf & 1) {
    const _r17 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](1, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](2, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](3, "label", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](4, "Kemasan Racikan");
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](5, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](6, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](7, "ejs-dropdownlist", 67, 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("change", function InputResepComponent_div_22_Template_ejs_dropdownlist_change_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r17); const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](); return ctx_r16.handleChangeMetodeRacikan($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpipe"](9, "async");
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpipeBind1"](9, 3, ctx_r3.setupMetodeRacikanService.dataSource))("fields", ctx_r3.DropdownMetodeRacikanFields)("allowFiltering", true);
} }
function InputResepComponent_div_37_Template(rf, ctx) { if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "div", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](1, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](2, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](3, "label", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](4, "Satuan");
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](5, "div", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](6, "ejs-combobox", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("change", function InputResepComponent_div_37_Template_ejs_combobox_change_6_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r19); const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](); return ctx_r18.handleChangeSatuanAturan($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx_r4.dataSourceSatuanAturanPakai)("fields", ctx_r4.DropdownsatuanPakaiFields);
} }
class InputResepComponent {
    constructor(formBuilder, resepDokterService, setupLabelPemakaianObatService, setupTambahanAturanPakaiService, setupSatuanAturanPakaiService, setupMetodeRacikanService, setupOutletService, renderer, daftarPasienService) {
        this.formBuilder = formBuilder;
        this.resepDokterService = resepDokterService;
        this.setupLabelPemakaianObatService = setupLabelPemakaianObatService;
        this.setupTambahanAturanPakaiService = setupTambahanAturanPakaiService;
        this.setupSatuanAturanPakaiService = setupSatuanAturanPakaiService;
        this.setupMetodeRacikanService = setupMetodeRacikanService;
        this.setupOutletService = setupOutletService;
        this.renderer = renderer;
        this.daftarPasienService = daftarPasienService;
        this.onSetTemplateResep = new _angular_core__WEBPACK_IMPORTED_MODULE_15__.EventEmitter();
        this.setIdOutlet = new _angular_core__WEBPACK_IMPORTED_MODULE_15__.EventEmitter();
        this.urlRacikan = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_1__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_RACIKAN; // + '/' + 2 + '/J';
        this.urlTemplateResep = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_1__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_TEMPLATE_RESEP; // + '/' + 2;
        this.GridLookUpItem = /*#__PURE__*/ (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_2__, 2)));
        this.GridlookUpTemplateResep = /*#__PURE__*/ (_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache || (_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache = __webpack_require__.t(_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_3__, 2)));
        this.DropdownLabelFields = { text: "nama_label_pemakaian_obat", value: "id_label_pemakaian_obat" };
        this.DropdownAturanFields = { text: "tambahan_aturan_pakai", value: "id_tambahan_aturan_pakai" };
        this.DropdownsatuanPakaiFields = { text: "satuan_aturan_pakai", value: "id_satuan_aturan_pakai" };
        this.SetupOutletDropdownField = { text: 'nama_outlet', value: 'id_outlet' };
        this.FormAddObatState = "input";
        // ** Satuan 
        this.SatuanObat = "-";
        this.DropdownObatFields = { text: 'nama_obat', value: 'id_item' };
        this.DropdownMetodeRacikanFields = { text: 'metode_racikan', value: 'id_metode_racikan' };
        this.NamaObatDatasource = [];
        // ** Waktu Pakai
        this.WaktuPakai = [];
        // ** Grid Daftar Obat Properties
        this.GridDaftarObatEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
        this.GridDaftarObatDataSource = [];
        this.GridDaftarObatColumns = /*#__PURE__*/ (_json_GridResep_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_GridResep_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_GridResep_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
        this.GridDetailResepRacikanDatasource = [];
        this.GridResepRacikanDatasource = [];
        this.dataSourceLabelPemakaian = [];
        this.dataSourceTambahanAturanPakai = [];
        this.dataSourceSatuanAturanPakai = [];
        this.counter = 0;
        this.counterRacikan = 0;
        this.dataSourceGrid = new rxjs__WEBPACK_IMPORTED_MODULE_16__.BehaviorSubject([]);
        this.dataScourceGridChild = [];
        this.whereField = "msi.nama_item";
        // SERVER SIDE 
        this.IsUserLogin = JSON.parse(localStorage.getItem('UserData'));
        this.data = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_17__.DataManager({
            headers: [
                {
                    Authorization: "Bearer " + this.IsUserLogin.token
                }
            ],
            url: src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_1__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_OBAT_PARAMS_DROPDOWNLIST,
            adaptor: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_17__.ODataV4Adaptor,
            crossDomain: true,
        });
        this.fields = { text: 'nama_obat', value: 'id_item' };
        this.query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_17__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where(this.whereField, 'contains', '', true);
        this.text = "Select a Obat";
        this.sorting = 'Ascending';
        this.onFiltering = (e) => {
            // load overall data when search key empty.
            if (e.text === '') {
                e.updateData(this.data);
            }
            else {
                let query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_17__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where(this.whereField, 'contains', e.text, true);
                e.updateData(this.data, query);
            }
        };
        //=====================
        this.dataChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_17__.DataManager({
            headers: [
                {
                    Authorization: "Bearer " + this.IsUserLogin.token
                }
            ],
            url: src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_1__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_OBAT_PARAMS_DROPDOWNLIST,
            adaptor: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_17__.ODataV4Adaptor,
            crossDomain: true,
        });
        this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_17__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where(this.whereField, 'contains', '', true);
    }
    get width() { return window.innerWidth; }
    ;
    ngOnInit() {
        this.FormAddObat = this.formBuilder.group({
            counter: [0, []],
            is_racikan: [false, []],
            no_urut: [0, []],
            set_racikan_id: [null, []],
            id_metode_racikan: [null, []],
            metode_racikan: ['', []],
            id_item: [null, []],
            nama_racikan: ['', []],
            nama_obat: ['', []],
            qty_resep: [1, []],
            nama_satuan: ['-', []],
            label: ['', []],
            ket_label: ['', []],
            id_label_pemakaian_obat: [null, []],
            label_pemakaian_obat: ['', []],
            id_satuan_aturan_pakai: [null, []],
            satuan_aturan_pakai: [null, []],
            aturan: ['', []],
            ket_aturan: ['', []],
            id_tambahan_aturan_pakai: [null, []],
            label_tambahan_aturan_pakai_obat: ['', []]
        });
        this.GridDaftarObatToolbar = [
            { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
            { text: 'Delete', tooltipText: 'Delete', prefixIcon: 'fas fa-trash-alt fa-sm', id: 'delete' },
            'Search'
        ];
        let currentQtyResep = this.currentQtyResep;
        let currentIdItem = this.currentIdItem;
        let SelectedDataRacikanObat = this.SelectedDataRacikanObat;
        this.resepDokterService.dataSelectRacikan.next(SelectedDataRacikanObat);
        this.itemsParams = {
            create: () => {
                if (SelectedDataRacikanObat) {
                    this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_17__.Query().from('Obat')
                        .select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan'])
                        .take(10).where(this.whereField, 'contains', SelectedDataRacikanObat.nama_obat, true);
                }
                else {
                    this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_17__.Query().from('Obat')
                        .select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan'])
                        .take(10).where(this.whereField, 'contains', '', true);
                }
                this.itemsElem = document.createElement('input');
                return this.itemsElem;
            },
            read: () => {
                return this.itemsObj.text;
            },
            destroy: () => {
                this.itemsObj.destroy();
            },
            write: () => {
                this.itemsObj = new _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_18__.DropDownList({
                    dataSource: this.dataChild,
                    fields: this.fields,
                    query: this.queryChild,
                    enabled: true,
                    placeholder: 'Select a obat',
                    // floatLabelType: 'Never',
                    allowFiltering: true,
                    popupWidth: '55rem',
                    filtering: function (e) {
                        if (e.text === '') {
                            e.updateData(this.data);
                        }
                        else {
                            let query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_17__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where(this.whereField, 'contains', e.text, true);
                            e.updateData(this.data, query);
                        }
                    }.bind(this),
                    change: function (args) {
                        currentIdItem = args.itemData.id_item;
                        console.log('currentItem', currentIdItem);
                        this.setFormGrif(args, currentQtyResep, currentIdItem, SelectedDataRacikanObat);
                    }.bind(this),
                });
                this.itemsObj.appendTo(this.itemsElem);
                if (SelectedDataRacikanObat) {
                    this.setFormGrif(null, SelectedDataRacikanObat.qty_resep, currentIdItem, SelectedDataRacikanObat);
                    setTimeout(() => {
                        console.log('', SelectedDataRacikanObat);
                        currentIdItem = SelectedDataRacikanObat.id_item;
                        this.itemsObj.value = currentIdItem;
                    }, 10);
                }
            }
        };
        let counterRacikan = this.counterRacikan;
        let dataSourceChild = this.dataScourceGridChild;
        let dataSourceGrid = this.dataSourceGrid;
        this.resepDokterService.dataSourceChildGrid.next(dataSourceChild);
        this.resepDokterService.dataSourceParentGrid.next(dataSourceGrid.value);
        let nav = 'add';
        this.ChildGrid = {
            dataSource: this.dataScourceGridChild,
            queryString: "counter",
            rowHeight: 30,
            allowResizing: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: 'Both' },
            toolbar: ['Add', 'Edit', 'Delete', 'Update', 'Cancel'],
            editSettings: { allowEditing: true, allowAdding: true, allowDeleting: true },
            sortSettings: { columns: [{ field: 'counterRacikan', direction: 'Descending' }] },
            columns: [
                { field: "counter", headerText: 'counter', width: 100, visible: false },
                { field: "counterRacikan", headerText: 'counterRacikan', width: 100, visible: false },
                { field: "no_urut", headerText: 'ID Obat', visible: false },
                { field: "nama_obat", headerText: 'Nama Obat', editType: 'dropdownedit', edit: this.itemsParams, width: 200 },
                { field: "nama_satuan", headerText: 'Satuan', textAlign: 'Right', width: 80, allowEditing: false },
                { field: "id_item", headerText: 'id', width: 100, visible: false },
                { field: "komposisi", headerText: 'kps', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2', allowEditing: false },
                { field: "seper", headerText: '1/', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                { field: "kandungan", headerText: 'Kandungan', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                { field: "qty_resep", headerText: 'qty', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2', visible: false },
                { field: "qty_racikan", headerText: 'QTY', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                { field: "keterangan", headerText: 'Keterangan', headerTextAlign: 'Center', textAlign: 'Left', width: 100 },
            ],
            rowSelected(args) {
                SelectedDataRacikanObat = args.data;
                console.log('SelectedDataRacikanObat', SelectedDataRacikanObat);
            },
            actionBegin(args) {
                console.log('begin', args);
                if (args.requestType === 'add') {
                    const counter = 'counter';
                    args.data[counter] = this.parentDetails.parentKeyFieldValue;
                    args.data['qty_resep'] = this.parentDetails.parentRowData.qty_resep;
                    // (args.data as object)['counterRacikan'] = counterRacikan++;
                    currentQtyResep = this.parentDetails.parentRowData.qty_resep;
                    SelectedDataRacikanObat = null;
                }
            },
            actionComplete(args) {
                console.log(args);
                if (args.requestType == 'save') {
                    if (args.action == 'add') {
                        args.data.id_item = currentIdItem;
                        args.data.counterRacikan = counterRacikan++;
                        args.data.qty_racikan = parseFloat(args.data.qty_racikan);
                        console.log(dataSourceChild);
                        dataSourceChild.push(args.data);
                    }
                    if (args.action == 'edit') {
                        args.data.id_item = currentIdItem;
                        args.data.qty_racikan = parseFloat(args.data.qty_racikan);
                        let index = dataSourceChild.map((item) => { return item.counterRacikan; }).indexOf(args.data.counterRacikan);
                        dataSourceChild[index] = args.data;
                    }
                    let data = [];
                    dataSourceChild.orderBy('-counterRacikan');
                    dataSourceGrid.value.forEach((itemPrent, indexPrent) => {
                        data.push(itemPrent);
                    });
                    setTimeout(() => {
                        dataSourceGrid.next(data);
                        console.log(data);
                    }, 500);
                }
                if (args.requestType == "delete") {
                    let index = dataSourceChild.map((item) => { return item.counterRacikan; }).indexOf(args.data[0].counterRacikan);
                    dataSourceChild.splice(index, 1);
                    let data = [];
                    dataSourceChild.orderBy('-counterRacikan');
                    dataSourceGrid.value.forEach((itemPrent, indexPrent) => {
                        data.push(itemPrent);
                    });
                    setTimeout(() => {
                        dataSourceGrid.next(data);
                        console.log(data);
                    }, 500);
                }
            }
        };
        this.setupLabelPemakaianObatService.onGetAll().subscribe((result) => {
            this.dataSourceLabelPemakaian = result.data;
        });
        this.setupTambahanAturanPakaiService.onGetAll().subscribe((result) => {
            this.dataSourceTambahanAturanPakai = result.data;
        });
        this.setupSatuanAturanPakaiService.onGetAll().subscribe((result) => {
            this.dataSourceSatuanAturanPakai = result.data;
        });
        this.setupMetodeRacikanService.setDataSource();
        this.setupOutletService.setDataSource();
        this.urlTemplateResep = this.urlTemplateResep + '/' + this.daftarPasienService.ActivePasien.value.id_dokter;
        this.urlRacikan = this.urlRacikan + '/' + this.daftarPasienService.ActivePasien.value.id_dokter + '/J';
    }
    onLoad(args) {
    }
    handleChangeOutlet(args) {
        this.setIdOutlet.emit(args.value);
    }
    setFormGrif(args, currentQtyResep, id_item, SelectedDataRacikanObat) {
        if (SelectedDataRacikanObat) {
            document.getElementsByName("nama_satuan")[0].value = SelectedDataRacikanObat.nama_satuan;
            document.getElementsByName("komposisi")[0].value = SelectedDataRacikanObat.komposisi;
            document.getElementsByName("seper")[0].value = SelectedDataRacikanObat.seper;
            document.getElementsByName("kandungan")[0].value = SelectedDataRacikanObat.kandungan;
            document.getElementsByName("qty_racikan")[0].value = SelectedDataRacikanObat.qty_racikan;
        }
        else {
            document.getElementsByName("nama_satuan")[0].value = args.itemData.nama_satuan;
            document.getElementsByName("komposisi")[0].value = args.itemData.kandungan_obat;
            document.getElementsByName("seper")[0].value = '1';
            document.getElementsByName("kandungan")[0].value = args.itemData.kandungan_obat;
            document.getElementsByName("qty_racikan")[0].value = currentQtyResep.toString();
        }
        let seper = document.getElementsByName("seper")[0];
        if (seper) {
            seper.addEventListener('click', (event) => {
                seper.select();
            });
            seper.addEventListener('keyup', (event) => {
                let komposisi = parseInt(document.getElementsByName("komposisi")[0].value);
                let seper = parseInt(document.getElementsByName("seper")[0].value);
                let hasil = komposisi / seper;
                document.getElementsByName("kandungan")[0].value = hasil.toString();
                let butuh = currentQtyResep * hasil;
                let qty = butuh / komposisi;
                document.getElementsByName("qty_racikan")[0].value = qty.toString();
            });
            this.setInputFilter(seper, function (value) {
                return /^\d*$/.test(value);
            });
        }
        let kandungan = document.getElementsByName("kandungan")[0];
        if (kandungan) {
            kandungan.addEventListener('click', (event) => {
                kandungan.select();
            });
            kandungan.addEventListener('keyup', (event) => {
                let kandungan = parseInt(document.getElementsByName("kandungan")[0].value);
                let komposisi = parseInt(document.getElementsByName("komposisi")[0].value);
                let butuh = currentQtyResep * kandungan;
                console.log(butuh);
                let qty = butuh / komposisi;
                document.getElementsByName("qty_racikan")[0].value = qty.toString();
                document.getElementsByName("seper")[0].value = '1';
            });
            this.setInputFilter(kandungan, function (value) {
                return /^\d*$/.test(value);
            });
        }
        let qty_racikan = document.getElementsByName("qty_racikan")[0];
        if (qty_racikan) {
            qty_racikan.addEventListener('click', (event) => {
                qty_racikan.select();
            });
            this.setInputFilter(qty_racikan, function (value) {
                return /^\d*$/.test(value);
            });
        }
    }
    setInputFilter(textbox, inputFilter) {
        ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function (event) {
            textbox.addEventListener(event, function () {
                if (inputFilter(this.value)) {
                    this.oldValue = this.value;
                    this.oldSelectionStart = this.selectionStart;
                    this.oldSelectionEnd = this.selectionEnd;
                }
                else if (Object.prototype.hasOwnProperty.call(this, 'oldValue')) {
                    this.value = this.oldValue;
                    if (this.oldSelectionStart !== null &&
                        this.oldSelectionEnd !== null) {
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    }
                }
                else {
                    this.value = "";
                }
            });
        });
    }
    rowDataBound(args) {
        var is_racikan = args.data.is_racikan;
        if (!is_racikan) {
            //here hide which parent row has no child records
            args.row.querySelector('td').innerHTML = " ";
            args.row.querySelector('td').className = "e-customizedExpandcell";
        }
        else {
            // args.row.classList.add('is-racikan');
        }
    }
    onDataBound() {
        this.GridResepRacikan.detailRowModule.expandAll();
    }
    // ** Dropdown Nama Obat onchange method
    handleChangeObat(args) {
        this.nama_satuan.setValue(args.itemData.nama_satuan);
        this.nama_obat.setValue(args.itemData.nama_obat);
    }
    handleChangeLabel(args) {
        if (typeof args.value === 'number' && (args.value % 1) === 0) {
            this.label_pemakaian_obat.setValue('');
            this.id_label_pemakaian_obat.setValue(args.value);
            this.ket_label.setValue(args.itemData.nama_label_pemakaian_obat);
        }
        else {
            this.label_pemakaian_obat.setValue(args.value);
            this.id_label_pemakaian_obat.setValue(1);
            this.ket_label.setValue(args.itemData.nama_label_pemakaian_obat);
        }
    }
    handleChangeAturan(args) {
        if (typeof args.value === 'number' && (args.value % 1) === 0) {
            this.label_tambahan_aturan_pakai_obat.setValue('');
            this.id_tambahan_aturan_pakai.setValue(args.value);
            this.ket_aturan.setValue(args.itemData.tambahan_aturan_pakai);
        }
        else {
            this.label_tambahan_aturan_pakai_obat.setValue(args.value);
            this.id_tambahan_aturan_pakai.setValue(1);
            this.ket_aturan.setValue(args.itemData.tambahan_aturan_pakai);
        }
    }
    handleChangeSatuanAturan(args) {
        this.satuan_aturan_pakai.setValue(args.itemData.satuan_aturan_pakai);
    }
    handleChangeNamaRacikan() {
        this.set_racikan_id.setValue(null);
    }
    handelClickRacikan() {
        this.LookupRacikan.onOpenModal();
    }
    handelClickTemplateResep() {
        this.LookupTemplateResep.onOpenModal();
    }
    handleChangeMetodeRacikan(args) {
        this.metode_racikan.setValue(args.itemData.metode_racikan);
    }
    heandleSelectedRacikan(args) {
        this.counter++;
        args.counter = this.counter;
        args.is_racikan = true;
        args.no_urut = 0;
        args.id_item = null;
        args.nama_satuan = null;
        args.label = null;
        args.nama_racikan = args.nama_obat;
        args.label = args.ket_label;
        args.aturan = args.ket_aturan;
        let dataObat = this.dataSourceGrid.value;
        dataObat.push(args);
        this.dataSourceGrid.next(dataObat);
        this.resepDokterService.dataSourceParentGrid.next(dataObat);
        let detail;
        detail = this.GridResepRacikan.childGrid.dataSource;
        args.details.forEach(element => {
            let counterRacikan = this.counterRacikan++;
            element.counter = this.counter;
            element.counterRacikan = counterRacikan;
            element.komposisi = element.kandungan_obat;
            element.kandungan = 1;
            element.seper = 1;
            element.qty_resep = args.qty_resep;
            detail.push(element);
        });
        this.resepDokterService.dataSourceChildGrid.next(detail);
        this.GridResepRacikan.refresh();
    }
    heandleSelectedTemplateResep(args) {
        console.log(args);
        let obat = [];
        let detail;
        detail = this.GridResepRacikan.childGrid.dataSource;
        args.details.forEach(element => {
            this.counter++;
            element.counter = this.counter;
            if (element.is_racikan) {
                element.nama_racikan = element.nama_obat;
            }
            else {
                element.nama_racikan = '';
            }
            if (element.id_label_pemakaian_obat == 1) {
                element.label = element.ket_label;
            }
            else {
                element.label = element.id_label_pemakaian_obat;
            }
            if (element.id_tambahan_aturan_pakai == 1) {
                element.aturan = element.ket_aturan;
            }
            else {
                element.aturan = element.id_tambahan_aturan_pakai;
            }
            // this.resepDokterService.addDetail(element);
            obat.push(element);
            element.racikans.forEach(racikan => {
                let counterRacikan = this.counterRacikan++;
                racikan.counter = this.counter;
                racikan.counterRacikan = counterRacikan;
                racikan.komposisi = parseInt(racikan.kandungan_obat);
                racikan.kandungan = 1;
                racikan.seper = 1;
                racikan.qty_resep = element.qty_resep;
                detail.push(racikan);
            });
        });
        this.dataSourceGrid.next(obat);
        this.resepDokterService.dataSourceChildGrid.next(detail);
        this.resepDokterService.dataSourceParentGrid.next(obat);
        this.GridResepRacikan.refresh();
        this.onSetTemplateResep.emit(true);
    }
    handleAddObat(FormAddObat) {
        if (this.validasi(FormAddObat)) {
            this.counter++;
            FormAddObat.counter = this.counter;
            if (FormAddObat.is_racikan) {
                FormAddObat.nama_obat = FormAddObat.nama_racikan;
            }
            else {
                FormAddObat.id_metode_racikan = null;
                FormAddObat.metode_racikan = null;
            }
            // this.resepDokterService.addDetail(FormAddObat);
            let dataDetail = this.dataSourceGrid.value;
            dataDetail.push(FormAddObat);
            this.dataSourceGrid.next(dataDetail);
            this.resepDokterService.dataSourceParentGrid.next(dataDetail);
            this.GridResepRacikan.refresh();
            this.onResetFormObat();
        }
    }
    validasi(FormData) {
        let message = [];
        let htmlSelection = '';
        console.log('validasi', FormData);
        if (FormData.is_racikan) {
            if (FormData.nama_racikan == '' || FormData.nama_racikan == null) {
                message.push('Nama Racikan belum di isi');
            }
            if (FormData.metode_racikan == '' || FormData.metode_racikan == null) {
                message.push('Kemasan Racikan belum di isi');
            }
        }
        else {
            if (FormData.nama_obat == '' || FormData.nama_obat == null) {
                message.push('obat belum di pillih');
            }
            if (FormData.satuan_aturan_pakai == '' || FormData.satuan_aturan_pakai == null) {
                message.push('Satuan belum di pillih');
            }
        }
        if (FormData.label == '' || FormData.label == null) {
            message.push('Label Obat belum di isi');
        }
        if (FormData.aturan == '' || FormData.aturan == null) {
            message.push('Aturan Tambahan belum di isi');
        }
        if (message.length > 0) {
            htmlSelection = '<div class="text-danger"><ul>';
            message.forEach((value, index) => {
                htmlSelection += `<li>${value}</li>`;
            });
            htmlSelection += `</ul></div>`;
            sweetalert2__WEBPACK_IMPORTED_MODULE_4___default().fire({
                icon: 'error',
                title: 'Validasi Data',
                html: htmlSelection,
            });
            return false;
        }
        else {
            return true;
        }
    }
    onResetFormObat() {
        this.FormAddObat.reset();
        this.qty_resep.setValue(1);
        this.is_racikan.setValue(false);
    }
    // ** Update Data Obat method
    onUpdateDataObat(FormAddObat) {
        if (this.validasi(FormAddObat)) {
            if (FormAddObat.is_racikan) {
                FormAddObat.nama_obat = FormAddObat.nama_racikan;
            }
            let dataDetail = this.dataSourceGrid.value;
            dataDetail[this.currentIndex] = FormAddObat;
            this.dataSourceGrid.next(dataDetail);
            this.resepDokterService.dataSourceParentGrid.next(dataDetail);
            this.onResetFormObat();
            this.GridResepRacikan.refresh();
            this.FormAddObatState = "input";
        }
    }
    // ** Reset Form Add Obat 
    onResetFormDataObat() {
        this.FormAddObat.reset();
        this.SatuanObat = "";
    }
    // ** Grid Daftar Obat method
    onInitalizedGrid(component) {
        this.gridDaftarObat = component;
    }
    // ** Grid Daftar Obat method
    onToolbarClick(args) {
        switch (args.item.id) {
            case "edit":
                // this.FormAddObat.setValue(this.SelectedDataObat);
                this.onEditData();
                this.FormAddObatState = "edit";
                break;
            case "delete":
                let dataObat = this.resepDokterService.dataSourceParentGrid.value;
                dataObat.splice(this.currentIndex, 1);
                this.resepDokterService.dataSourceParentGrid.next(dataObat);
                this.dataSourceGrid.next(dataObat);
                this.GridResepRacikan.refresh();
                break;
            default:
                break;
        }
        ;
    }
    onEditData() {
        let data = this.SelectedDataObat;
        this.FormAddObat.setValue({
            counter: data.counter,
            no_urut: data.no_urut,
            is_racikan: data.is_racikan,
            set_racikan_id: data.set_racikan_id,
            id_metode_racikan: data.id_metode_racikan,
            metode_racikan: data.metode_racikan,
            id_item: data.id_item,
            nama_obat: data.nama_obat,
            qty_resep: data.qty_resep,
            nama_satuan: data.nama_satuan,
            label: data.label,
            ket_label: data.ket_label,
            id_label_pemakaian_obat: data.id_label_pemakaian_obat,
            label_pemakaian_obat: data.label_pemakaian_obat,
            aturan: data.aturan,
            ket_aturan: data.ket_aturan,
            id_tambahan_aturan_pakai: data.id_tambahan_aturan_pakai,
            label_tambahan_aturan_pakai_obat: data.label_tambahan_aturan_pakai_obat,
            nama_racikan: data.nama_racikan,
            id_satuan_aturan_pakai: data.id_satuan_aturan_pakai,
            satuan_aturan_pakai: data.satuan_aturan_pakai,
        });
    }
    onActionComplete(args) {
        // let dataSourceParent: any = this.GridResepRacikan.dataSource;
        // this.resepDokterService.dataSourceParentGrid.next(dataSourceParent);
        // console.log("Parent", this.GridResepRacikan.dataSource);
        // console.log("Children", this.GridResepRacikan.childGrid.dataSource);
    }
    // ** Grid Daftar Obat method
    onRowSelected(args) {
        this.currentIndex = args.rowIndex;
        this.SelectedDataObat = args.data;
    }
    onResetGrid() {
        // this.GridResepRacikan.refresh();
        // this.resepDokterService.dataSourceChildGrid.next([]);
        // this.resepDokterService.dataSourceParentGrid.next([]);
        window.location.reload();
        // this.dataScourceGridChild = [];
        // this.dataSourceGrid.next([]);
        // this.ChildGrid.dataSource = [];
        // this.GridResepRacikan.refresh();
    }
    get is_racikan() { return this.FormAddObat.get('is_racikan'); }
    ;
    get set_racikan_id() { return this.FormAddObat.get('set_racikan_id'); }
    ;
    get id_metode_racikan() { return this.FormAddObat.get('id_metode_racikan'); }
    ;
    get metode_racikan() { return this.FormAddObat.get('metode_racikan'); }
    ;
    get id_item() { return this.FormAddObat.get('id_item'); }
    ;
    get nama_obat() { return this.FormAddObat.get('nama_obat'); }
    ;
    get qty_resep() { return this.FormAddObat.get('qty_resep'); }
    get nama_satuan() { return this.FormAddObat.get('nama_satuan'); }
    get label() { return this.FormAddObat.get('label'); }
    get ket_label() { return this.FormAddObat.get('ket_label'); }
    get id_label_pemakaian_obat() { return this.FormAddObat.get('id_label_pemakaian_obat'); }
    get label_pemakaian_obat() { return this.FormAddObat.get('label_pemakaian_obat'); }
    get aturan() { return this.FormAddObat.get('aturan'); }
    get ket_aturan() { return this.FormAddObat.get('ket_aturan'); }
    get id_tambahan_aturan_pakai() { return this.FormAddObat.get('id_tambahan_aturan_pakai'); }
    get label_tambahan_aturan_pakai_obat() { return this.FormAddObat.get('label_tambahan_aturan_pakai_obat'); }
    get nama_racikan() { return this.FormAddObat.get('nama_racikan'); }
    get satuan_aturan_pakai() { return this.FormAddObat.get('satuan_aturan_pakai'); }
    ;
}
InputResepComponent.ɵfac = function InputResepComponent_Factory(t) { return new (t || InputResepComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](_services_resep_dokter_resep_dokter_service__WEBPACK_IMPORTED_MODULE_6__.ResepDokterService), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_service__WEBPACK_IMPORTED_MODULE_7__.SetupLabelPemakaianObatService), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_tambahan_aturan_pakai_setup_tambahan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_8__.SetupTambahanAturanPakaiService), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_satuan_aturan_pakai_setup_satuan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_9__.SetupSatuanAturanPakaiService), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_metode_racikan_setup_metode_racikan_service__WEBPACK_IMPORTED_MODULE_10__.SetupMetodeRacikanService), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_11__.SetupOutletService), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_15__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_12__.DaftarPasienService)); };
InputResepComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdefineComponent"]({ type: InputResepComponent, selectors: [["app-input-resep"]], viewQuery: function InputResepComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵviewQuery"](_c1, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵviewQuery"](_c2, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵviewQuery"](_c3, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵloadQuery"]()) && (ctx.LookupRacikan = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵloadQuery"]()) && (ctx.LookupTemplateResep = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵloadQuery"]()) && (ctx.GridResepRacikan = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵloadQuery"]()) && (ctx.itemTemplate = _t.first);
    } }, outputs: { onSetTemplateResep: "onSetTemplateResep", setIdOutlet: "setIdOutlet" }, decls: 82, vars: 76, consts: [[3, "formGroup"], [1, "row"], [1, "col-sm-6"], [1, "card"], [1, "card-body", "p-2"], [1, "row", "mb-2"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "LabelCaption"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], ["id", "marital", 3, "dataSource", "fields", "allowFiltering", "change"], ["MaritalOutletDropdown", ""], [1, "row", "pt-2", "mb-2"], [1, "col-lg-1", "col-md-1", "col-sm-1", "col-xs-1"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], ["for", "DropdownObat", 1, "form-label"], ["type", "checkbox", "formControlName", "is_racikan", 1, "form-check-input"], ["class", "col-lg-4 col-md-4 col-sm-4 col-xs-4", 4, "ngIf"], ["class", "col-lg-3 col-md-3 col-sm-3 col-xs-3", 4, "ngIf"], ["class", "col-lg-2 col-md-2 col-sm-2 col-xs-2", 4, "ngIf"], [1, "col-lg-1", "col-md-1", "col-sm-1", "col-xs-1", "pe-1"], ["for", "NumericQty", 1, "form-label"], ["id", "NumericQty", "formControlName", "qty_resep", 3, "format", "min", "showSpinButton", "showClearButton", "ste"], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2", "pe-1"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "pe-1"], ["id", "DropdownLabelPemakaian", "formControlName", "label", "popupWidth", "30rem", 3, "allowFiltering", "dataSource", "fields", "change"], ["class", "col-lg-1 col-md-1 col-sm-1 col-xs-1 pe-1", 4, "ngIf"], ["id", "DropdownTambahanAturanPakai", "formControlName", "aturan", "popupWidth", "25rem", 3, "allowFiltering", "dataSource", "fields", "change"], [1, "col-lg-1", "col-md-1", "col-sm-1", "col-xs-1", "ps-4"], [1, "row", "align-content-center", "h-100", "mb-2"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "px-0", 3, "hidden"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", 3, "disabled", "click"], [1, "fas", "fa-plus-circle", "fa-sm"], [3, "hidden"], ["type", "button", 1, "btn", "btn-warning", "btn-sm", 3, "disabled", "click"], [1, "fas", "fa-edit", "fa-sm"], [3, "lookup-url", "columns", "columnsChild", "filter-lookup", "queryString", "modal-title", "onGetSelectedData"], ["LookupRacikan", ""], [3, "lookup-url", "columns", "columnsChild", "filter-lookup", "modal-title", "queryString", "onGetSelectedData"], ["LookupTemplateResep", ""], [1, "col-lg-12", "col-md-12", "col-xs-12", "col-sm-12"], [1, "card-body", "p-0"], ["height", "calc(100vh - 27rem)", "gridLines", "Both", "rowHeight", "30", 3, "dataSource", "childGrid", "toolbar", "allowResizing", "toolbarClick", "load", "rowDataBound", "dataBound", "rowSelected", "actionComplete"], ["GridResepRacikan", ""], ["field", "no_urut", "headerText", "no_urut", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "is_racikan", "headerText", "is_racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "set_racikan_id", "headerText", "set_racikan_id", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_metode_racikan", "headerText", "id_metode_racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_item", "headerText", "id_item", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_label_pemakaian_obat", "headerText", "id_label_pemakaian_obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_tambahan_aturan_pakai", "headerText", "id_tambahan_aturan_pakai", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_obat", "headerText", "Nama Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_satuan", "headerText", "Satuan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing", "width"], ["field", "metode_racikan", "headerText", "Racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing", "width"], ["field", "qty_resep", "headerText", "Qty", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing", "width"], ["field", "ket_label", "headerText", "Pemakaian", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "ket_aturan", "headerText", "Aturan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], [1, "col-lg-10", "col-md-10", "col-sm-10", "col-xs-10", "pe-0"], ["id", "DropdownObat", "formControlName", "id_item", "popupWidth", "55rem", 3, "allowFiltering", "dataSource", "fields", "placeholder", "query", "sortOrder", "filtering", "change"], ["Drop", ""], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2", "px-0"], ["id", "basic-addon1", 1, "input-group-text", "bg-primary", "text-white"], [1, "col-lg-3", "col-md-3", "col-sm-3", "col-xs-3"], [1, "input-group"], ["type", "text", "formControlName", "nama_racikan", 1, "form-control", "form-select-sm", 3, "change"], ["id", "btnInputGroup", "type", "button", 1, "btn", "btn-primary", 2, "padding", ".1rem .8rem", "background-color", "#00afff; border: 0", 3, "click"], [1, "fas", "fa-search"], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2"], ["formControlName", "id_metode_racikan", 3, "dataSource", "fields", "allowFiltering", "change"], ["MolDropdown", ""], ["id", "DropdownLabelPemakaian", "formControlName", "id_satuan_aturan_pakai", "popupWidth", "30rem", 3, "allowFiltering", "dataSource", "fields", "change"]], template: function InputResepComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "form", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](5, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](6, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](7, "atm-label", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](8, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](9, "ejs-dropdownlist", 9, 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("change", function InputResepComponent_Template_ejs_dropdownlist_change_9_listener($event) { return ctx.handleChangeOutlet($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpipe"](11, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](12, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](13, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](14, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](15, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](16, "label", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](17, "Racik");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](18, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](19, "input", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](20, InputResepComponent_div_20_Template, 13, 8, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](21, InputResepComponent_div_21_Template, 10, 0, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](22, InputResepComponent_div_22_Template, 10, 5, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](23, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](24, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](25, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](26, "label", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](27, "Qty");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](28, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](29, "ejs-numerictextbox", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](30, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](31, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](32, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](33, "label", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](34, "Label Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](35, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](36, "ejs-combobox", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("change", function InputResepComponent_Template_ejs_combobox_change_36_listener($event) { return ctx.handleChangeLabel($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](37, InputResepComponent_div_37_Template, 7, 3, "div", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](38, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](39, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](40, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](41, "label", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](42, "Aturan Tambahan");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](43, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](44, "ejs-combobox", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("change", function InputResepComponent_Template_ejs_combobox_change_44_listener($event) { return ctx.handleChangeAturan($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](45, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](46, "div", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](47, "div", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](48, "button", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("click", function InputResepComponent_Template_button_click_48_listener() { return ctx.handleAddObat(ctx.FormAddObat.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](49, "i", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](50, "span", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](51, "\u00A0Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](52, "div", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](53, "button", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("click", function InputResepComponent_Template_button_click_53_listener() { return ctx.onUpdateDataObat(ctx.FormAddObat.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](54, "i", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](55, "span", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](56, "\u00A0Edit");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](57, "org-look-up-hirarki", 35, 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onGetSelectedData", function InputResepComponent_Template_org_look_up_hirarki_onGetSelectedData_57_listener($event) { return ctx.heandleSelectedRacikan($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](59, "org-look-up-hirarki", 37, 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onGetSelectedData", function InputResepComponent_Template_org_look_up_hirarki_onGetSelectedData_59_listener($event) { return ctx.heandleSelectedTemplateResep($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](61, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](62, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](63, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](64, "div", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](65, "ejs-grid", 41, 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("toolbarClick", function InputResepComponent_Template_ejs_grid_toolbarClick_65_listener($event) { return ctx.onToolbarClick($event); })("load", function InputResepComponent_Template_ejs_grid_load_65_listener($event) { return ctx.onLoad($event); })("rowDataBound", function InputResepComponent_Template_ejs_grid_rowDataBound_65_listener($event) { return ctx.rowDataBound($event); })("dataBound", function InputResepComponent_Template_ejs_grid_dataBound_65_listener() { return ctx.onDataBound(); })("rowSelected", function InputResepComponent_Template_ejs_grid_rowSelected_65_listener($event) { return ctx.onRowSelected($event); })("actionComplete", function InputResepComponent_Template_ejs_grid_actionComplete_65_listener($event) { return ctx.onActionComplete($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpipe"](67, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](68, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](69, "e-column", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](70, "e-column", 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](71, "e-column", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](72, "e-column", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](73, "e-column", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](74, "e-column", 48);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](75, "e-column", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](76, "e-column", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](77, "e-column", 51);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](78, "e-column", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](79, "e-column", 53);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](80, "e-column", 54);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](81, "e-column", 55);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("formGroup", ctx.FormAddObat);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("LabelCaption", "Depo Farmasi");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpipeBind1"](11, 72, ctx.setupOutletService.dataSource))("fields", ctx.SetupOutletDropdownField)("allowFiltering", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](11);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", !ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("format", "N0")("min", 1)("showSpinButton", false)("showClearButton", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx.dataSourceLabelPemakaian)("fields", ctx.DropdownLabelFields);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", !ctx.is_racikan.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx.dataSourceTambahanAturanPakai)("fields", ctx.DropdownAturanFields);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵclassMap"](ctx.width >= 1023 && ctx.width <= 1200 ? "pt-1" : "pt-4");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("hidden", ctx.FormAddObatState != "input");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("disabled", ctx.FormAddObat.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("hidden", ctx.width >= 1023 && ctx.width <= 1200);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("hidden", ctx.FormAddObatState == "input");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("disabled", ctx.FormAddObat.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("hidden", ctx.width >= 1023 && ctx.width <= 1200);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("lookup-url", ctx.urlRacikan)("columns", ctx.GridLookUpItem.columns)("columnsChild", ctx.GridLookUpItem.columnsChild)("filter-lookup", ctx.GridLookUpItem.filter)("queryString", "set_racikan_id")("modal-title", "Data Racikan Dokter");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("lookup-url", ctx.urlTemplateResep)("columns", ctx.GridlookUpTemplateResep.columns)("columnsChild", ctx.GridlookUpTemplateResep.columnsChild)("filter-lookup", ctx.GridlookUpTemplateResep.filter)("modal-title", "Data Template Resep Dokter")("queryString", "resep_id");
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpipeBind1"](67, 74, ctx.dataSourceGrid))("childGrid", ctx.ChildGrid)("toolbar", ctx.GridDaftarObatToolbar)("allowResizing", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("visible", false)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("visible", true)("allowEditing", false)("width", 100);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("visible", true)("allowEditing", false)("width", 100);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 60);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("visible", true)("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("visible", true)("allowEditing", false);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_19__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_19__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroupDirective, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_13__.AtmLabelComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_20__.DropDownListComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.CheckboxControlValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_21__.NgIf, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_22__.NumericTextBoxComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_20__.ComboBoxComponent, _shared_components_organism_loockUp_org_look_up_hirarki_org_look_up_hirarki_component__WEBPACK_IMPORTED_MODULE_14__.OrgLookUpHirarkiComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_23__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_23__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_23__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_23__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_23__.AggregateColumnDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.DefaultValueAccessor], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_21__.AsyncPipe], styles: ["#basic-addon1[_ngcontent-%COMP%] {\r\n  height: 32px;\r\n  padding-left: 12px;\r\n  width: 100%;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  border: 0;\r\n}\r\n\r\n#DropdownObat[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%] {\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n}\r\n\r\n#NumericQty[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%]    > input[_ngcontent-%COMP%] {\r\n  text-align: right;\r\n  padding-right: 5px;\r\n}\r\n\r\ndiv.head[_ngcontent-%COMP%] {\r\n  font-size: 13px !important;\r\n  font-weight: 500 !important;\r\n}\r\n\r\n.is-racikan[_ngcontent-%COMP%] {\r\n  background-color: #f3e6f3;\r\n}\r\n\r\n.e-toolbar[_ngcontent-%COMP%]   .e-toolbar-item[_ngcontent-%COMP%]   .e-tbar-btn.e-btn[_ngcontent-%COMP%]   .e-icons.e-btn-icon[_ngcontent-%COMP%] {\r\n  min-height: 14px !important;\r\n}\r\n\r\nth.e-headercell[_ngcontent-%COMP%] {\r\n  background-color: rgba(0, 0, 0, 0.03);\r\n  color: black;\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  padding: 5px !important;\r\n  height: 30px !important;\r\n}\r\n\r\nspan.e-headertext[_ngcontent-%COMP%] {\r\n  font-size: 13px !important;\r\n}\r\n\r\ntd.e-rowcell[_ngcontent-%COMP%] {\r\n  padding: 5px !important;\r\n}\r\n\r\n.e-grid[_ngcontent-%COMP%]   .e-detailheadercell[_ngcontent-%COMP%], td.e-detailcell.e-lastrowcell[_ngcontent-%COMP%] {\r\n  background-color: var(--biru-muda) !important;\r\n}\r\n\r\ndiv.e-gridcontent[_ngcontent-%COMP%]   tr.e-detailrow[_ngcontent-%COMP%]   td.e-detailcell[_ngcontent-%COMP%]   div.e-headercontent[_ngcontent-%COMP%]   th.e-headercell[_ngcontent-%COMP%] {\r\n  background-color: var(--biru-muda) !important;\r\n}"] });


/***/ }),

/***/ 47977:
/*!*************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep/resep.component.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResepComponent": () => (/* binding */ ResepComponent)
/* harmony export */ });
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! moment */ 16738);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sweetalert2 */ 88259);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-bootstrap/modal */ 63301);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _services_resep_dokter_resep_dokter_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/resep-dokter/resep-dokter.service */ 67669);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 26966);
/* harmony import */ var src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/modules/shared/services/navigation.service */ 35908);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../shared/components/organism/tabs/org-tabs-component/org-tabs-component.component */ 23021);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../shared/components/organism/tabs/org-tabs-item-component/org-tabs-item-component.component */ 38499);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../shared/components/organism/tabs/org-tabs-label-component/org-tabs-label-component.component */ 9212);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../shared/components/organism/tabs/org-tabs-body-component/org-tabs-body-component.component */ 62751);
/* harmony import */ var _input_resep_input_resep_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./input-resep/input-resep.component */ 54911);
/* harmony import */ var _history_resep_history_resep_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./history-resep/history-resep.component */ 26237);

















const _c0 = ["inputResepComponent"];
const _c1 = ["modalTemplateResep"];
function ResepComponent_ng_template_14_Template(rf, ctx) { if (rf & 1) {
    const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "h5", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](2, "Simpan Template Resep Dokter");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](3, "button", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function ResepComponent_ng_template_14_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r5); const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r4.modalRef.hide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](4, "i", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](5, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](6, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](7, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](8, "h2");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](9, "Apakah Dokter Ingin Menyimapan Resep Ini Sebagai Template Resep?");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](10, "p");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](11, "Template resep di gunakan untuk membuat resep dengan data resep yg sudah ada");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](12, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](13, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](14, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](15, "label", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](16, "strong");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](17, "Nama Template Resep");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](18, "div", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](19, "input", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](20, "div", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](21, "button", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function ResepComponent_ng_template_14_Template_button_click_21_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r5); const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r6.handleClickSimpanTemplateResepDokter(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](22, "Simpan Template Resep");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](23, "button", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function ResepComponent_ng_template_14_Template_button_click_23_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r5); const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r7.handleClickAbaikan(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](24, "Tidak");
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
} }
class ResepComponent {
    constructor(resepDokterService, utilityService, navigationService, modalService, daftarPasienService, router) {
        this.resepDokterService = resepDokterService;
        this.utilityService = utilityService;
        this.navigationService = navigationService;
        this.modalService = modalService;
        this.daftarPasienService = daftarPasienService;
        this.router = router;
        this.ShowTitle = true;
        /**
        * Variable Button Nav
        * @ButtonNav: ButtonNavModel[]
        */
        this.ButtonNav = [
            { Id: "Template", Icons1: "fas fa-tags fa-sm", Captions: "Template Resep" },
            { Id: "Reset", Icons1: "fas fa-undo fa-sm", Captions: "Reset" },
            { Id: "Simpan", Icons1: "fas fa-save fa-sm", Captions: "Simpan" },
        ];
        this.Data = [];
        this.newdetail = [];
        this.baru = 0;
        this.data = null;
        this.nama_resep = '';
    }
    ngOnInit() {
        this.currentTanggal = moment__WEBPACK_IMPORTED_MODULE_0___default()().format();
        // console.log(this.daftarPasienService.ActivePasien.value);
        if ((this.router.url).includes('Dokter')) {
            this.ShowTitle = true;
        }
    }
    ngAfterViewInit() {
        setTimeout(() => {
            this.navigationService.ButtonSidebarMenuState.next(true);
        }, 1);
    }
    onClickButtonNav(args) {
        switch (args) {
            case "Template":
                this.inputResepComponent.handelClickTemplateResep();
                break;
            case "Reset":
                this.inputResepComponent.onResetGrid();
                this.isGetFromTemplate = false;
                break;
            case "Simpan":
                this.Insert();
                break;
            default:
                break;
        }
    }
    onGetSelectedTabId(args) {
        switch (args) {
            case "InputResep":
                this.ButtonNav = [
                    { Id: "Template", Icons1: "fas fa-tags fa-sm", Captions: "Template Resep" },
                    { Id: "Reset", Icons1: "fas fa-undo fa-sm", Captions: "Reset" },
                    { Id: "Simpan", Icons1: "fas fa-save fa-sm", Captions: "Simpan" },
                ];
                break;
            case "HistoryResep":
                this.ButtonNav = [];
                this.resepDokterService.setDataResep([]);
                break;
            default:
                break;
        }
    }
    onSetTemplateResep() {
        this.isGetFromTemplate = true;
    }
    setIdOutlet(id) {
        console.log(id);
        this.idOutlet = id;
    }
    Insert() {
        if (!this.idOutlet) {
            this.utilityService.onShowingCustomAlert('warning', 'Depo Farmasi belum di isi', '');
            return false;
        }
        this.data = {
            id_dokter: this.daftarPasienService.ActivePasien.value.id_dokter,
            id_register: this.daftarPasienService.ActivePasien.value.id_register,
            id_outlet: this.idOutlet,
            id_person: this.daftarPasienService.ActivePasien.value.id_person,
            jenis_rawat: 'J',
            nama_template: '',
            tanggal_resep: this.currentTanggal
        };
        this.newdetail = this.resepDokterService.dataSourceParentGrid.value.filter((item) => {
            return item.is_racikan && !item.set_racikan_id;
        });
        this.baru = 0;
        if (!this.isGetFromTemplate) {
            this.modalRef = this.modalService.show(this.modalTemplateResep, Object.assign({}, { class: 'modal-lg' }));
        }
        else {
            this.methodConfirmSetRacikan(0);
        }
    }
    handleClickSimpanTemplateResepDokter() {
        let nama_resep = document.getElementsByName("nama_resep")[0].value;
        this.data.nama_template = nama_resep;
        this.modalRef.hide();
        this.methodConfirmSetRacikan(1);
    }
    handleClickAbaikan() {
        this.modalRef.hide();
        this.methodConfirmSetRacikan(0);
    }
    methodConfirmSetRacikan(simpan_template) {
        if (this.newdetail.length > 0) {
            sweetalert2__WEBPACK_IMPORTED_MODULE_1___default().fire({
                title: 'Apakah Anda Ingin Menyimapan Racikan Baru ke dalam Setting Racikan dokter?',
                text: "Racikan akan bisa di gunakan lagi untuk template",
                icon: 'info',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Iya, Saya Yakin',
                cancelButtonText: 'Tidak',
                focusCancel: true,
            }).then((result) => {
                if (result.isConfirmed) {
                    this.baru = 1;
                }
                else {
                    this.baru = 0;
                }
                this.methodInsert(this.data, simpan_template, this.baru);
            });
        }
        else {
            this.methodInsert(this.data, simpan_template, 0);
        }
    }
    methodInsert(Data, is_simpan_template, is_simpan_racikan) {
        this.resepDokterService.Insert(Data, is_simpan_template, is_simpan_racikan).subscribe((result) => {
            this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                .then(() => {
                this.inputResepComponent.onResetGrid();
                // this.resepDokterService.reset();
                this.isGetFromTemplate = false;
                // this.reloadCurrentRoute();
            });
        });
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true })
            .then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    ngOnDestroy() {
        this.resepDokterService.reset();
    }
}
ResepComponent.ɵfac = function ResepComponent_Factory(t) { return new (t || ResepComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_services_resep_dokter_resep_dokter_service__WEBPACK_IMPORTED_MODULE_3__.ResepDokterService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_4__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_5__.NavigationService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_2__.BsModalService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_6__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.Router)); };
ResepComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdefineComponent"]({ type: ResepComponent, selectors: [["app-resep"]], viewQuery: function ResepComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c1, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.inputResepComponent = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.modalTemplateResep = _t.first);
    } }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵProvidersFeature"]([ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_2__.BsModalService])], decls: 16, vars: 4, consts: [[3, "ButtonNav", "ShowTitle", "onClickButtonNav"], [3, "onGetSelectedTabId"], ["OrgTabsRef", ""], [3, "Id"], [3, "setIdOutlet", "onSetTemplateResep"], ["inputResepComponent", ""], ["modalTemplateResep", ""], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body", "p-10"], [1, "row", "mx-0", "my-1"], [1, "col-lg-12", "col-md-12", "col-sm-12", 2, "text-align", "center"], [1, "col-lg-12", "col-md-12", "col-sm-12"], [1, "mb-2", "row"], [1, "col-sm-4"], ["for", "nama_resep"], [1, "col-sm-8"], ["type", "text", "name", "nama_resep", 1, "form-control", "form-control-sm"], [1, "modal-footer", "background-abu-muda"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], ["type", "button", 1, "btn", "btn-danger", 3, "click"]], template: function ResepComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "org-card-layout", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("onClickButtonNav", function ResepComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "org-tabs", 1, 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("onGetSelectedTabId", function ResepComponent_Template_org_tabs_onGetSelectedTabId_1_listener($event) { return ctx.onGetSelectedTabId($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](3, "org-tabs-item");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](4, "org-tabs-label", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](5, "Input Resep");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](6, "org-tabs-body");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](7, "app-input-resep", 4, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("setIdOutlet", function ResepComponent_Template_app_input_resep_setIdOutlet_7_listener($event) { return ctx.setIdOutlet($event); })("onSetTemplateResep", function ResepComponent_Template_app_input_resep_onSetTemplateResep_7_listener() { return ctx.onSetTemplateResep(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](9, "org-tabs-item");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](10, "org-tabs-label", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](11, "History Resep");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](12, "org-tabs-body");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](13, "app-history-resep");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplate"](14, ResepComponent_ng_template_14_Template, 25, 0, "ng-template", null, 6, _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplateRefExtractor"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav)("ShowTitle", ctx.ShowTitle);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("Id", "InputResep");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("Id", "HistoryResep");
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_7__.OrgCardLayoutComponent, _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_8__.OrgTabsComponentComponent, _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_9__.OrgTabsItemComponentComponent, _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_10__.OrgTabsLabelComponentComponent, _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_11__.OrgTabsBodyComponentComponent, _input_resep_input_resep_component__WEBPACK_IMPORTED_MODULE_12__.InputResepComponent, _history_resep_history_resep_component__WEBPACK_IMPORTED_MODULE_13__.HistoryResepComponent], styles: [""] });


/***/ }),

/***/ 23142:
/*!*********************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/surat-perintah-mondok/surat-perintah-mondok.component.ts ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SuratPerintahMondokComponent": () => (/* binding */ SuratPerintahMondokComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 26966);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _services_surat_perintah_mondok_surat_perintah_mondok_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/surat-perintah-mondok/surat-perintah-mondok.service */ 19077);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ 38583);









class SuratPerintahMondokComponent {
    constructor(router, formBuilder, utilityService, daftarPasienService, suratPerintahMondokService) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.utilityService = utilityService;
        this.daftarPasienService = daftarPasienService;
        this.suratPerintahMondokService = suratPerintahMondokService;
        this.ShowTitle = true;
        this.inputFieldState = "detail";
    }
    ngOnInit() {
        this.ButtonNav = [
            { Id: 'Clear', Captions: 'Clear', Icons1: 'fa-redo-alt fa-sm' },
            { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save fa-sm' },
        ];
        this.onSetFormAttributes();
        if ((this.router.url).includes('Dokter')) {
            this.ShowTitle = true;
        }
    }
    ngAfterViewInit() {
        this.id_register.setValue(this.daftarPasienService.ActivePasien.value.id_register);
        this.id_dokter_pemberi_perintah_mondok.setValue(this.daftarPasienService.ActivePasien.value.id_dokter);
    }
    handleClickButtonNav(ButtonId) {
        switch (ButtonId) {
            case 'Clear':
                this.onResetFormPerintahMondok();
                break;
            case 'SaveAndNew':
                this.onSubmitFormPerintahMondok(this.FormPerintahMondok.value);
                break;
            default:
                break;
        }
    }
    onSetFormAttributes() {
        this.FormPerintahMondok = this.formBuilder.group({
            id_register: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required]],
            id_dokter_pemberi_perintah_mondok: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.Validators.required]],
            keterangan_perintah_mondok: ["", []],
        });
    }
    onSubmitFormPerintahMondok(FormPerintahMondok) {
        this.suratPerintahMondokService.onPostSave(FormPerintahMondok)
            .subscribe((result) => {
            if (result) {
                this.utilityService.onShowingCustomAlert('success', 'Success', 'Surat Perintah Mondok Berhasil Disimpan')
                    .then(() => {
                    this.onResetFormPerintahMondok();
                });
            }
        });
    }
    onResetFormPerintahMondok() {
        this.keterangan_perintah_mondok.setValue("");
    }
    get id_register() { return this.FormPerintahMondok.get("id_register"); }
    get id_dokter_pemberi_perintah_mondok() { return this.FormPerintahMondok.get("id_dokter_pemberi_perintah_mondok"); }
    get keterangan_perintah_mondok() { return this.FormPerintahMondok.get("keterangan_perintah_mondok"); }
}
SuratPerintahMondokComponent.ɵfac = function SuratPerintahMondokComponent_Factory(t) { return new (t || SuratPerintahMondokComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_6__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_0__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_1__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_services_surat_perintah_mondok_surat_perintah_mondok_service__WEBPACK_IMPORTED_MODULE_2__.SuratPerintahMondokService)); };
SuratPerintahMondokComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({ type: SuratPerintahMondokComponent, selectors: [["app-surat-perintah-mondok"]], decls: 27, vars: 10, consts: [[3, "ButtonNav", "ShowTitle", "onClickButtonNav"], [3, "formGroup"], [1, "row", "mb-4", "pt-2", "align-items-center", "justify-content-center"], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2", "text-center", "px-0"], ["alt", "photo_pasien", 1, "shadow-sm", "rounded", 2, "height", "150px", 3, "src"], [1, "col-lg-5", "col-md-5", "col-sm-5", "col-xs-5", "px-0"], [1, "row"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "mb-1"], [1, "text-biru-tua", "mb-0", 2, "font-size", "2rem"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "mb-2"], [1, "text-biru-muda", "mb-0", 2, "font-size", "1rem"], [1, "text-hitam-muda", "mb-0", 2, "font-size", "1rem"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], [1, "row", "justify-content-center"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "px-0"], ["for", "keterangan_perintah_mondok", 1, "form-label"], ["id", "keterangan_perintah_mondok", "rows", "5", "formControlName", "keterangan_perintah_mondok", 1, "form-control"]], template: function SuratPerintahMondokComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "org-card-layout", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("onClickButtonNav", function SuratPerintahMondokComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.handleClickButtonNav($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "form", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](4, "img", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](5, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](6, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](7, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](8, "p", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](10, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](11, "p", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](12, " No. Rekam Medis ");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](13, "p", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](14);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](15, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](16, "p", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](17, " Tgl Admisi ");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](18, "p", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](19);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipe"](20, "date");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](21, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](22, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](23, "label", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](24, "Keterangan Perintah Mondok");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](25, "textarea", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](26, "                ");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav)("ShowTitle", ctx.ShowTitle);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("formGroup", ctx.FormPerintahMondok);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("src", ctx.daftarPasienService.ActivePasien.value.photo_url, _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵsanitizeUrl"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate1"](" ", ctx.daftarPasienService.ActivePasien.value.nama_pasien, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate1"](" ", ctx.daftarPasienService.ActivePasien.value.no_rekam_medis, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipeBind2"](20, 7, ctx.daftarPasienService.ActivePasien.value.tgl_admisi, "dd MMMM yyyy"), " ");
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__.OrgCardLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormGroupDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormControlName], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_7__.DatePipe], styles: [""] });


/***/ }),

/***/ 97577:
/*!***********************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/vital-sign/vital-sign.component.ts ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_vital_sign_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VitalSignComponent": () => (/* binding */ VitalSignComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/forms */ 3679);
/* harmony import */ var _json_vital_sign_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/vital-sign.config.json */ 9490);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 39895);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 26966);
/* harmony import */ var _services_vital_sign_vital_sign_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/vital-sign/vital-sign.service */ 16471);
/* harmony import */ var src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/navigation.service */ 35908);
/* harmony import */ var _services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../shared/components/organism/card/card-layout/card-layout.component */ 15380);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../shared/components/organism/tabs/org-tabs-component/org-tabs-component.component */ 23021);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../shared/components/organism/tabs/org-tabs-item-component/org-tabs-item-component.component */ 38499);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../shared/components/organism/tabs/org-tabs-label-component/org-tabs-label-component.component */ 9212);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../shared/components/organism/tabs/org-tabs-body-component/org-tabs-body-component.component */ 62751);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../shared/components/molecules/grid/grid/grid.component */ 88594);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../shared/components/atoms/form/atm-label/atm-label.component */ 49130);
/* harmony import */ var _shared_components_atoms_form_atm_validators_atm_validators_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../shared/components/atoms/form/atm-validators/atm-validators.component */ 77513);

















const _c0 = ["OrgTabsRef"];
const _c1 = function () { return []; };
class VitalSignComponent {
    constructor(router, formBuilder, utilityService, vitalSignService, navigationService, daftarPasienService) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.utilityService = utilityService;
        this.vitalSignService = vitalSignService;
        this.navigationService = navigationService;
        this.daftarPasienService = daftarPasienService;
        this.ShowTitle = true;
        /**
         * Variable untuk menentukan component input
         * @val normal,edit,detail
        */
        this.inputFieldState = 'normal';
        /**
         * Variable untuk menentukan tap berada di posisi mana
         * @value data | input
        */
        this.TabId = 'Data';
        this.Config = /*#__PURE__*/ (_json_vital_sign_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_vital_sign_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_vital_sign_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
        this.GridData = null;
        this.GridDataEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
        this.GridTextWrapSettings = { wrapMode: 'Header' };
        this.FormInputData = this.formBuilder.group({
            id_vital_sign: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
            tanggal_periksa: [new Date(), [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
            id_register: [this.daftarPasienService.ActivePasien.value.id_register, [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
            id_dokter: [this.daftarPasienService.ActivePasien.value.id_dokter, [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
            tinggi_badan_cm: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
            berat_badan_kg: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
            suhu_badan_celcius: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
            tekanan_darah_atas: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
            tekanan_darah_bawah: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
            saturasi_oksigen: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
            denyut_nadi_per_menit: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
            respirasi_nafas_per_menit: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
            keterangan: ["", [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
        });
    }
    ngOnInit() {
        this.GridDataToolbar = [
            { text: 'Add', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-sm', id: 'add' },
            { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
            { text: 'Detail', tooltipText: 'Detail', prefixIcon: 'fas fa-info-circle fa-sm', id: 'detail' },
            'Search'
        ];
        this.GetAllData();
        if ((this.router.url).includes('Dokter')) {
            this.ShowTitle = true;
        }
    }
    ngAfterViewInit() {
        setTimeout(() => {
            this.navigationService.ButtonSidebarMenuState.next(true);
        }, 1);
    }
    handleSelectedTabId(TabId) {
        this.TabId = TabId;
        if (TabId == 'Input') {
            // this.setNewForm();
        }
        else {
            this.GetAllData();
        }
    }
    InitalizedGrid(component) {
        this.GridData = component;
    }
    handleSelectedRow(args) {
        this.SelectedData = args.data;
    }
    handleActionComplete(event) {
        // console.log(event);
    }
    handleToolbarClick(args) {
        const item = args.item.id;
        switch (item) {
            case 'add':
                this.setNewForm();
                break;
            case 'edit':
                this.setEditForm();
                break;
            case 'detail':
                this.setViewForm();
                break;
            default:
                break;
        }
    }
    handleClickButtonNav(ButtonId) {
        switch (ButtonId) {
            case 'SaveAndNew':
                this.SaveAndNew();
                break;
            case 'Clear':
                this.Clear();
                break;
            case 'Cancel':
                this.Cancel();
                break;
            default:
                break;
        }
    }
    /** Method setting input new data */
    setNewForm() {
        this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
        this.inputFieldState = 'normal';
        this.FormInputData.reset();
        this.StatusFormNew = true;
        this.ButtonNav = [
            { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            { Id: 'Clear', Captions: 'Clear', Icons1: 'fa-redo-alt' },
            { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
        ];
    }
    ;
    /** Method setting edit data */
    setEditForm() {
        this.inputFieldState = 'edit';
        this.SetFrom(this.SelectedData);
        this.StatusFormNew = false;
        this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
        this.ButtonNav = [
            { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
        ];
    }
    ;
    /** Method setting lihat data detail */
    setViewForm() {
        this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
        this.inputFieldState = 'detail';
        this.SetFrom(this.SelectedData);
        this.ButtonNav = [
            { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
        ];
    }
    ResetFrom() {
        this.id_vital_sign.setValue(0);
        this.tanggal_periksa.setValue(new Date());
        this.tinggi_badan_cm.setValue(0);
        this.berat_badan_kg.setValue(0);
        this.suhu_badan_celcius.setValue(0);
        this.tekanan_darah_atas.setValue(0);
        this.tekanan_darah_bawah.setValue(0);
        this.saturasi_oksigen.setValue(0);
        this.denyut_nadi_per_menit.setValue(0);
        this.respirasi_nafas_per_menit.setValue(0);
        this.keterangan.setValue("");
    }
    /** Method Untuk Mereload Data Grid */
    GetAllData() {
        this.vitalSignService.onGetAllAlergi(this.daftarPasienService.ActivePasien.value.id_register)
            .subscribe((result) => {
            this.GridDatasource = result.data;
        });
    }
    /** Method Untuk Mengisikan data yang ada di form */
    SetFrom(Data) {
        delete Data.user_inputed;
        delete Data.time_inputed;
        this.FormInputData.setValue(Data);
    }
    /** Method menyimpan | menubah data */
    SaveAndNew() {
        const Data = this.FormInputData.value;
        Data.tanggal_periksa = new Date();
        if (this.inputFieldState == 'normal') {
            delete Data.id_vital_sign;
            Data.id_register = this.daftarPasienService.ActivePasien.value.id_register;
            Data.id_dokter = this.daftarPasienService.ActivePasien.value.id_dokter;
            this.vitalSignService.onPostSaveAlergi(Data)
                .subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                    .then(() => {
                    this.Cancel();
                });
            });
        }
        else {
            this.vitalSignService.onPutUpdateAlergi(Data)
                .subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Berhasil Ubah Data', result.message)
                    .then(() => {
                    this.Cancel();
                });
            });
        }
    }
    Clear() {
        this.ResetFrom();
    }
    Cancel() {
        this.ResetFrom();
        this.OrgTabsRef.onNavigateTabUsingTabId(0, 'Data');
        this.GetAllData();
    }
    get id_vital_sign() { return this.FormInputData.get('id_vital_sign'); }
    get tanggal_periksa() { return this.FormInputData.get('tanggal_periksa'); }
    get id_register() { return this.FormInputData.get('id_register'); }
    get id_dokter() { return this.FormInputData.get('id_dokter'); }
    get tinggi_badan_cm() { return this.FormInputData.get('tinggi_badan_cm'); }
    get berat_badan_kg() { return this.FormInputData.get('berat_badan_kg'); }
    get suhu_badan_celcius() { return this.FormInputData.get('suhu_badan_celcius'); }
    get tekanan_darah_atas() { return this.FormInputData.get('tekanan_darah_atas'); }
    get tekanan_darah_bawah() { return this.FormInputData.get('tekanan_darah_bawah'); }
    get saturasi_oksigen() { return this.FormInputData.get('saturasi_oksigen'); }
    get denyut_nadi_per_menit() { return this.FormInputData.get('denyut_nadi_per_menit'); }
    get respirasi_nafas_per_menit() { return this.FormInputData.get('respirasi_nafas_per_menit'); }
    get keterangan() { return this.FormInputData.get('keterangan'); }
}
VitalSignComponent.ɵfac = function VitalSignComponent_Factory(t) { return new (t || VitalSignComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_services_vital_sign_vital_sign_service__WEBPACK_IMPORTED_MODULE_2__.VitalSignService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_3__.NavigationService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_4__.DaftarPasienService)); };
VitalSignComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdefineComponent"]({ type: VitalSignComponent, selectors: [["app-vital-sign"]], viewQuery: function VitalSignComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c0, 7);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.OrgTabsRef = _t.first);
    } }, decls: 87, vars: 47, consts: [[3, "ButtonNav", "ShowTitle", "onClickButtonNav"], [3, "showHeader", "onGetSelectedTabId"], ["OrgTabsRef", ""], [3, "Id"], [3, "grid-height", "grid-DataSource", "grid-paging", "grid-editSettings", "grid-lines", "grid-toolbar", "columns", "textWrapSettings", "row-selected", "toolbar-click", "initialized", "action-complete"], ["GridData", ""], [1, "p-2", 3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "mb-2"], [1, "row", "mb-1"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "LabelCaption"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], [1, "input-group", "flex-nowrap", "px-0", "form-select-sm"], ["type", "number", "formControlName", "berat_badan_kg", 1, "form-control", "form-select-sm"], ["id", "addon-wrapping", 1, "input-group-text", "py-1", 2, "width", "3rem"], [3, "ValidatorsCaption", "IsFormControlInvalid", "IsFormControlTouched"], ["type", "number", "formControlName", "tinggi_badan_cm", 1, "form-control", "form-select-sm"], ["type", "number", "formControlName", "suhu_badan_celcius", 1, "form-control", "form-select-sm"], [1, "row", "align-items-center"], [1, "col-lg-5", "col-md-5", "col-sm-5", "col-xs-5", "pe-0"], ["type", "number", "formControlName", "tekanan_darah_bawah", 1, "form-control", "form-select-sm"], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2", "text-center", "px-0"], [1, "mb-0"], [1, "col-lg-5", "col-md-5", "col-sm-5", "col-xs-5", "ps-0"], ["type", "number", "formControlName", "tekanan_darah_atas", 1, "form-control", "form-select-sm"], ["type", "number", "formControlName", "saturasi_oksigen", 1, "form-control", "form-select-sm"], ["type", "number", "formControlName", "denyut_nadi_per_menit", 1, "form-control", "form-select-sm"], ["id", "addon-wrapping", 1, "input-group-text", "py-1"], ["type", "number", "formControlName", "respirasi_nafas_per_menit", 1, "form-control", "form-select-sm"], ["type", "text", "formControlName", "keterangan", 1, "form-control", "form-select-sm"]], template: function VitalSignComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "org-card-layout", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("onClickButtonNav", function VitalSignComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.handleClickButtonNav($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "org-tabs", 1, 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("onGetSelectedTabId", function VitalSignComponent_Template_org_tabs_onGetSelectedTabId_1_listener($event) { return ctx.handleSelectedTabId($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](3, "org-tabs-item");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](4, "org-tabs-label", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](5, "Data Vital Sign");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](6, "org-tabs-body");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](7, "mol-grid", 4, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("row-selected", function VitalSignComponent_Template_mol_grid_row_selected_7_listener($event) { return ctx.handleSelectedRow($event); })("toolbar-click", function VitalSignComponent_Template_mol_grid_toolbar_click_7_listener($event) { return ctx.handleToolbarClick($event); })("initialized", function VitalSignComponent_Template_mol_grid_initialized_7_listener($event) { return ctx.InitalizedGrid($event); })("action-complete", function VitalSignComponent_Template_mol_grid_action_complete_7_listener($event) { return ctx.handleActionComplete($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](9, "org-tabs-item");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](10, "org-tabs-label", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](11, "Input Vital Sign");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](12, "org-tabs-body");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](13, "form", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](14, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](15, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](16, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](17, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](18, "atm-label", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](19, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](20, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](21, "input", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](22, "span", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](23, " Kg ");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](24, "atm-validators", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](25, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](26, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](27, "atm-label", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](28, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](29, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](30, "input", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](31, "span", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](32, " Cm ");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](33, "atm-validators", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](34, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](35, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](36, "atm-label", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](37, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](38, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](39, "input", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](40, "span", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](41, " \u00B0C ");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](42, "atm-validators", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](43, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](44, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](45, "atm-label", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](46, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](47, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](48, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](49, "input", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](50, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](51, "p", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](52, "/");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](53, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](54, "input", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](55, "atm-validators", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](56, "atm-validators", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](57, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](58, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](59, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](60, "atm-label", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](61, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](62, "input", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](63, "atm-validators", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](64, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](65, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](66, "atm-label", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](67, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](68, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](69, "input", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](70, "span", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](71, "Per / Menit");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](72, "atm-validators", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](73, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](74, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](75, "atm-label", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](76, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](77, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](78, "input", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](79, "span", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](80, "Per / Menit");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](81, "atm-validators", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](82, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](83, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](84, "atm-label", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](85, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](86, "input", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ButtonNav", ctx.TabId == "Input" ? ctx.ButtonNav : _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpureFunction0"](46, _c1))("ShowTitle", ctx.ShowTitle);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("showHeader", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("Id", "Data");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("grid-height", ctx.ShowTitle ? "calc(100vh - 18rem)" : "100%")("grid-DataSource", ctx.GridDatasource)("grid-paging", false)("grid-editSettings", ctx.GridDataEditSettings)("grid-lines", "Both")("grid-toolbar", ctx.GridDataToolbar)("columns", ctx.Config.GridVitalSignColumns)("textWrapSettings", ctx.GridTextWrapSettings);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("Id", "Input");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("formGroup", ctx.FormInputData);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("LabelCaption", "Berat Badan");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ValidatorsCaption", "Berat Badan Tidak Boleh Kosong")("IsFormControlInvalid", ctx.berat_badan_kg.invalid)("IsFormControlTouched", ctx.berat_badan_kg.touched);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("LabelCaption", "Tinggi Badan");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ValidatorsCaption", "Tinggi Badan Tidak Boleh Kosong")("IsFormControlInvalid", ctx.tinggi_badan_cm.invalid)("IsFormControlTouched", ctx.tinggi_badan_cm.touched);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("LabelCaption", "Suhu Badan");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ValidatorsCaption", "Tinggi Badan Tidak Boleh Kosong")("IsFormControlInvalid", ctx.suhu_badan_celcius.invalid)("IsFormControlTouched", ctx.suhu_badan_celcius.touched);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("LabelCaption", "Tekanan Darah");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ValidatorsCaption", "Tekanan Darah Bawah Tidak Boleh Kosong")("IsFormControlInvalid", ctx.tekanan_darah_bawah.invalid)("IsFormControlTouched", ctx.tekanan_darah_bawah.touched);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ValidatorsCaption", "Tekanan Darah Atas Tidak Boleh Kosong")("IsFormControlInvalid", ctx.tekanan_darah_atas.invalid)("IsFormControlTouched", ctx.tekanan_darah_atas.touched);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("LabelCaption", "Saturasi Oksigen");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ValidatorsCaption", "Saturasi Oksigen Tidak Boleh Kosong")("IsFormControlInvalid", ctx.saturasi_oksigen.invalid)("IsFormControlTouched", ctx.saturasi_oksigen.touched);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("LabelCaption", "Denyut Nadi");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ValidatorsCaption", "Denyut Nadi Tidak Boleh Kosong")("IsFormControlInvalid", ctx.denyut_nadi_per_menit.invalid)("IsFormControlTouched", ctx.denyut_nadi_per_menit.touched);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("LabelCaption", "Respirasi Nafas");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ValidatorsCaption", "Respirasi Nafas Tidak Boleh Kosong")("IsFormControlInvalid", ctx.respirasi_nafas_per_menit.invalid)("IsFormControlTouched", ctx.respirasi_nafas_per_menit.touched);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("LabelCaption", "Keterangan");
    } }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_5__.OrgCardLayoutComponent, _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_6__.OrgTabsComponentComponent, _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_7__.OrgTabsItemComponentComponent, _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_8__.OrgTabsLabelComponentComponent, _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_9__.OrgTabsBodyComponentComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_10__.MolGridComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormGroupDirective, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_11__.AtmLabelComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NumberValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormControlName, _shared_components_atoms_form_atm_validators_atm_validators_component__WEBPACK_IMPORTED_MODULE_12__.AtmValidatorsComponent], styles: [""] });


/***/ }),

/***/ 37539:
/*!****************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/services/alergi/alergi.service.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AlergiService": () => (/* binding */ AlergiService)
/* harmony export */ });
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 5304);
/* harmony import */ var _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../api/DASHBOARD-DOKTER */ 51768);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 49086);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 24317);





class AlergiService {
    constructor(notificationService, httpOperationService) {
        this.notificationService = notificationService;
        this.httpOperationService = httpOperationService;
        this.API_CONFIG = _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__.API_DASHBOARD_DOKTER.ALERGI;
    }
    onGetAllAlergi(RegisterId) {
        return this.httpOperationService.defaultGetRequest(this.API_CONFIG.GET_ALL + RegisterId);
    }
    onPostSaveAlergi(Data) {
        return this.httpOperationService.defaultPostRequest(this.API_CONFIG.POST_SAVE, Data)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.catchError)((error) => {
            this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
        }));
    }
    onPutUpdateAlergi(Data) {
        return this.httpOperationService.defaultPutRequest(this.API_CONFIG.PUT_UPDATE, Data)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.catchError)((error) => {
            this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
        }));
    }
}
AlergiService.ɵfac = function AlergiService_Factory(t) { return new (t || AlergiService)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
AlergiService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"]({ token: AlergiService, factory: AlergiService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 4380:
/*!************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/services/bank-darah/bank-darah.service.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BankDarahService": () => (/* binding */ BankDarahService)
/* harmony export */ });
/* harmony import */ var _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../api/DASHBOARD-DOKTER */ 51768);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 5304);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 49086);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 24317);





class BankDarahService {
    constructor(notificationService, httpOperationService) {
        this.notificationService = notificationService;
        this.httpOperationService = httpOperationService;
        this.API_CONFIG = _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__.API_DASHBOARD_DOKTER.BANK_DARAH;
    }
    onPostSaveBankDarah(Data) {
        return this.httpOperationService.defaultPostRequest(this.API_CONFIG.POST_SAVE, Data)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.catchError)((error) => {
            this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
        }));
    }
}
BankDarahService.ɵfac = function BankDarahService_Factory(t) { return new (t || BankDarahService)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
BankDarahService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"]({ token: BankDarahService, factory: BankDarahService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 27410:
/*!*******************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/services/dashboard-dokter.service.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DashboardDokterService": () => (/* binding */ DashboardDokterService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 26215);
/* harmony import */ var _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../api/DASHBOARD-DOKTER */ 51768);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/operators */ 5304);
/* harmony import */ var src_environments_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/environments/environment */ 92340);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/services/navigation.service */ 35908);
/* harmony import */ var _shared_services_notification_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared/services/notification.service */ 49086);
/* harmony import */ var _daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var _shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared/services/http-operation.service */ 24317);









class DashboardDokterService {
    constructor(navigationService, notificationService, daftarPasienService, httpOperationService) {
        this.navigationService = navigationService;
        this.notificationService = notificationService;
        this.daftarPasienService = daftarPasienService;
        this.httpOperationService = httpOperationService;
        this.API_CONFIG = _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__;
        this.ShowInformasiPasien = new rxjs__WEBPACK_IMPORTED_MODULE_6__.BehaviorSubject(false);
        this.ShowInformasiPasien$ = this.ShowInformasiPasien.asObservable();
        this.JenisRawat = new rxjs__WEBPACK_IMPORTED_MODULE_6__.BehaviorSubject("");
        this.JenisRawat$ = this.JenisRawat.asObservable();
    }
    onSetSidebarMenuForDashboardDokter() {
        this.onSetJenisRawatForDashboardDokter();
        let urlResep = "";
        let urlformularium = "";
        switch (this.JenisRawat.value) {
            case 'IRJA':
                urlResep = 'Dokter/resep';
                urlformularium = "Dokter/resep-formularium-irja/input-resep-formularium-irja";
                break;
            case 'IRNA':
                urlResep = 'Dokter/resep-irna/daftar-resep-irna';
                urlformularium = "Dokter/resep-formularium-irna/daftar-resep-formularium-irna";
                break;
            case 'IRDA':
                urlResep = 'Dokter/resep-irda/daftar-resep-irda';
                urlformularium = "Dokter/resep-formularium-irda/daftar-resep-formularium-irda";
                break;
        }
        ;
        const sidebarMenu = [
            {
                button: [],
                caption: "Kembali",
                fieldgrid: [],
                icon: "fas fa-chevron-left",
                id_menu_sidebar: 0,
                id_menu_sidebar_parent: 0,
                id_top_menu: 0,
                is_parent: true,
                sidebarChild: [],
                url: "Dokter/daftar-pasien"
            },
            {
                button: [],
                caption: "Konsul",
                fieldgrid: [],
                icon: "fas fa-user-edit",
                id_menu_sidebar: 0,
                id_menu_sidebar_parent: 0,
                id_top_menu: 0,
                is_parent: true,
                sidebarChild: [],
                url: "Dokter/konsul"
            },
            {
                button: [],
                caption: "Diagnosa (Dx)",
                fieldgrid: [],
                icon: "fas fa-diagnoses",
                id_menu_sidebar: 0,
                id_menu_sidebar_parent: 0,
                id_top_menu: 0,
                is_parent: true,
                sidebarChild: [],
                url: "Dokter/diagnosa"
            },
            {
                button: [],
                caption: "Resep (Rx)",
                fieldgrid: [],
                icon: "fas fa-file-prescription",
                id_menu_sidebar: 0,
                id_menu_sidebar_parent: 0,
                id_top_menu: 0,
                is_parent: true,
                sidebarChild: [],
                url: (src_environments_environment__WEBPACK_IMPORTED_MODULE_1__.isFormularium) ? urlformularium : urlResep
            },
            {
                button: [],
                caption: "Radiologi",
                fieldgrid: [],
                icon: "fas fa-binoculars",
                id_menu_sidebar: 0,
                id_menu_sidebar_parent: 0,
                id_top_menu: 0,
                is_parent: true,
                sidebarChild: [],
                url: "Dokter/radiologi/riwayat-pemeriksaan"
            },
            {
                button: [],
                caption: "Laboratorium",
                fieldgrid: [],
                icon: "fas fa-flask",
                id_menu_sidebar: 0,
                id_menu_sidebar_parent: 0,
                id_top_menu: 0,
                is_parent: true,
                sidebarChild: [],
                url: "Dokter/laboratorium/riwayat-pemeriksaan"
            },
            {
                button: [],
                caption: "Alergi",
                fieldgrid: [],
                icon: "fas fa-allergies",
                id_menu_sidebar: 0,
                id_menu_sidebar_parent: 0,
                id_top_menu: 0,
                is_parent: true,
                sidebarChild: [],
                url: "Dokter/alergi"
            },
            {
                button: [],
                caption: "Vital Sign",
                fieldgrid: [],
                icon: "fas fa-file-medical",
                id_menu_sidebar: 0,
                id_menu_sidebar_parent: 0,
                id_top_menu: 0,
                is_parent: true,
                sidebarChild: [],
                url: "Dokter/vital-sign"
            },
            {
                button: [],
                caption: "Surat Perintah Mondok",
                fieldgrid: [],
                icon: "fas fa-file-medical",
                id_menu_sidebar: 0,
                id_menu_sidebar_parent: 0,
                id_top_menu: 0,
                is_parent: true,
                sidebarChild: [],
                url: "Dokter/surat-perintah-mondok"
            },
        ];
        localStorage.setItem('ActiveSidebarMenu', JSON.stringify(sidebarMenu));
        this.navigationService.onSetActiveSidebarMenuSubject(JSON.parse(localStorage.getItem('ActiveSidebarMenu')));
    }
    onSetSidebarMenuTitle() {
        this.navigationService.onSetMainMenuTitle('Dashboard Dokter');
    }
    onSetJenisRawatForDashboardDokter() {
        let ActivePasien = JSON.parse(localStorage.getItem("ActivePasien"));
        if (ActivePasien) {
            if (ActivePasien.jenis_rawat) {
                this.JenisRawat.next(ActivePasien.jenis_rawat);
            }
        }
        ;
    }
    onDestroySidebarMenuWhenNavigateToDaftarPasien() {
        localStorage.removeItem('ActiveSidebarMenu');
        this.navigationService.onSetActiveSidebarMenuSubject([]);
    }
    onPeriksaPasien() {
        return this.httpOperationService.defaultPutRequest(this.API_CONFIG.API_DASHBOARD_DOKTER.API_PERIKSA_PASIEN, {
            id_register: this.daftarPasienService.ActivePasien.value.id_register,
            id_poli: this.daftarPasienService.ActivePasien.value.id_poli
        }).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.catchError)((error) => {
            this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
        }));
    }
}
DashboardDokterService.ɵfac = function DashboardDokterService_Factory(t) { return new (t || DashboardDokterService)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_2__.NavigationService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_3__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_4__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_5__.HttpOperationService)); };
DashboardDokterService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineInjectable"]({ token: DashboardDokterService, factory: DashboardDokterService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 45918:
/*!********************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/services/diagnosa/diagnosa.service.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DiagnosaService": () => (/* binding */ DiagnosaService)
/* harmony export */ });
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 5304);
/* harmony import */ var _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../api/DASHBOARD-DOKTER */ 51768);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 49086);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 24317);






class DiagnosaService {
    constructor(daftarPasienService, notificationService, httpOperationService) {
        this.daftarPasienService = daftarPasienService;
        this.notificationService = notificationService;
        this.httpOperationService = httpOperationService;
        this.API_CONFIG = _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__.API_DASHBOARD_DOKTER.DIAGNOSA;
    }
    handleGetAllDiagnosa() {
        let id_register = this.daftarPasienService.ActivePasien.value.id_register;
        return this.httpOperationService.defaultGetRequest(this.API_CONFIG.GET_ALL_BY_ID_REGISTER + id_register);
    }
    handlePostSaveDiagnosa(Data) {
        return this.httpOperationService.defaultPostRequest(this.API_CONFIG.POST_SAVE, Data)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
            this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
        }));
    }
}
DiagnosaService.ɵfac = function DiagnosaService_Factory(t) { return new (t || DiagnosaService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_1__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_2__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_3__.HttpOperationService)); };
DiagnosaService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: DiagnosaService, factory: DiagnosaService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 29970:
/*!****************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/services/konsul/konsul.service.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "KonsulService": () => (/* binding */ KonsulService)
/* harmony export */ });
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 5304);
/* harmony import */ var _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../api/DASHBOARD-DOKTER */ 51768);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 49086);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 24317);





class KonsulService {
    constructor(notificationService, httpOperationService) {
        this.notificationService = notificationService;
        this.httpOperationService = httpOperationService;
        this.API_CONFIG = _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__.API_DASHBOARD_DOKTER.KONSUL;
    }
    onGetAllRiwayatKonsul(DokterId) {
        return this.httpOperationService.defaultGetRequest(this.API_CONFIG.GET_RIWAYAT_KONSUL_BY_ID_DOKTER + DokterId);
    }
    onPostSaveKonsulRawatJalan(Data) {
        return this.httpOperationService.defaultPostRequest(this.API_CONFIG.POST_KONSUL_PASIEN_IRJA, Data)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.catchError)((error) => {
            this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
        }));
    }
}
KonsulService.ɵfac = function KonsulService_Factory(t) { return new (t || KonsulService)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
KonsulService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"]({ token: KonsulService, factory: KonsulService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 55976:
/*!****************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/services/laboratorium/laboratorium.service.ts ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LaboratoriumService": () => (/* binding */ LaboratoriumService)
/* harmony export */ });
/* harmony import */ var _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../api/DASHBOARD-DOKTER */ 51768);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 5304);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 49086);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 24317);





class LaboratoriumService {
    constructor(notificationService, httpOperationService) {
        this.notificationService = notificationService;
        this.httpOperationService = httpOperationService;
        this.API_CONFIG = _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__.API_DASHBOARD_DOKTER.LABORATORIUM;
    }
    onGetAllOrderPenunjang() {
        return this.httpOperationService.defaultGetRequest(this.API_CONFIG.GET_ALL_DATA_PENUNJANG);
    }
    onPostSaveOrderPenunjang(Data) {
        return this.httpOperationService.defaultPostRequest(this.API_CONFIG.POST_SAVE_ORDER_LAB, Data)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.catchError)((error) => {
            this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
        }));
    }
    onGetRiwayatOrderLab(RegisterId) {
        return this.httpOperationService.defaultGetRequest(this.API_CONFIG.GET_RIWAYAT_ORDER_LAB + RegisterId);
    }
    onGetDetailRiwayatOrderLab(OrderPenunjangId) {
        return this.httpOperationService.defaultGetRequest(this.API_CONFIG.GET_DETAIL_RIWAYAT_ORDER_LAB + OrderPenunjangId);
    }
}
LaboratoriumService.ɵfac = function LaboratoriumService_Factory(t) { return new (t || LaboratoriumService)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
LaboratoriumService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"]({ token: LaboratoriumService, factory: LaboratoriumService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 11749:
/*!**********************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/services/radiologi/radiologi.service.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RadiologiService": () => (/* binding */ RadiologiService)
/* harmony export */ });
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 5304);
/* harmony import */ var _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../api/DASHBOARD-DOKTER */ 51768);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 49086);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 24317);





class RadiologiService {
    constructor(notificationService, httpOperationService) {
        this.notificationService = notificationService;
        this.httpOperationService = httpOperationService;
        this.API_CONFIG = _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__.API_DASHBOARD_DOKTER.RADIOLOGI;
    }
    onGetAllOrderPenunjang() {
        return this.httpOperationService.defaultGetRequest(this.API_CONFIG.GET_ALL_DATA_PENUNJANG);
    }
    onGetTarifRadiologiDetail(Data) {
        return this.httpOperationService.defaultPostRequestWithoutLoading(this.API_CONFIG.POST_GET_TARIF_RAD, Data);
    }
    onPostSaveOrderPenunjang(Data) {
        return this.httpOperationService.defaultPostRequest(this.API_CONFIG.POST_SAVE_ORDER_RAD, Data)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.catchError)((error) => {
            this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
        }));
    }
    onGetRiwayatOrderLab(RegisterId) {
        return this.httpOperationService.defaultGetRequest(this.API_CONFIG.GET_RIWAYAT_ORDER_RAD + RegisterId);
    }
    onGetDetailRiwayatOrderLab(OrderPenunjangId) {
        return this.httpOperationService.defaultGetRequest(this.API_CONFIG.GET_DETAIL_RIWAYAT_ORDER_RAD + OrderPenunjangId);
    }
}
RadiologiService.ɵfac = function RadiologiService_Factory(t) { return new (t || RadiologiService)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
RadiologiService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"]({ token: RadiologiService, factory: RadiologiService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 19077:
/*!**********************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/services/surat-perintah-mondok/surat-perintah-mondok.service.ts ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SuratPerintahMondokService": () => (/* binding */ SuratPerintahMondokService)
/* harmony export */ });
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 5304);
/* harmony import */ var _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../api/DASHBOARD-DOKTER */ 51768);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var _daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../daftar-pasien/daftar-pasien.service */ 53786);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 49086);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 24317);






class SuratPerintahMondokService {
    constructor(daftarPasienService, notificationService, httpOperationService) {
        this.daftarPasienService = daftarPasienService;
        this.notificationService = notificationService;
        this.httpOperationService = httpOperationService;
        this.API_CONFIG = _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__.API_DASHBOARD_DOKTER.SURAT_PERINTAH_MONDOK;
    }
    onGetAll() {
        return this.httpOperationService.defaultGetRequest(this.API_CONFIG.GET_ALL);
    }
    onPostSave(Data) {
        return this.httpOperationService.defaultPostRequest(this.API_CONFIG.POST_SAVE, Data)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
            this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
        }));
    }
    onPutUpdate(Data) {
        return this.httpOperationService.defaultPutRequest(this.API_CONFIG.PUT_UPDATE, Data)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
            this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
        }));
    }
    onDelete(SuratPerintahMondokId) {
        return this.httpOperationService.defaultDeleteRequest(this.API_CONFIG.DELETE + SuratPerintahMondokId)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
            this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
        }));
    }
}
SuratPerintahMondokService.ɵfac = function SuratPerintahMondokService_Factory(t) { return new (t || SuratPerintahMondokService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_1__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_2__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_3__.HttpOperationService)); };
SuratPerintahMondokService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: SuratPerintahMondokService, factory: SuratPerintahMondokService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 16471:
/*!************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/services/vital-sign/vital-sign.service.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VitalSignService": () => (/* binding */ VitalSignService)
/* harmony export */ });
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 5304);
/* harmony import */ var _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../api/DASHBOARD-DOKTER */ 51768);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 37716);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 49086);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 24317);





class VitalSignService {
    constructor(notificationService, httpOperationService) {
        this.notificationService = notificationService;
        this.httpOperationService = httpOperationService;
        this.API_CONFIG = _api_DASHBOARD_DOKTER__WEBPACK_IMPORTED_MODULE_0__.API_DASHBOARD_DOKTER.VITAL_SIGN;
    }
    onGetAllAlergi(RegisterId) {
        return this.httpOperationService.defaultGetRequest(this.API_CONFIG.GET_ALL + RegisterId);
    }
    onPostSaveAlergi(Data) {
        return this.httpOperationService.defaultPostRequest(this.API_CONFIG.POST_SAVE, Data)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.catchError)((error) => {
            this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
        }));
    }
    onPutUpdateAlergi(Data) {
        return this.httpOperationService.defaultPutRequest(this.API_CONFIG.PUT_UPDATE, Data)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.catchError)((error) => {
            this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
        }));
    }
}
VitalSignService.ɵfac = function VitalSignService_Factory(t) { return new (t || VitalSignService)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
VitalSignService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"]({ token: VitalSignService, factory: VitalSignService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 77676:
/*!*******************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/alergi/json/alergi.config.json ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridAlergiColumns":[{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"alergi","headerText":"ALERGI","visible":true,"width":120},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"tanggal_mulai_alergi","headerText":"TGL. MULAI ALERGI","visible":true,"type":"DateTime","format":"dd/MM/yyyy","width":120}]}');

/***/ }),

/***/ 61891:
/*!***************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/bank-darah/json/bank-darah.config.json ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridBankDarahColumns":[{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"id_mapping_tarif_penunjang","headerText":"ID MAPPING TARIF PENUNJANG","visible":false,"width":100},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"kode_setup_tarif","headerText":"KODE ","visible":true,"width":150},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"nama_tindakan_penunjang","headerText":"ORDER TINDAKAN","visible":true,"width":200},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"qty_order","headerText":"QTY","visible":true,"format":"N2","textAlign":"Right","headerTextAlign":"Right","width":100},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"keterangan_order","headerText":"KETERANGAN ORDER","visible":false,"width":100}],"LookupDiagnosa":{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"kode_icd","headerText":"KODE ICD","type":"string","visible":true,"width":100},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_icd","headerText":"NAMA ICD","type":"string","visible":true,"width":300}],"filter":[{"field":" si1.kode_icd","filter":"like","title":"KODE ICD"},{"field":"si1.nama_icd","filter":"like","title":"NAMA ICD"}]},"LookupDokter":{"columns":[{"allowEditing":true,"allowSorting":true,"displayAsCheckBox":true,"editType":"booleanEdit","field":"cek","headerText":"CEK","visible":false,"width":150},{"allowEditing":true,"allowSorting":true,"editType":"numericEdit","field":"id_person","format":"N2","headerText":"PERSON ID","type":"number","visible":false,"width":150},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"kode_dokter","headerText":"KODE DOKTER","type":"string","visible":true,"width":90},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"full_name","headerText":"NAMA DOKTER","type":"string","visible":true,"width":200},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"spesialisasi_dokter","headerText":"SPESIALISASI","type":"string","visible":true,"width":110}],"filter":[{"field":"d.kode_dokter","filter":"like","title":"KODE DOKTER"},{"field":"concat(p.nama_depan, \' \',p.nama_belakang)","filter":"like","title":"NAMA DOKTER"}]},"LookupTarif":{"columns":[{"width":50,"type":"Checkbox","field":"Checkbox","headerTextAlign":"Center","textAlign":"Center"},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"id_setup_tarif","headerText":"ID","type":"string","visible":false},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"kode_setup_tarif","headerText":"KODE SETUP TARIF","type":"string","visible":true,"width":100},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"nama_setup_tarif","headerText":"NAMA SETUP TARIF","type":"string","visible":true,"width":150},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"nama_grup_tarif","headerText":"NAMA GRUP TARIF","type":"string","visible":false,"width":150},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"nominal_tarif","headerText":"NOMINAL TARIF","headerTextAlign":"Right","textAlign":"Right","format":"N2","type":"number","visible":false,"width":100}],"filter":[{"field":"st.kode_setup_tarif","filter":"like","title":"KODE TARIF"},{"field":"st.nama_setup_tarif","filter":"like","title":"NAMA TARIF"}]}}');

/***/ }),

/***/ 32247:
/*!**************************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/daftar-pasien-per-dokter/json/GridPasienPerDokter.config.json ***!
  \**************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridDaftarPasienIRNA":[{"allowEditing":true,"allowSorting":true,"editType":"numericEdit","field":"id_person","format":"N","headerText":"ID","type":"number","visible":false,"width":50},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"jam_masuk","format":"dd/MM/yyyy","type":"Date","headerText":"TGL MASUK","visible":true,"width":120},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"no_rekam_medis","headerText":"NO. RM","visible":true,"width":80},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"no_reg","headerText":"NO. RM","visible":true,"width":80},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"nama_pasien","headerText":"NAMA PASIEN","visible":true,"width":150},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"gender","headerText":"GENDER","visible":true,"width":80},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"nama_poli","headerText":"POLIKLINIK","visible":true,"width":150},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"room_no","headerText":"NO. ROOM","visible":true,"width":90},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"bed_no","headerText":"NO. BED","visible":true,"width":90}],"GridDaftarPasienIRDA":[{"allowEditing":true,"allowSorting":true,"editType":"numericEdit","field":"id_person","format":"N","headerText":"ID","type":"number","visible":false,"width":50},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"tgl_masuk","format":"dd/MM/yyyy","type":"Date","headerText":"TGL MASUK","visible":true,"width":120},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"no_rekam_medis","headerText":"NO. RM","visible":true,"width":80},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"no_re","headerText":"NO. RM","visible":true,"width":80},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"full_name","headerText":"NAMA PASIEN","visible":true,"width":150},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"gender","headerText":"GENDER","visible":true,"width":80},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"jenis_ruangan","headerText":"RUANGAN","visible":true,"width":150},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"nomor_bed","headerText":"NO. BED","visible":true,"width":90}],"GridDaftarPasienIRJA":[{"allowEditing":true,"allowSorting":true,"editType":"numericEdit","field":"id_person","format":"N","headerText":"ID","type":"number","visible":false,"width":50},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"tgl_masuk","format":"dd/MM/yyyy","type":"Date","headerText":"TGL MASUK","visible":true,"width":120},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"no_rekam_medis","headerText":"NO. RM","visible":true,"width":80},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"no_register","headerText":"NO. REG","visible":true,"width":80},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"full_name","headerText":"NAMA PASIEN","visible":true,"width":150},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"gender","headerText":"GENDER","visible":true,"width":80}]}');

/***/ }),

/***/ 74026:
/*!***********************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/diagnosa/json/diagnosa.config.json ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"LookupDiagnosa":{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"kode_icd","headerText":"KODE ICD","type":"string","visible":true,"width":100},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_icd","headerText":"NAMA ICD","type":"string","visible":true,"width":300}],"filter":[{"field":" si1.kode_icd","filter":"like","title":"KODE ICD"},{"field":"si1.nama_icd","filter":"like","title":"NAMA ICD"}]}}');

/***/ }),

/***/ 97676:
/*!*******************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/konsul/json/konsul.config.json ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridDaftarOrder":{"columns":[{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"jam_masuk","headerText":"JAM MASUK","visible":true,"width":80},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"kode_poli","headerText":"KODE POLI","visible":true,"width":100},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"nama_poli","headerText":"Poli / Ruang","visible":true,"width":150},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"nama_dokter","headerText":"Dokter Pemeriksa","type":"string","visible":true,"width":150},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"jam_periksa","headerText":"JAM PERIKSA","type":"DateTime","format":"HH:mm:ss","visible":true,"width":80},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"status","headerText":"STATUS","type":"string","visible":true,"width":100}]},"LookupDokter":{"columns":[{"allowEditing":true,"allowSorting":true,"displayAsCheckBox":true,"editType":"booleanEdit","field":"cek","headerText":"CEK","visible":false,"width":150},{"allowEditing":true,"allowSorting":true,"editType":"numericEdit","field":"id_person","format":"N2","headerText":"PERSON ID","type":"number","visible":false,"width":150},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"kode_dokter","headerText":"KODE DOKTER","type":"string","visible":true,"width":90},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"full_name","headerText":"NAMA DOKTER","type":"string","visible":true,"width":200},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"spesialisasi_dokter","headerText":"SPESIALISASI","type":"string","visible":true,"width":110},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_hari","headerText":"HARI PRAKTEK","type":"string","visible":true,"width":90},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"jam_mulai","headerText":"JAM MULAI","textAlign":"Right","type":"string","visible":true,"width":90},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"kuota","headerText":"KUOTA","textAlign":"Right","type":"string","visible":true,"width":80},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"sisa_kuota","headerText":"SISA KUOTA","textAlign":"Right","type":"string","visible":true,"width":80}],"filter":[{"field":"d.kode_dokter","filter":"like","title":"KODE DOKTER"},{"field":"concat(p.nama_depan, \' \',p.nama_belakang)","filter":"like","title":"NAMA DOKTER"}]}}');

/***/ }),

/***/ 41021:
/*!****************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/laboratorium/json/GridLaboratorium.json ***!
  \****************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridDaftarOrder":{"columns":[{"allowEditing":false,"allowSorting":false,"editType":"numericEdit","field":"no_urut","headerText":"No","type":"string","visible":false,"width":50},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"tanggal_order_penunjang","headerText":"Tgl Order","type":"Date","format":"dd MMMM yyyy","visible":true,"width":100},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"tgl_hasil","headerText":"Tgl Hasil","type":"Date","format":"dd MMMM yyyy","visible":true,"width":100},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"nama_poli","headerText":"Poli / Ruang","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"nama_dokter","headerText":"Dokter Pemeriksa","type":"string","visible":true,"width":150},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"nama_icd","headerText":"Diagnosa","type":"string","visible":true,"width":200},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"keterangan_sample","headerText":"Catatan Sample","type":"string","visible":true,"width":100}]},"GridDetailOrder":{"columns":[{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"id_mapping_tarif_penunjang","headerText":"ID MAPPING TARIF PENUNJANG","visible":false,"width":100},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"id_order_penunjang","headerText":"ID ORDER PENUNJANG","visible":false,"width":100},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"id_order_penunjang_detail","headerText":"ID ORDER PENUNJANG DETAIL","visible":false,"width":100},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"kode_setup_tarif","headerText":"Kode","visible":true,"width":100},{"allowEditing":false,"allowSorting":false,"editType":"numericEdit","field":"nama_tindakan_penunjang","headerText":"Nama Pemeriksaan","type":"string","visible":true,"width":200},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"status","headerText":"Status","type":"string","visible":true,"width":100}]}}');

/***/ }),

/***/ 95816:
/*!**************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/laboratorium/json/InputOrderBaru.json ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"LookupDiagnosa":{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"kode_icd","headerText":"KODE ICD","type":"string","visible":true,"width":100},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_icd","headerText":"NAMA ICD","type":"string","visible":true,"width":300}],"filter":[{"field":" si1.kode_icd","filter":"like","title":"KODE ICD"},{"field":"si1.nama_icd","filter":"like","title":"NAMA ICD"}]}}');

/***/ }),

/***/ 57088:
/*!**********************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/radiologi/json/GridRadiologi.json ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridDaftarOrder":{"columns":[{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"tanggal_order_penunjang","headerText":"Tgl Order","type":"Date","format":"dd MMMM yyyy","visible":true,"width":150},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"tgl_hasil","headerText":"Tgl Hasil","type":"Date","format":"dd MMMM yyyy","visible":true,"width":150},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"nama_poli","headerText":"Poli / Ruang","visible":true,"width":150},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"nama_dokter","headerText":"Dokter Pemeriksa","type":"string","visible":true,"width":150},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"nama_icd","headerText":"Diagnosa","type":"string","visible":true,"width":150},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"keterangan_sample","headerText":"Catatan Sample","type":"string","visible":true,"width":150}]},"GridDetailOrder":{"columns":[{"allowEditing":false,"allowSorting":false,"editType":"numericEdit","field":"nama_tindakan_penunjang","headerText":"Nama Pemeriksaan","type":"string","visible":true,"width":200},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"rad_posisi","headerText":"Posisi","visible":true,"width":100},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"rad_pk","headerText":"Polos / Kontras","visible":true,"width":100},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"tgl_hasil","headerText":"Tgl Hasil","type":"Date","format":"dd MMMM yyyy","visible":true,"width":150},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"status","headerText":"Status","type":"string","visible":true,"width":100}]}}');

/***/ }),

/***/ 20863:
/*!***********************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/radiologi/json/InputOrderBaru.json ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"LookupDiagnosa":{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"kode_icd","headerText":"KODE ICD","type":"string","visible":true,"width":100},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_icd","headerText":"NAMA ICD","type":"string","visible":true,"width":300}],"filter":[{"field":" si1.kode_icd","filter":"like","title":"KODE ICD"},{"field":"si1.nama_icd","filter":"like","title":"NAMA ICD"}]}}');

/***/ }),

/***/ 57432:
/*!***************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irda/daftar-resep-irda/json/grid.config.json ***!
  \***************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"field":"id_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nomor_resep","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"id_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"id_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"qty_racikan","headerText":"Qty","width":100}]}');

/***/ }),

/***/ 77328:
/*!************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irda/input-resep-irda/json/GridResep.json ***!
  \************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridInputResep":{"columns":[{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"rx","headerText":"Rx","type":"string","visible":true,"width":30},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"no_urut","headerText":"No","visible":true,"width":30},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"kode_resep","headerText":"Kode Resep","visible":false,"width":50},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"nama_obat","headerText":"Nama Obat","visible":true,"width":150},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"satuan","headerText":"Satuan","visible":true,"width":70},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"qty_obat","headerText":"Qty","format":"N","textAlign":"Right","visible":true,"width":70},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"aturan_pakai","headerText":"Jumlah Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"keterangan_pakai","headerText":"Aturan Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"waktu_pakai","headerText":"Waktu Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"catatan","headerText":"Catatan","type":"string","visible":true,"width":100}]},"GridHistoryResep":{"columns":[],"dataSource":[]}}');

/***/ }),

/***/ 1461:
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irda/input-resep-irda/json/lookupitem.json ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"set_racikan_id","headerText":"Id","type":"string","visible":false},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_obat","headerText":"Nama Racikan","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"qty_resep","headerText":"Qty","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"ket_label","headerText":"Label","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"ket_aturan","headerText":"Tambahan Aturan","type":"string","visible":true}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"kandungan_obat","headerText":"Kandungan"},{"field":"nama_satuan","headerText":"Satuan"},{"field":"qty_racikan","headerText":"Qty"}],"filter":[{"field":"nama_racikan","filter":"like","title":"Nama Racikan"}]}');

/***/ }),

/***/ 69779:
/*!**********************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irda/input-resep-irda/json/lookuptemplateresep.json ***!
  \**********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"set_racikan_id","headerText":"Id","type":"string","visible":false},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_template","headerText":"Nama Template Resep","type":"string","visible":true}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"qty_resep","headerText":"Qty"}],"filter":[{"field":"nama_racikan","filter":"like","title":"Nama Racikan"}]}');

/***/ }),

/***/ 36725:
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irda/pulang-resep-irda/json/GridResep.json ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridInputResep":{"columns":[{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"rx","headerText":"Rx","type":"string","visible":true,"width":30},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"no_urut","headerText":"No","visible":true,"width":30},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"kode_resep","headerText":"Kode Resep","visible":false,"width":50},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"nama_obat","headerText":"Nama Obat","visible":true,"width":150},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"satuan","headerText":"Satuan","visible":true,"width":70},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"qty_obat","headerText":"Qty","format":"N","textAlign":"Right","visible":true,"width":70},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"aturan_pakai","headerText":"Jumlah Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"keterangan_pakai","headerText":"Aturan Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"waktu_pakai","headerText":"Waktu Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"catatan","headerText":"Catatan","type":"string","visible":true,"width":100}]},"GridHistoryResep":{"columns":[],"dataSource":[]}}');

/***/ }),

/***/ 19801:
/*!**************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irda/pulang-resep-irda/json/lookupitem.json ***!
  \**************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"set_racikan_id","headerText":"Id","type":"string","visible":false},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_obat","headerText":"Nama Racikan","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"qty_resep","headerText":"Qty","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"ket_label","headerText":"Label","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"ket_aturan","headerText":"Tambahan Aturan","type":"string","visible":true}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"kandungan_obat","headerText":"Kandungan"},{"field":"nama_satuan","headerText":"Satuan"},{"field":"qty_racikan","headerText":"Qty"}],"filter":[{"field":"nama_racikan","filter":"like","title":"Nama Racikan"}]}');

/***/ }),

/***/ 76071:
/*!***********************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irda/pulang-resep-irda/json/lookuptemplateresep.json ***!
  \***********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"set_racikan_id","headerText":"Id","type":"string","visible":false},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_template","headerText":"Nama Template Resep","type":"string","visible":true}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"qty_resep","headerText":"Qty"}],"filter":[{"field":"nama_racikan","filter":"like","title":"Nama Racikan"}]}');

/***/ }),

/***/ 9432:
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irda/view-resep-irda/json/grid.config.json ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"field":"id_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nomor_resep","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"id_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"id_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"qty_racikan","headerText":"Qty","width":50}]}');

/***/ }),

/***/ 40221:
/*!***************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irna/daftar-resep-irna/json/grid.config.json ***!
  \***************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"field":"id_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nomor_resep","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"id_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"id_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"qty_racikan","headerText":"Qty","width":100}]}');

/***/ }),

/***/ 80749:
/*!************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irna/input-resep-irna/json/GridResep.json ***!
  \************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridInputResep":{"columns":[{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"rx","headerText":"Rx","type":"string","visible":true,"width":30},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"no_urut","headerText":"No","visible":true,"width":30},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"kode_resep","headerText":"Kode Resep","visible":false,"width":50},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"nama_obat","headerText":"Nama Obat","visible":true,"width":150},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"satuan","headerText":"Satuan","visible":true,"width":70},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"qty_obat","headerText":"Qty","format":"N","textAlign":"Right","visible":true,"width":70},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"aturan_pakai","headerText":"Jumlah Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"keterangan_pakai","headerText":"Aturan Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"waktu_pakai","headerText":"Waktu Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"catatan","headerText":"Catatan","type":"string","visible":true,"width":100}]},"GridHistoryResep":{"columns":[],"dataSource":[]}}');

/***/ }),

/***/ 88135:
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irna/input-resep-irna/json/lookupitem.json ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"set_racikan_id","headerText":"Id","type":"string","visible":false},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_obat","headerText":"Nama Racikan","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"qty_resep","headerText":"Qty","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"ket_label","headerText":"Label","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"ket_aturan","headerText":"Tambahan Aturan","type":"string","visible":true}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"kandungan_obat","headerText":"Kandungan"},{"field":"nama_satuan","headerText":"Satuan"},{"field":"qty_racikan","headerText":"Qty"}],"filter":[{"field":"nama_racikan","filter":"like","title":"Nama Racikan"}]}');

/***/ }),

/***/ 57181:
/*!**********************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irna/input-resep-irna/json/lookuptemplateresep.json ***!
  \**********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"set_racikan_id","headerText":"Id","type":"string","visible":false},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_template","headerText":"Nama Template Resep","type":"string","visible":true}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"qty_resep","headerText":"Qty"}],"filter":[{"field":"nama_racikan","filter":"like","title":"Nama Racikan"}]}');

/***/ }),

/***/ 96237:
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irna/pulang-resep-irna/json/GridResep.json ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridInputResep":{"columns":[{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"rx","headerText":"Rx","type":"string","visible":true,"width":30},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"no_urut","headerText":"No","visible":true,"width":30},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"kode_resep","headerText":"Kode Resep","visible":false,"width":50},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"nama_obat","headerText":"Nama Obat","visible":true,"width":150},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"satuan","headerText":"Satuan","visible":true,"width":70},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"qty_obat","headerText":"Qty","format":"N","textAlign":"Right","visible":true,"width":70},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"aturan_pakai","headerText":"Jumlah Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"keterangan_pakai","headerText":"Aturan Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"waktu_pakai","headerText":"Waktu Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"catatan","headerText":"Catatan","type":"string","visible":true,"width":100}]},"GridHistoryResep":{"columns":[],"dataSource":[]}}');

/***/ }),

/***/ 29625:
/*!**************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irna/pulang-resep-irna/json/lookupitem.json ***!
  \**************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"set_racikan_id","headerText":"Id","type":"string","visible":false},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_obat","headerText":"Nama Racikan","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"qty_resep","headerText":"Qty","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"ket_label","headerText":"Label","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"ket_aturan","headerText":"Tambahan Aturan","type":"string","visible":true}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"kandungan_obat","headerText":"Kandungan"},{"field":"nama_satuan","headerText":"Satuan"},{"field":"qty_racikan","headerText":"Qty"}],"filter":[{"field":"nama_racikan","filter":"like","title":"Nama Racikan"}]}');

/***/ }),

/***/ 36508:
/*!***********************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irna/pulang-resep-irna/json/lookuptemplateresep.json ***!
  \***********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"set_racikan_id","headerText":"Id","type":"string","visible":false},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_template","headerText":"Nama Template Resep","type":"string","visible":true}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"qty_resep","headerText":"Qty"}],"filter":[{"field":"nama_racikan","filter":"like","title":"Nama Racikan"}]}');

/***/ }),

/***/ 90860:
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep-irna/view-resep-irna/json/grid.config.json ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"field":"id_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nomor_resep","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"id_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"id_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"qty_racikan","headerText":"Qty","width":100}]}');

/***/ }),

/***/ 89210:
/*!***********************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep/history-resep/json/grid.json ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"set_racikan_id","headerText":"Id","type":"string","visible":false},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_obat","headerText":"Nama Racikan","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"qty_resep","headerText":"Qty","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"ket_label","headerText":"Label","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"ket_aturan","headerText":"Tambahan Aturan","type":"string","visible":true}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"kandungan_obat","headerText":"Kandungan"},{"field":"nama_satuan","headerText":"Satuan"},{"field":"qty_racikan","headerText":"Qty"}],"filter":[{"field":"nama_racikan","filter":"like","title":"Nama Racikan"}]}');

/***/ }),

/***/ 26767:
/*!***************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep/input-resep/json/lookupitem.json ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"set_racikan_id","headerText":"Id","type":"string","visible":false},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_obat","headerText":"Nama Racikan","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"qty_resep","headerText":"Qty","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"ket_label","headerText":"Label","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"ket_aturan","headerText":"Tambahan Aturan","type":"string","visible":true}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"kandungan_obat","headerText":"Kandungan"},{"field":"nama_satuan","headerText":"Satuan"},{"field":"qty_racikan","headerText":"Qty"}],"filter":[{"field":"nama_racikan","filter":"like","title":"Nama Racikan"}]}');

/***/ }),

/***/ 515:
/*!************************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep/input-resep/json/lookuptemplateresep.json ***!
  \************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"set_racikan_id","headerText":"Id","type":"string","visible":false},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_template","headerText":"Nama Template Resep","type":"string","visible":true}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"qty_resep","headerText":"Qty"}],"filter":[{"field":"nama_template","filter":"like","title":"Nama Template Resep"}]}');

/***/ }),

/***/ 79288:
/*!**************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/resep/json/GridResep.json ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridInputResep":{"columns":[{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"rx","headerText":"Rx","type":"string","visible":true,"width":30},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"no_urut","headerText":"No","visible":true,"width":30},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"kode_resep","headerText":"Kode Resep","visible":false,"width":50},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"nama_obat","headerText":"Nama Obat","visible":true,"width":150},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"satuan","headerText":"Satuan","visible":true,"width":70},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"qty_obat","headerText":"Qty","format":"N","textAlign":"Right","visible":true,"width":70},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"aturan_pakai","headerText":"Jumlah Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"keterangan_pakai","headerText":"Aturan Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"waktu_pakai","headerText":"Waktu Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"catatan","headerText":"Catatan","type":"string","visible":true,"width":100}]},"GridHistoryResep":{"columns":[],"dataSource":[]}}');

/***/ }),

/***/ 9490:
/*!***************************************************************************************!*\
  !*** ./src/app/modules/dashboard-dokter/pages/vital-sign/json/vital-sign.config.json ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridVitalSignColumns":[{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"tanggal_periksa","headerText":"TGL. PERIKSA","visible":true,"type":"DateTime","format":"dd/MM/yyyy","width":120},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"tinggi_badan_cm","headerText":"TINGGI BADAN (cm)","visible":true,"textAlign":"Right","headerTextAlign":"Right","width":100},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"berat_badan_kg","headerText":"BERAT BADAN (kg)","visible":true,"textAlign":"Right","headerTextAlign":"Right","width":100},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"suhu_badan_celcius","headerText":"SUHU BADAN (C)","visible":true,"textAlign":"Right","headerTextAlign":"Right","width":100},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"tekanan_darah_atas","headerText":"TEKANAN DARAH ATAS","visible":true,"textAlign":"Right","headerTextAlign":"Right","width":100},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"tekanan_darah_atas","headerText":"TEKANAN DARAH BAWAH","visible":true,"textAlign":"Right","headerTextAlign":"Right","width":100},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"saturasi_oksigen","headerText":"SATURASI OKSIGEN","visible":true,"textAlign":"Right","headerTextAlign":"Right","width":100},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"denyut_nadi_per_menit","headerText":"DENYUT NADI / Menit","visible":true,"textAlign":"Right","headerTextAlign":"Right","width":100},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"respirasi_nafas_per_menit","headerText":"RESPIRASI NAFAS / Menit","visible":true,"textAlign":"Right","headerTextAlign":"Right","width":100}]}');

/***/ })

}]);