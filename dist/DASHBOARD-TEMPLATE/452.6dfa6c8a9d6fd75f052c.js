(self["webpackChunkdashboard_template"] = self["webpackChunkdashboard_template"] || []).push([[452],{

/***/ 15147:
/*!*******************************************************************!*\
  !*** ./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

/*
 * base64-arraybuffer
 * https://github.com/niklasvh/base64-arraybuffer
 *
 * Copyright (c) 2012 Niklas von Hertzen
 * Licensed under the MIT license.
 */
(function(chars){
  "use strict";

  exports.encode = function(arraybuffer) {
    var bytes = new Uint8Array(arraybuffer),
    i, len = bytes.length, base64 = "";

    for (i = 0; i < len; i+=3) {
      base64 += chars[bytes[i] >> 2];
      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];
      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];
      base64 += chars[bytes[i + 2] & 63];
    }

    if ((len % 3) === 2) {
      base64 = base64.substring(0, base64.length - 1) + "=";
    } else if (len % 3 === 1) {
      base64 = base64.substring(0, base64.length - 2) + "==";
    }

    return base64;
  };

  exports.decode =  function(base64) {
    var bufferLength = base64.length * 0.75,
    len = base64.length, i, p = 0,
    encoded1, encoded2, encoded3, encoded4;

    if (base64[base64.length - 1] === "=") {
      bufferLength--;
      if (base64[base64.length - 2] === "=") {
        bufferLength--;
      }
    }

    var arraybuffer = new ArrayBuffer(bufferLength),
    bytes = new Uint8Array(arraybuffer);

    for (i = 0; i < len; i+=4) {
      encoded1 = chars.indexOf(base64[i]);
      encoded2 = chars.indexOf(base64[i+1]);
      encoded3 = chars.indexOf(base64[i+2]);
      encoded4 = chars.indexOf(base64[i+3]);

      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);
      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);
      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);
    }

    return arraybuffer;
  };
})("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");


/***/ }),

/***/ 46184:
/*!*************************************************!*\
  !*** ./node_modules/component-emitter/index.js ***!
  \*************************************************/
/***/ ((module) => {


/**
 * Expose `Emitter`.
 */

if (true) {
  module.exports = Emitter;
}

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
};

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  function on() {
    this.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks['$' + event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks['$' + event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }

  // Remove event specific arrays for event types that no
  // one is subscribed for to avoid memory leak.
  if (callbacks.length === 0) {
    delete this._callbacks['$' + event];
  }

  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};

  var args = new Array(arguments.length - 1)
    , callbacks = this._callbacks['$' + event];

  for (var i = 1; i < arguments.length; i++) {
    args[i - 1] = arguments[i];
  }

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks['$' + event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};


/***/ }),

/***/ 87807:
/*!*******************************************!*\
  !*** ./node_modules/debug/src/browser.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */

exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
exports.destroy = (() => {
	let warned = false;

	return () => {
		if (!warned) {
			warned = true;
			console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
		}
	};
})();

/**
 * Colors.
 */

exports.colors = [
	'#0000CC',
	'#0000FF',
	'#0033CC',
	'#0033FF',
	'#0066CC',
	'#0066FF',
	'#0099CC',
	'#0099FF',
	'#00CC00',
	'#00CC33',
	'#00CC66',
	'#00CC99',
	'#00CCCC',
	'#00CCFF',
	'#3300CC',
	'#3300FF',
	'#3333CC',
	'#3333FF',
	'#3366CC',
	'#3366FF',
	'#3399CC',
	'#3399FF',
	'#33CC00',
	'#33CC33',
	'#33CC66',
	'#33CC99',
	'#33CCCC',
	'#33CCFF',
	'#6600CC',
	'#6600FF',
	'#6633CC',
	'#6633FF',
	'#66CC00',
	'#66CC33',
	'#9900CC',
	'#9900FF',
	'#9933CC',
	'#9933FF',
	'#99CC00',
	'#99CC33',
	'#CC0000',
	'#CC0033',
	'#CC0066',
	'#CC0099',
	'#CC00CC',
	'#CC00FF',
	'#CC3300',
	'#CC3333',
	'#CC3366',
	'#CC3399',
	'#CC33CC',
	'#CC33FF',
	'#CC6600',
	'#CC6633',
	'#CC9900',
	'#CC9933',
	'#CCCC00',
	'#CCCC33',
	'#FF0000',
	'#FF0033',
	'#FF0066',
	'#FF0099',
	'#FF00CC',
	'#FF00FF',
	'#FF3300',
	'#FF3333',
	'#FF3366',
	'#FF3399',
	'#FF33CC',
	'#FF33FF',
	'#FF6600',
	'#FF6633',
	'#FF9900',
	'#FF9933',
	'#FFCC00',
	'#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

// eslint-disable-next-line complexity
function useColors() {
	// NB: In an Electron preload script, document will be defined but not fully
	// initialized. Since we know we're in Chrome, we'll just detect this case
	// explicitly
	if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
		return true;
	}

	// Internet Explorer and Edge do not support colors.
	if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
		return false;
	}

	// Is webkit? http://stackoverflow.com/a/16459606/376773
	// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
		// Is firebug? http://stackoverflow.com/a/398120/376773
		(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
		// Is firefox >= v31?
		// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
		// Double check webkit in userAgent just in case we are in a worker
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	args[0] = (this.useColors ? '%c' : '') +
		this.namespace +
		(this.useColors ? ' %c' : ' ') +
		args[0] +
		(this.useColors ? '%c ' : ' ') +
		'+' + module.exports.humanize(this.diff);

	if (!this.useColors) {
		return;
	}

	const c = 'color: ' + this.color;
	args.splice(1, 0, c, 'color: inherit');

	// The final "%c" is somewhat tricky, because there could be other
	// arguments passed either before or after the %c, so we need to
	// figure out the correct index to insert the CSS into
	let index = 0;
	let lastC = 0;
	args[0].replace(/%[a-zA-Z%]/g, match => {
		if (match === '%%') {
			return;
		}
		index++;
		if (match === '%c') {
			// We only are interested in the *last* %c
			// (the user may have provided their own)
			lastC = index;
		}
	});

	args.splice(lastC, 0, c);
}

/**
 * Invokes `console.debug()` when available.
 * No-op when `console.debug` is not a "function".
 * If `console.debug` is not available, falls back
 * to `console.log`.
 *
 * @api public
 */
exports.log = console.debug || console.log || (() => {});

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	try {
		if (namespaces) {
			exports.storage.setItem('debug', namespaces);
		} else {
			exports.storage.removeItem('debug');
		}
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */
function load() {
	let r;
	try {
		r = exports.storage.getItem('debug');
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}

	// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	if (!r && typeof process !== 'undefined' && 'env' in process) {
		r = process.env.DEBUG;
	}

	return r;
}

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
	try {
		// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
		// The Browser also has localStorage in the global context.
		return localStorage;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

module.exports = __webpack_require__(/*! ./common */ 10333)(exports);

const {formatters} = module.exports;

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
	try {
		return JSON.stringify(v);
	} catch (error) {
		return '[UnexpectedJSONParseError]: ' + error.message;
	}
};


/***/ }),

/***/ 10333:
/*!******************************************!*\
  !*** ./node_modules/debug/src/common.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */

function setup(env) {
	createDebug.debug = createDebug;
	createDebug.default = createDebug;
	createDebug.coerce = coerce;
	createDebug.disable = disable;
	createDebug.enable = enable;
	createDebug.enabled = enabled;
	createDebug.humanize = __webpack_require__(/*! ms */ 72691);
	createDebug.destroy = destroy;

	Object.keys(env).forEach(key => {
		createDebug[key] = env[key];
	});

	/**
	* The currently active debug mode names, and names to skip.
	*/

	createDebug.names = [];
	createDebug.skips = [];

	/**
	* Map of special "%n" handling functions, for the debug "format" argument.
	*
	* Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	*/
	createDebug.formatters = {};

	/**
	* Selects a color for a debug namespace
	* @param {String} namespace The namespace string for the for the debug instance to be colored
	* @return {Number|String} An ANSI color code for the given namespace
	* @api private
	*/
	function selectColor(namespace) {
		let hash = 0;

		for (let i = 0; i < namespace.length; i++) {
			hash = ((hash << 5) - hash) + namespace.charCodeAt(i);
			hash |= 0; // Convert to 32bit integer
		}

		return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
	}
	createDebug.selectColor = selectColor;

	/**
	* Create a debugger with the given `namespace`.
	*
	* @param {String} namespace
	* @return {Function}
	* @api public
	*/
	function createDebug(namespace) {
		let prevTime;
		let enableOverride = null;

		function debug(...args) {
			// Disabled?
			if (!debug.enabled) {
				return;
			}

			const self = debug;

			// Set `diff` timestamp
			const curr = Number(new Date());
			const ms = curr - (prevTime || curr);
			self.diff = ms;
			self.prev = prevTime;
			self.curr = curr;
			prevTime = curr;

			args[0] = createDebug.coerce(args[0]);

			if (typeof args[0] !== 'string') {
				// Anything else let's inspect with %O
				args.unshift('%O');
			}

			// Apply any `formatters` transformations
			let index = 0;
			args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
				// If we encounter an escaped % then don't increase the array index
				if (match === '%%') {
					return '%';
				}
				index++;
				const formatter = createDebug.formatters[format];
				if (typeof formatter === 'function') {
					const val = args[index];
					match = formatter.call(self, val);

					// Now we need to remove `args[index]` since it's inlined in the `format`
					args.splice(index, 1);
					index--;
				}
				return match;
			});

			// Apply env-specific formatting (colors, etc.)
			createDebug.formatArgs.call(self, args);

			const logFn = self.log || createDebug.log;
			logFn.apply(self, args);
		}

		debug.namespace = namespace;
		debug.useColors = createDebug.useColors();
		debug.color = createDebug.selectColor(namespace);
		debug.extend = extend;
		debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.

		Object.defineProperty(debug, 'enabled', {
			enumerable: true,
			configurable: false,
			get: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,
			set: v => {
				enableOverride = v;
			}
		});

		// Env-specific initialization logic for debug instances
		if (typeof createDebug.init === 'function') {
			createDebug.init(debug);
		}

		return debug;
	}

	function extend(namespace, delimiter) {
		const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
		newDebug.log = this.log;
		return newDebug;
	}

	/**
	* Enables a debug mode by namespaces. This can include modes
	* separated by a colon and wildcards.
	*
	* @param {String} namespaces
	* @api public
	*/
	function enable(namespaces) {
		createDebug.save(namespaces);

		createDebug.names = [];
		createDebug.skips = [];

		let i;
		const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
		const len = split.length;

		for (i = 0; i < len; i++) {
			if (!split[i]) {
				// ignore empty strings
				continue;
			}

			namespaces = split[i].replace(/\*/g, '.*?');

			if (namespaces[0] === '-') {
				createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
			} else {
				createDebug.names.push(new RegExp('^' + namespaces + '$'));
			}
		}
	}

	/**
	* Disable debug output.
	*
	* @return {String} namespaces
	* @api public
	*/
	function disable() {
		const namespaces = [
			...createDebug.names.map(toNamespace),
			...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)
		].join(',');
		createDebug.enable('');
		return namespaces;
	}

	/**
	* Returns true if the given mode name is enabled, false otherwise.
	*
	* @param {String} name
	* @return {Boolean}
	* @api public
	*/
	function enabled(name) {
		if (name[name.length - 1] === '*') {
			return true;
		}

		let i;
		let len;

		for (i = 0, len = createDebug.skips.length; i < len; i++) {
			if (createDebug.skips[i].test(name)) {
				return false;
			}
		}

		for (i = 0, len = createDebug.names.length; i < len; i++) {
			if (createDebug.names[i].test(name)) {
				return true;
			}
		}

		return false;
	}

	/**
	* Convert regexp to namespace
	*
	* @param {RegExp} regxep
	* @return {String} namespace
	* @api private
	*/
	function toNamespace(regexp) {
		return regexp.toString()
			.substring(2, regexp.toString().length - 2)
			.replace(/\.\*\?$/, '*');
	}

	/**
	* Coerce `val`.
	*
	* @param {Mixed} val
	* @return {Mixed}
	* @api private
	*/
	function coerce(val) {
		if (val instanceof Error) {
			return val.stack || val.message;
		}
		return val;
	}

	/**
	* XXX DO NOT USE. This is a temporary stub function.
	* XXX It WILL be removed in the next major release.
	*/
	function destroy() {
		console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
	}

	createDebug.enable(createDebug.load());

	return createDebug;
}

module.exports = setup;


/***/ }),

/***/ 72691:
/*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
/***/ ((module) => {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var w = d * 7;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isFinite(val)) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'weeks':
    case 'week':
    case 'w':
      return n * w;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (msAbs >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (msAbs >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (msAbs >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return plural(ms, msAbs, d, 'day');
  }
  if (msAbs >= h) {
    return plural(ms, msAbs, h, 'hour');
  }
  if (msAbs >= m) {
    return plural(ms, msAbs, m, 'minute');
  }
  if (msAbs >= s) {
    return plural(ms, msAbs, s, 'second');
  }
  return ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, msAbs, n, name) {
  var isPlural = msAbs >= n * 1.5;
  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
}


/***/ }),

/***/ 36212:
/*!***************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/__ivy_ngcc__/fesm2015/ngx-socket-io.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Socket": () => (/* binding */ WrappedSocket),
/* harmony export */   "SocketIoModule": () => (/* binding */ SocketIoModule),
/* harmony export */   "ɵa": () => (/* binding */ SocketFactory),
/* harmony export */   "ɵb": () => (/* binding */ SOCKET_CONFIG_TOKEN)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 20164);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ 90619);
/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! socket.io-client */ 90777);






class WrappedSocket {
    constructor(config) {
        this.config = config;
        this.subscribersCounter = {};
        this.eventObservables$ = {};
        this.emptyConfig = {
            url: '',
            options: {}
        };
        if (config === undefined) {
            config = this.emptyConfig;
        }
        const url = config.url;
        const options = config.options;
        const ioFunc = socket_io_client__WEBPACK_IMPORTED_MODULE_0__.default ? socket_io_client__WEBPACK_IMPORTED_MODULE_0__.default : socket_io_client__WEBPACK_IMPORTED_MODULE_0__;
        this.ioSocket = ioFunc(url, options);
    }
    of(namespace) {
        this.ioSocket.of(namespace);
    }
    on(eventName, callback) {
        this.ioSocket.on(eventName, callback);
    }
    once(eventName, callback) {
        this.ioSocket.once(eventName, callback);
    }
    connect() {
        return this.ioSocket.connect();
    }
    disconnect(close) {
        return this.ioSocket.disconnect.apply(this.ioSocket, arguments);
    }
    emit(eventName, ...args) {
        return this.ioSocket.emit.apply(this.ioSocket, arguments);
    }
    removeListener(eventName, callback) {
        return this.ioSocket.removeListener.apply(this.ioSocket, arguments);
    }
    removeAllListeners(eventName) {
        return this.ioSocket.removeAllListeners.apply(this.ioSocket, arguments);
    }
    fromEvent(eventName) {
        if (!this.subscribersCounter[eventName]) {
            this.subscribersCounter[eventName] = 0;
        }
        this.subscribersCounter[eventName]++;
        if (!this.eventObservables$[eventName]) {
            this.eventObservables$[eventName] = new rxjs__WEBPACK_IMPORTED_MODULE_1__.Observable((observer) => {
                const listener = (data) => {
                    observer.next(data);
                };
                this.ioSocket.on(eventName, listener);
                return () => {
                    this.subscribersCounter[eventName]--;
                    if (this.subscribersCounter[eventName] === 0) {
                        this.ioSocket.removeListener(eventName, listener);
                        delete this.eventObservables$[eventName];
                    }
                };
            }).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.share)());
        }
        return this.eventObservables$[eventName];
    }
    fromOneTimeEvent(eventName) {
        return new Promise(resolve => this.once(eventName, resolve));
    }
}
/** Socket factory */
function SocketFactory(config) {
    return new WrappedSocket(config);
}
const SOCKET_CONFIG_TOKEN = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.InjectionToken('__SOCKET_IO_CONFIG__');
let SocketIoModule = /*@__PURE__*/ (() => {
    class SocketIoModule {
        static forRoot(config) {
            return {
                ngModule: SocketIoModule,
                providers: [
                    { provide: SOCKET_CONFIG_TOKEN, useValue: config },
                    {
                        provide: WrappedSocket,
                        useFactory: SocketFactory,
                        deps: [SOCKET_CONFIG_TOKEN]
                    }
                ]
            };
        }
    }
    SocketIoModule.ɵfac = function SocketIoModule_Factory(t) { return new (t || SocketIoModule)(); };
    SocketIoModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineNgModule"]({ type: SocketIoModule });
    SocketIoModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjector"]({});
    return SocketIoModule;
})();
/**
 * Generated bundle index. Do not edit.
 */

//# sourceMappingURL=ngx-socket-io.js.map


/***/ }),

/***/ 42447:
/*!********************************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/engine.io-client/lib/globalThis.browser.js ***!
  \********************************************************************************************/
/***/ ((module) => {

module.exports = (() => {
  if (typeof self !== "undefined") {
    return self;
  } else if (typeof window !== "undefined") {
    return window;
  } else {
    return Function("return this")();
  }
})();


/***/ }),

/***/ 11117:
/*!*******************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/engine.io-client/lib/index.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const Socket = __webpack_require__(/*! ./socket */ 61783);

module.exports = (uri, opts) => new Socket(uri, opts);

/**
 * Expose deps for legacy compatibility
 * and standalone browser access.
 */

module.exports.Socket = Socket;
module.exports.protocol = Socket.protocol; // this is an int
module.exports.Transport = __webpack_require__(/*! ./transport */ 36553);
module.exports.transports = __webpack_require__(/*! ./transports/index */ 70615);
module.exports.parser = __webpack_require__(/*! engine.io-parser */ 40953);


/***/ }),

/***/ 61783:
/*!********************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/engine.io-client/lib/socket.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const transports = __webpack_require__(/*! ./transports/index */ 70615);
const Emitter = __webpack_require__(/*! component-emitter */ 46184);
const debug = __webpack_require__(/*! debug */ 87807)("engine.io-client:socket");
const parser = __webpack_require__(/*! engine.io-parser */ 40953);
const parseuri = __webpack_require__(/*! parseuri */ 70326);
const parseqs = __webpack_require__(/*! parseqs */ 59908);

class Socket extends Emitter {
  /**
   * Socket constructor.
   *
   * @param {String|Object} uri or options
   * @param {Object} options
   * @api public
   */
  constructor(uri, opts = {}) {
    super();

    if (uri && "object" === typeof uri) {
      opts = uri;
      uri = null;
    }

    if (uri) {
      uri = parseuri(uri);
      opts.hostname = uri.host;
      opts.secure = uri.protocol === "https" || uri.protocol === "wss";
      opts.port = uri.port;
      if (uri.query) opts.query = uri.query;
    } else if (opts.host) {
      opts.hostname = parseuri(opts.host).host;
    }

    this.secure =
      null != opts.secure
        ? opts.secure
        : typeof location !== "undefined" && "https:" === location.protocol;

    if (opts.hostname && !opts.port) {
      // if no port is specified manually, use the protocol default
      opts.port = this.secure ? "443" : "80";
    }

    this.hostname =
      opts.hostname ||
      (typeof location !== "undefined" ? location.hostname : "localhost");
    this.port =
      opts.port ||
      (typeof location !== "undefined" && location.port
        ? location.port
        : this.secure
        ? 443
        : 80);

    this.transports = opts.transports || ["polling", "websocket"];
    this.readyState = "";
    this.writeBuffer = [];
    this.prevBufferLen = 0;

    this.opts = Object.assign(
      {
        path: "/engine.io",
        agent: false,
        withCredentials: false,
        upgrade: true,
        jsonp: true,
        timestampParam: "t",
        rememberUpgrade: false,
        rejectUnauthorized: true,
        perMessageDeflate: {
          threshold: 1024
        },
        transportOptions: {},
        closeOnBeforeunload: true
      },
      opts
    );

    this.opts.path = this.opts.path.replace(/\/$/, "") + "/";

    if (typeof this.opts.query === "string") {
      this.opts.query = parseqs.decode(this.opts.query);
    }

    // set on handshake
    this.id = null;
    this.upgrades = null;
    this.pingInterval = null;
    this.pingTimeout = null;

    // set on heartbeat
    this.pingTimeoutTimer = null;

    if (typeof addEventListener === "function") {
      if (this.opts.closeOnBeforeunload) {
        // Firefox closes the connection when the "beforeunload" event is emitted but not Chrome. This event listener
        // ensures every browser behaves the same (no "disconnect" event at the Socket.IO level when the page is
        // closed/reloaded)
        addEventListener(
          "beforeunload",
          () => {
            if (this.transport) {
              // silently close the transport
              this.transport.removeAllListeners();
              this.transport.close();
            }
          },
          false
        );
      }
      if (this.hostname !== "localhost") {
        this.offlineEventListener = () => {
          this.onClose("transport close");
        };
        addEventListener("offline", this.offlineEventListener, false);
      }
    }

    this.open();
  }

  /**
   * Creates transport of the given type.
   *
   * @param {String} transport name
   * @return {Transport}
   * @api private
   */
  createTransport(name) {
    debug('creating transport "%s"', name);
    const query = clone(this.opts.query);

    // append engine.io protocol identifier
    query.EIO = parser.protocol;

    // transport name
    query.transport = name;

    // session id if we already have one
    if (this.id) query.sid = this.id;

    const opts = Object.assign(
      {},
      this.opts.transportOptions[name],
      this.opts,
      {
        query,
        socket: this,
        hostname: this.hostname,
        secure: this.secure,
        port: this.port
      }
    );

    debug("options: %j", opts);

    return new transports[name](opts);
  }

  /**
   * Initializes transport to use and starts probe.
   *
   * @api private
   */
  open() {
    let transport;
    if (
      this.opts.rememberUpgrade &&
      Socket.priorWebsocketSuccess &&
      this.transports.indexOf("websocket") !== -1
    ) {
      transport = "websocket";
    } else if (0 === this.transports.length) {
      // Emit error on next tick so it can be listened to
      setTimeout(() => {
        this.emit("error", "No transports available");
      }, 0);
      return;
    } else {
      transport = this.transports[0];
    }
    this.readyState = "opening";

    // Retry with the next transport if the transport is disabled (jsonp: false)
    try {
      transport = this.createTransport(transport);
    } catch (e) {
      debug("error while creating transport: %s", e);
      this.transports.shift();
      this.open();
      return;
    }

    transport.open();
    this.setTransport(transport);
  }

  /**
   * Sets the current transport. Disables the existing one (if any).
   *
   * @api private
   */
  setTransport(transport) {
    debug("setting transport %s", transport.name);

    if (this.transport) {
      debug("clearing existing transport %s", this.transport.name);
      this.transport.removeAllListeners();
    }

    // set up transport
    this.transport = transport;

    // set up transport listeners
    transport
      .on("drain", this.onDrain.bind(this))
      .on("packet", this.onPacket.bind(this))
      .on("error", this.onError.bind(this))
      .on("close", () => {
        this.onClose("transport close");
      });
  }

  /**
   * Probes a transport.
   *
   * @param {String} transport name
   * @api private
   */
  probe(name) {
    debug('probing transport "%s"', name);
    let transport = this.createTransport(name, { probe: 1 });
    let failed = false;

    Socket.priorWebsocketSuccess = false;

    const onTransportOpen = () => {
      if (failed) return;

      debug('probe transport "%s" opened', name);
      transport.send([{ type: "ping", data: "probe" }]);
      transport.once("packet", msg => {
        if (failed) return;
        if ("pong" === msg.type && "probe" === msg.data) {
          debug('probe transport "%s" pong', name);
          this.upgrading = true;
          this.emit("upgrading", transport);
          if (!transport) return;
          Socket.priorWebsocketSuccess = "websocket" === transport.name;

          debug('pausing current transport "%s"', this.transport.name);
          this.transport.pause(() => {
            if (failed) return;
            if ("closed" === this.readyState) return;
            debug("changing transport and sending upgrade packet");

            cleanup();

            this.setTransport(transport);
            transport.send([{ type: "upgrade" }]);
            this.emit("upgrade", transport);
            transport = null;
            this.upgrading = false;
            this.flush();
          });
        } else {
          debug('probe transport "%s" failed', name);
          const err = new Error("probe error");
          err.transport = transport.name;
          this.emit("upgradeError", err);
        }
      });
    };

    function freezeTransport() {
      if (failed) return;

      // Any callback called by transport should be ignored since now
      failed = true;

      cleanup();

      transport.close();
      transport = null;
    }

    // Handle any error that happens while probing
    const onerror = err => {
      const error = new Error("probe error: " + err);
      error.transport = transport.name;

      freezeTransport();

      debug('probe transport "%s" failed because of error: %s', name, err);

      this.emit("upgradeError", error);
    };

    function onTransportClose() {
      onerror("transport closed");
    }

    // When the socket is closed while we're probing
    function onclose() {
      onerror("socket closed");
    }

    // When the socket is upgraded while we're probing
    function onupgrade(to) {
      if (transport && to.name !== transport.name) {
        debug('"%s" works - aborting "%s"', to.name, transport.name);
        freezeTransport();
      }
    }

    // Remove all listeners on the transport and on self
    const cleanup = () => {
      transport.removeListener("open", onTransportOpen);
      transport.removeListener("error", onerror);
      transport.removeListener("close", onTransportClose);
      this.removeListener("close", onclose);
      this.removeListener("upgrading", onupgrade);
    };

    transport.once("open", onTransportOpen);
    transport.once("error", onerror);
    transport.once("close", onTransportClose);

    this.once("close", onclose);
    this.once("upgrading", onupgrade);

    transport.open();
  }

  /**
   * Called when connection is deemed open.
   *
   * @api public
   */
  onOpen() {
    debug("socket open");
    this.readyState = "open";
    Socket.priorWebsocketSuccess = "websocket" === this.transport.name;
    this.emit("open");
    this.flush();

    // we check for `readyState` in case an `open`
    // listener already closed the socket
    if (
      "open" === this.readyState &&
      this.opts.upgrade &&
      this.transport.pause
    ) {
      debug("starting upgrade probes");
      let i = 0;
      const l = this.upgrades.length;
      for (; i < l; i++) {
        this.probe(this.upgrades[i]);
      }
    }
  }

  /**
   * Handles a packet.
   *
   * @api private
   */
  onPacket(packet) {
    if (
      "opening" === this.readyState ||
      "open" === this.readyState ||
      "closing" === this.readyState
    ) {
      debug('socket receive: type "%s", data "%s"', packet.type, packet.data);

      this.emit("packet", packet);

      // Socket is live - any packet counts
      this.emit("heartbeat");

      switch (packet.type) {
        case "open":
          this.onHandshake(JSON.parse(packet.data));
          break;

        case "ping":
          this.resetPingTimeout();
          this.sendPacket("pong");
          this.emit("pong");
          break;

        case "error":
          const err = new Error("server error");
          err.code = packet.data;
          this.onError(err);
          break;

        case "message":
          this.emit("data", packet.data);
          this.emit("message", packet.data);
          break;
      }
    } else {
      debug('packet received with socket readyState "%s"', this.readyState);
    }
  }

  /**
   * Called upon handshake completion.
   *
   * @param {Object} handshake obj
   * @api private
   */
  onHandshake(data) {
    this.emit("handshake", data);
    this.id = data.sid;
    this.transport.query.sid = data.sid;
    this.upgrades = this.filterUpgrades(data.upgrades);
    this.pingInterval = data.pingInterval;
    this.pingTimeout = data.pingTimeout;
    this.onOpen();
    // In case open handler closes socket
    if ("closed" === this.readyState) return;
    this.resetPingTimeout();
  }

  /**
   * Sets and resets ping timeout timer based on server pings.
   *
   * @api private
   */
  resetPingTimeout() {
    clearTimeout(this.pingTimeoutTimer);
    this.pingTimeoutTimer = setTimeout(() => {
      this.onClose("ping timeout");
    }, this.pingInterval + this.pingTimeout);
    if (this.opts.autoUnref) {
      this.pingTimeoutTimer.unref();
    }
  }

  /**
   * Called on `drain` event
   *
   * @api private
   */
  onDrain() {
    this.writeBuffer.splice(0, this.prevBufferLen);

    // setting prevBufferLen = 0 is very important
    // for example, when upgrading, upgrade packet is sent over,
    // and a nonzero prevBufferLen could cause problems on `drain`
    this.prevBufferLen = 0;

    if (0 === this.writeBuffer.length) {
      this.emit("drain");
    } else {
      this.flush();
    }
  }

  /**
   * Flush write buffers.
   *
   * @api private
   */
  flush() {
    if (
      "closed" !== this.readyState &&
      this.transport.writable &&
      !this.upgrading &&
      this.writeBuffer.length
    ) {
      debug("flushing %d packets in socket", this.writeBuffer.length);
      this.transport.send(this.writeBuffer);
      // keep track of current length of writeBuffer
      // splice writeBuffer and callbackBuffer on `drain`
      this.prevBufferLen = this.writeBuffer.length;
      this.emit("flush");
    }
  }

  /**
   * Sends a message.
   *
   * @param {String} message.
   * @param {Function} callback function.
   * @param {Object} options.
   * @return {Socket} for chaining.
   * @api public
   */
  write(msg, options, fn) {
    this.sendPacket("message", msg, options, fn);
    return this;
  }

  send(msg, options, fn) {
    this.sendPacket("message", msg, options, fn);
    return this;
  }

  /**
   * Sends a packet.
   *
   * @param {String} packet type.
   * @param {String} data.
   * @param {Object} options.
   * @param {Function} callback function.
   * @api private
   */
  sendPacket(type, data, options, fn) {
    if ("function" === typeof data) {
      fn = data;
      data = undefined;
    }

    if ("function" === typeof options) {
      fn = options;
      options = null;
    }

    if ("closing" === this.readyState || "closed" === this.readyState) {
      return;
    }

    options = options || {};
    options.compress = false !== options.compress;

    const packet = {
      type: type,
      data: data,
      options: options
    };
    this.emit("packetCreate", packet);
    this.writeBuffer.push(packet);
    if (fn) this.once("flush", fn);
    this.flush();
  }

  /**
   * Closes the connection.
   *
   * @api private
   */
  close() {
    const close = () => {
      this.onClose("forced close");
      debug("socket closing - telling transport to close");
      this.transport.close();
    };

    const cleanupAndClose = () => {
      this.removeListener("upgrade", cleanupAndClose);
      this.removeListener("upgradeError", cleanupAndClose);
      close();
    };

    const waitForUpgrade = () => {
      // wait for upgrade to finish since we can't send packets while pausing a transport
      this.once("upgrade", cleanupAndClose);
      this.once("upgradeError", cleanupAndClose);
    };

    if ("opening" === this.readyState || "open" === this.readyState) {
      this.readyState = "closing";

      if (this.writeBuffer.length) {
        this.once("drain", () => {
          if (this.upgrading) {
            waitForUpgrade();
          } else {
            close();
          }
        });
      } else if (this.upgrading) {
        waitForUpgrade();
      } else {
        close();
      }
    }

    return this;
  }

  /**
   * Called upon transport error
   *
   * @api private
   */
  onError(err) {
    debug("socket error %j", err);
    Socket.priorWebsocketSuccess = false;
    this.emit("error", err);
    this.onClose("transport error", err);
  }

  /**
   * Called upon transport close.
   *
   * @api private
   */
  onClose(reason, desc) {
    if (
      "opening" === this.readyState ||
      "open" === this.readyState ||
      "closing" === this.readyState
    ) {
      debug('socket close with reason: "%s"', reason);

      // clear timers
      clearTimeout(this.pingIntervalTimer);
      clearTimeout(this.pingTimeoutTimer);

      // stop event from firing again for transport
      this.transport.removeAllListeners("close");

      // ensure transport won't stay open
      this.transport.close();

      // ignore further transport communication
      this.transport.removeAllListeners();

      if (typeof removeEventListener === "function") {
        removeEventListener("offline", this.offlineEventListener, false);
      }

      // set ready state
      this.readyState = "closed";

      // clear session id
      this.id = null;

      // emit close event
      this.emit("close", reason, desc);

      // clean buffers after, so users can still
      // grab the buffers on `close` event
      this.writeBuffer = [];
      this.prevBufferLen = 0;
    }
  }

  /**
   * Filters upgrades, returning only those matching client transports.
   *
   * @param {Array} server upgrades
   * @api private
   *
   */
  filterUpgrades(upgrades) {
    const filteredUpgrades = [];
    let i = 0;
    const j = upgrades.length;
    for (; i < j; i++) {
      if (~this.transports.indexOf(upgrades[i]))
        filteredUpgrades.push(upgrades[i]);
    }
    return filteredUpgrades;
  }
}

Socket.priorWebsocketSuccess = false;

/**
 * Protocol version.
 *
 * @api public
 */

Socket.protocol = parser.protocol; // this is an int

function clone(obj) {
  const o = {};
  for (let i in obj) {
    if (obj.hasOwnProperty(i)) {
      o[i] = obj[i];
    }
  }
  return o;
}

module.exports = Socket;


/***/ }),

/***/ 36553:
/*!***********************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/engine.io-client/lib/transport.js ***!
  \***********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const parser = __webpack_require__(/*! engine.io-parser */ 40953);
const Emitter = __webpack_require__(/*! component-emitter */ 46184);
const debug = __webpack_require__(/*! debug */ 87807)("engine.io-client:transport");

class Transport extends Emitter {
  /**
   * Transport abstract constructor.
   *
   * @param {Object} options.
   * @api private
   */
  constructor(opts) {
    super();

    this.opts = opts;
    this.query = opts.query;
    this.readyState = "";
    this.socket = opts.socket;
  }

  /**
   * Emits an error.
   *
   * @param {String} str
   * @return {Transport} for chaining
   * @api public
   */
  onError(msg, desc) {
    const err = new Error(msg);
    err.type = "TransportError";
    err.description = desc;
    this.emit("error", err);
    return this;
  }

  /**
   * Opens the transport.
   *
   * @api public
   */
  open() {
    if ("closed" === this.readyState || "" === this.readyState) {
      this.readyState = "opening";
      this.doOpen();
    }

    return this;
  }

  /**
   * Closes the transport.
   *
   * @api private
   */
  close() {
    if ("opening" === this.readyState || "open" === this.readyState) {
      this.doClose();
      this.onClose();
    }

    return this;
  }

  /**
   * Sends multiple packets.
   *
   * @param {Array} packets
   * @api private
   */
  send(packets) {
    if ("open" === this.readyState) {
      this.write(packets);
    } else {
      // this might happen if the transport was silently closed in the beforeunload event handler
      debug("transport is not open, discarding packets");
    }
  }

  /**
   * Called upon open
   *
   * @api private
   */
  onOpen() {
    this.readyState = "open";
    this.writable = true;
    this.emit("open");
  }

  /**
   * Called with data.
   *
   * @param {String} data
   * @api private
   */
  onData(data) {
    const packet = parser.decodePacket(data, this.socket.binaryType);
    this.onPacket(packet);
  }

  /**
   * Called with a decoded packet.
   */
  onPacket(packet) {
    this.emit("packet", packet);
  }

  /**
   * Called upon close.
   *
   * @api private
   */
  onClose() {
    this.readyState = "closed";
    this.emit("close");
  }
}

module.exports = Transport;


/***/ }),

/***/ 70615:
/*!******************************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/engine.io-client/lib/transports/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

const XMLHttpRequest = __webpack_require__(/*! ../../contrib/xmlhttprequest-ssl/XMLHttpRequest */ 29663);
const XHR = __webpack_require__(/*! ./polling-xhr */ 35051);
const JSONP = __webpack_require__(/*! ./polling-jsonp */ 80640);
const websocket = __webpack_require__(/*! ./websocket */ 60749);

exports.polling = polling;
exports.websocket = websocket;

/**
 * Polling transport polymorphic constructor.
 * Decides on xhr vs jsonp based on feature detection.
 *
 * @api private
 */

function polling(opts) {
  let xhr;
  let xd = false;
  let xs = false;
  const jsonp = false !== opts.jsonp;

  if (typeof location !== "undefined") {
    const isSSL = "https:" === location.protocol;
    let port = location.port;

    // some user agents have empty `location.port`
    if (!port) {
      port = isSSL ? 443 : 80;
    }

    xd = opts.hostname !== location.hostname || port !== opts.port;
    xs = opts.secure !== isSSL;
  }

  opts.xdomain = xd;
  opts.xscheme = xs;
  xhr = new XMLHttpRequest(opts);

  if ("open" in xhr && !opts.forceJSONP) {
    return new XHR(opts);
  } else {
    if (!jsonp) throw new Error("JSONP disabled");
    return new JSONP(opts);
  }
}


/***/ }),

/***/ 80640:
/*!**************************************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/engine.io-client/lib/transports/polling-jsonp.js ***!
  \**************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const Polling = __webpack_require__(/*! ./polling */ 92105);
const globalThis = __webpack_require__(/*! ../globalThis */ 42447);

const rNewline = /\n/g;
const rEscapedNewline = /\\n/g;

/**
 * Global JSONP callbacks.
 */

let callbacks;

class JSONPPolling extends Polling {
  /**
   * JSONP Polling constructor.
   *
   * @param {Object} opts.
   * @api public
   */
  constructor(opts) {
    super(opts);

    this.query = this.query || {};

    // define global callbacks array if not present
    // we do this here (lazily) to avoid unneeded global pollution
    if (!callbacks) {
      // we need to consider multiple engines in the same page
      callbacks = globalThis.___eio = globalThis.___eio || [];
    }

    // callback identifier
    this.index = callbacks.length;

    // add callback to jsonp global
    callbacks.push(this.onData.bind(this));

    // append to query string
    this.query.j = this.index;
  }

  /**
   * JSONP only supports binary as base64 encoded strings
   */
  get supportsBinary() {
    return false;
  }

  /**
   * Closes the socket.
   *
   * @api private
   */
  doClose() {
    if (this.script) {
      // prevent spurious errors from being emitted when the window is unloaded
      this.script.onerror = () => {};
      this.script.parentNode.removeChild(this.script);
      this.script = null;
    }

    if (this.form) {
      this.form.parentNode.removeChild(this.form);
      this.form = null;
      this.iframe = null;
    }

    super.doClose();
  }

  /**
   * Starts a poll cycle.
   *
   * @api private
   */
  doPoll() {
    const script = document.createElement("script");

    if (this.script) {
      this.script.parentNode.removeChild(this.script);
      this.script = null;
    }

    script.async = true;
    script.src = this.uri();
    script.onerror = e => {
      this.onError("jsonp poll error", e);
    };

    const insertAt = document.getElementsByTagName("script")[0];
    if (insertAt) {
      insertAt.parentNode.insertBefore(script, insertAt);
    } else {
      (document.head || document.body).appendChild(script);
    }
    this.script = script;

    const isUAgecko =
      "undefined" !== typeof navigator && /gecko/i.test(navigator.userAgent);

    if (isUAgecko) {
      setTimeout(function() {
        const iframe = document.createElement("iframe");
        document.body.appendChild(iframe);
        document.body.removeChild(iframe);
      }, 100);
    }
  }

  /**
   * Writes with a hidden iframe.
   *
   * @param {String} data to send
   * @param {Function} called upon flush.
   * @api private
   */
  doWrite(data, fn) {
    let iframe;

    if (!this.form) {
      const form = document.createElement("form");
      const area = document.createElement("textarea");
      const id = (this.iframeId = "eio_iframe_" + this.index);

      form.className = "socketio";
      form.style.position = "absolute";
      form.style.top = "-1000px";
      form.style.left = "-1000px";
      form.target = id;
      form.method = "POST";
      form.setAttribute("accept-charset", "utf-8");
      area.name = "d";
      form.appendChild(area);
      document.body.appendChild(form);

      this.form = form;
      this.area = area;
    }

    this.form.action = this.uri();

    function complete() {
      initIframe();
      fn();
    }

    const initIframe = () => {
      if (this.iframe) {
        try {
          this.form.removeChild(this.iframe);
        } catch (e) {
          this.onError("jsonp polling iframe removal error", e);
        }
      }

      try {
        // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
        const html = '<iframe src="javascript:0" name="' + this.iframeId + '">';
        iframe = document.createElement(html);
      } catch (e) {
        iframe = document.createElement("iframe");
        iframe.name = this.iframeId;
        iframe.src = "javascript:0";
      }

      iframe.id = this.iframeId;

      this.form.appendChild(iframe);
      this.iframe = iframe;
    };

    initIframe();

    // escape \n to prevent it from being converted into \r\n by some UAs
    // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side
    data = data.replace(rEscapedNewline, "\\\n");
    this.area.value = data.replace(rNewline, "\\n");

    try {
      this.form.submit();
    } catch (e) {}

    if (this.iframe.attachEvent) {
      this.iframe.onreadystatechange = () => {
        if (this.iframe.readyState === "complete") {
          complete();
        }
      };
    } else {
      this.iframe.onload = complete;
    }
  }
}

module.exports = JSONPPolling;


/***/ }),

/***/ 35051:
/*!************************************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/engine.io-client/lib/transports/polling-xhr.js ***!
  \************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* global attachEvent */

const XMLHttpRequest = __webpack_require__(/*! ../../contrib/xmlhttprequest-ssl/XMLHttpRequest */ 29663);
const Polling = __webpack_require__(/*! ./polling */ 92105);
const Emitter = __webpack_require__(/*! component-emitter */ 46184);
const { pick } = __webpack_require__(/*! ../util */ 83731);
const globalThis = __webpack_require__(/*! ../globalThis */ 42447);

const debug = __webpack_require__(/*! debug */ 87807)("engine.io-client:polling-xhr");

/**
 * Empty function
 */

function empty() {}

const hasXHR2 = (function() {
  const xhr = new XMLHttpRequest({ xdomain: false });
  return null != xhr.responseType;
})();

class XHR extends Polling {
  /**
   * XHR Polling constructor.
   *
   * @param {Object} opts
   * @api public
   */
  constructor(opts) {
    super(opts);

    if (typeof location !== "undefined") {
      const isSSL = "https:" === location.protocol;
      let port = location.port;

      // some user agents have empty `location.port`
      if (!port) {
        port = isSSL ? 443 : 80;
      }

      this.xd =
        (typeof location !== "undefined" &&
          opts.hostname !== location.hostname) ||
        port !== opts.port;
      this.xs = opts.secure !== isSSL;
    }
    /**
     * XHR supports binary
     */
    const forceBase64 = opts && opts.forceBase64;
    this.supportsBinary = hasXHR2 && !forceBase64;
  }

  /**
   * Creates a request.
   *
   * @param {String} method
   * @api private
   */
  request(opts = {}) {
    Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);
    return new Request(this.uri(), opts);
  }

  /**
   * Sends data.
   *
   * @param {String} data to send.
   * @param {Function} called upon flush.
   * @api private
   */
  doWrite(data, fn) {
    const req = this.request({
      method: "POST",
      data: data
    });
    req.on("success", fn);
    req.on("error", err => {
      this.onError("xhr post error", err);
    });
  }

  /**
   * Starts a poll cycle.
   *
   * @api private
   */
  doPoll() {
    debug("xhr poll");
    const req = this.request();
    req.on("data", this.onData.bind(this));
    req.on("error", err => {
      this.onError("xhr poll error", err);
    });
    this.pollXhr = req;
  }
}

class Request extends Emitter {
  /**
   * Request constructor
   *
   * @param {Object} options
   * @api public
   */
  constructor(uri, opts) {
    super();
    this.opts = opts;

    this.method = opts.method || "GET";
    this.uri = uri;
    this.async = false !== opts.async;
    this.data = undefined !== opts.data ? opts.data : null;

    this.create();
  }

  /**
   * Creates the XHR object and sends the request.
   *
   * @api private
   */
  create() {
    const opts = pick(
      this.opts,
      "agent",
      "enablesXDR",
      "pfx",
      "key",
      "passphrase",
      "cert",
      "ca",
      "ciphers",
      "rejectUnauthorized",
      "autoUnref"
    );
    opts.xdomain = !!this.opts.xd;
    opts.xscheme = !!this.opts.xs;

    const xhr = (this.xhr = new XMLHttpRequest(opts));

    try {
      debug("xhr open %s: %s", this.method, this.uri);
      xhr.open(this.method, this.uri, this.async);
      try {
        if (this.opts.extraHeaders) {
          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);
          for (let i in this.opts.extraHeaders) {
            if (this.opts.extraHeaders.hasOwnProperty(i)) {
              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);
            }
          }
        }
      } catch (e) {}

      if ("POST" === this.method) {
        try {
          xhr.setRequestHeader("Content-type", "text/plain;charset=UTF-8");
        } catch (e) {}
      }

      try {
        xhr.setRequestHeader("Accept", "*/*");
      } catch (e) {}

      // ie6 check
      if ("withCredentials" in xhr) {
        xhr.withCredentials = this.opts.withCredentials;
      }

      if (this.opts.requestTimeout) {
        xhr.timeout = this.opts.requestTimeout;
      }

      if (this.hasXDR()) {
        xhr.onload = () => {
          this.onLoad();
        };
        xhr.onerror = () => {
          this.onError(xhr.responseText);
        };
      } else {
        xhr.onreadystatechange = () => {
          if (4 !== xhr.readyState) return;
          if (200 === xhr.status || 1223 === xhr.status) {
            this.onLoad();
          } else {
            // make sure the `error` event handler that's user-set
            // does not throw in the same tick and gets caught here
            setTimeout(() => {
              this.onError(typeof xhr.status === "number" ? xhr.status : 0);
            }, 0);
          }
        };
      }

      debug("xhr data %s", this.data);
      xhr.send(this.data);
    } catch (e) {
      // Need to defer since .create() is called directly from the constructor
      // and thus the 'error' event can only be only bound *after* this exception
      // occurs.  Therefore, also, we cannot throw here at all.
      setTimeout(() => {
        this.onError(e);
      }, 0);
      return;
    }

    if (typeof document !== "undefined") {
      this.index = Request.requestsCount++;
      Request.requests[this.index] = this;
    }
  }

  /**
   * Called upon successful response.
   *
   * @api private
   */
  onSuccess() {
    this.emit("success");
    this.cleanup();
  }

  /**
   * Called if we have data.
   *
   * @api private
   */
  onData(data) {
    this.emit("data", data);
    this.onSuccess();
  }

  /**
   * Called upon error.
   *
   * @api private
   */
  onError(err) {
    this.emit("error", err);
    this.cleanup(true);
  }

  /**
   * Cleans up house.
   *
   * @api private
   */
  cleanup(fromError) {
    if ("undefined" === typeof this.xhr || null === this.xhr) {
      return;
    }
    // xmlhttprequest
    if (this.hasXDR()) {
      this.xhr.onload = this.xhr.onerror = empty;
    } else {
      this.xhr.onreadystatechange = empty;
    }

    if (fromError) {
      try {
        this.xhr.abort();
      } catch (e) {}
    }

    if (typeof document !== "undefined") {
      delete Request.requests[this.index];
    }

    this.xhr = null;
  }

  /**
   * Called upon load.
   *
   * @api private
   */
  onLoad() {
    const data = this.xhr.responseText;
    if (data !== null) {
      this.onData(data);
    }
  }

  /**
   * Check if it has XDomainRequest.
   *
   * @api private
   */
  hasXDR() {
    return typeof XDomainRequest !== "undefined" && !this.xs && this.enablesXDR;
  }

  /**
   * Aborts the request.
   *
   * @api public
   */
  abort() {
    this.cleanup();
  }
}

/**
 * Aborts pending requests when unloading the window. This is needed to prevent
 * memory leaks (e.g. when using IE) and to ensure that no spurious error is
 * emitted.
 */

Request.requestsCount = 0;
Request.requests = {};

if (typeof document !== "undefined") {
  if (typeof attachEvent === "function") {
    attachEvent("onunload", unloadHandler);
  } else if (typeof addEventListener === "function") {
    const terminationEvent = "onpagehide" in globalThis ? "pagehide" : "unload";
    addEventListener(terminationEvent, unloadHandler, false);
  }
}

function unloadHandler() {
  for (let i in Request.requests) {
    if (Request.requests.hasOwnProperty(i)) {
      Request.requests[i].abort();
    }
  }
}

module.exports = XHR;
module.exports.Request = Request;


/***/ }),

/***/ 92105:
/*!********************************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/engine.io-client/lib/transports/polling.js ***!
  \********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const Transport = __webpack_require__(/*! ../transport */ 36553);
const parseqs = __webpack_require__(/*! parseqs */ 59908);
const parser = __webpack_require__(/*! engine.io-parser */ 40953);
const yeast = __webpack_require__(/*! yeast */ 69633);

const debug = __webpack_require__(/*! debug */ 87807)("engine.io-client:polling");

class Polling extends Transport {
  /**
   * Transport name.
   */
  get name() {
    return "polling";
  }

  /**
   * Opens the socket (triggers polling). We write a PING message to determine
   * when the transport is open.
   *
   * @api private
   */
  doOpen() {
    this.poll();
  }

  /**
   * Pauses polling.
   *
   * @param {Function} callback upon buffers are flushed and transport is paused
   * @api private
   */
  pause(onPause) {
    this.readyState = "pausing";

    const pause = () => {
      debug("paused");
      this.readyState = "paused";
      onPause();
    };

    if (this.polling || !this.writable) {
      let total = 0;

      if (this.polling) {
        debug("we are currently polling - waiting to pause");
        total++;
        this.once("pollComplete", function() {
          debug("pre-pause polling complete");
          --total || pause();
        });
      }

      if (!this.writable) {
        debug("we are currently writing - waiting to pause");
        total++;
        this.once("drain", function() {
          debug("pre-pause writing complete");
          --total || pause();
        });
      }
    } else {
      pause();
    }
  }

  /**
   * Starts polling cycle.
   *
   * @api public
   */
  poll() {
    debug("polling");
    this.polling = true;
    this.doPoll();
    this.emit("poll");
  }

  /**
   * Overloads onData to detect payloads.
   *
   * @api private
   */
  onData(data) {
    debug("polling got data %s", data);
    const callback = packet => {
      // if its the first message we consider the transport open
      if ("opening" === this.readyState && packet.type === "open") {
        this.onOpen();
      }

      // if its a close packet, we close the ongoing requests
      if ("close" === packet.type) {
        this.onClose();
        return false;
      }

      // otherwise bypass onData and handle the message
      this.onPacket(packet);
    };

    // decode payload
    parser.decodePayload(data, this.socket.binaryType).forEach(callback);

    // if an event did not trigger closing
    if ("closed" !== this.readyState) {
      // if we got data we're not polling
      this.polling = false;
      this.emit("pollComplete");

      if ("open" === this.readyState) {
        this.poll();
      } else {
        debug('ignoring poll - transport state "%s"', this.readyState);
      }
    }
  }

  /**
   * For polling, send a close packet.
   *
   * @api private
   */
  doClose() {
    const close = () => {
      debug("writing close packet");
      this.write([{ type: "close" }]);
    };

    if ("open" === this.readyState) {
      debug("transport open - closing");
      close();
    } else {
      // in case we're trying to close while
      // handshaking is in progress (GH-164)
      debug("transport not open - deferring close");
      this.once("open", close);
    }
  }

  /**
   * Writes a packets payload.
   *
   * @param {Array} data packets
   * @param {Function} drain callback
   * @api private
   */
  write(packets) {
    this.writable = false;

    parser.encodePayload(packets, data => {
      this.doWrite(data, () => {
        this.writable = true;
        this.emit("drain");
      });
    });
  }

  /**
   * Generates uri for connection.
   *
   * @api private
   */
  uri() {
    let query = this.query || {};
    const schema = this.opts.secure ? "https" : "http";
    let port = "";

    // cache busting is forced
    if (false !== this.opts.timestampRequests) {
      query[this.opts.timestampParam] = yeast();
    }

    if (!this.supportsBinary && !query.sid) {
      query.b64 = 1;
    }

    query = parseqs.encode(query);

    // avoid port if default for schema
    if (
      this.opts.port &&
      (("https" === schema && Number(this.opts.port) !== 443) ||
        ("http" === schema && Number(this.opts.port) !== 80))
    ) {
      port = ":" + this.opts.port;
    }

    // prepend ? to query
    if (query.length) {
      query = "?" + query;
    }

    const ipv6 = this.opts.hostname.indexOf(":") !== -1;
    return (
      schema +
      "://" +
      (ipv6 ? "[" + this.opts.hostname + "]" : this.opts.hostname) +
      port +
      this.opts.path +
      query
    );
  }
}

module.exports = Polling;


/***/ }),

/***/ 90333:
/*!******************************************************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js ***!
  \******************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const globalThis = __webpack_require__(/*! ../globalThis */ 42447);

module.exports = {
  WebSocket: globalThis.WebSocket || globalThis.MozWebSocket,
  usingBrowserWebSocket: true,
  defaultBinaryType: "arraybuffer"
};


/***/ }),

/***/ 60749:
/*!**********************************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/engine.io-client/lib/transports/websocket.js ***!
  \**********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const Transport = __webpack_require__(/*! ../transport */ 36553);
const parser = __webpack_require__(/*! engine.io-parser */ 40953);
const parseqs = __webpack_require__(/*! parseqs */ 59908);
const yeast = __webpack_require__(/*! yeast */ 69633);
const { pick } = __webpack_require__(/*! ../util */ 83731);
const {
  WebSocket,
  usingBrowserWebSocket,
  defaultBinaryType
} = __webpack_require__(/*! ./websocket-constructor */ 90333);

const debug = __webpack_require__(/*! debug */ 87807)("engine.io-client:websocket");

// detect ReactNative environment
const isReactNative =
  typeof navigator !== "undefined" &&
  typeof navigator.product === "string" &&
  navigator.product.toLowerCase() === "reactnative";

class WS extends Transport {
  /**
   * WebSocket transport constructor.
   *
   * @api {Object} connection options
   * @api public
   */
  constructor(opts) {
    super(opts);

    this.supportsBinary = !opts.forceBase64;
  }

  /**
   * Transport name.
   *
   * @api public
   */
  get name() {
    return "websocket";
  }

  /**
   * Opens socket.
   *
   * @api private
   */
  doOpen() {
    if (!this.check()) {
      // let probe timeout
      return;
    }

    const uri = this.uri();
    const protocols = this.opts.protocols;

    // React Native only supports the 'headers' option, and will print a warning if anything else is passed
    const opts = isReactNative
      ? {}
      : pick(
          this.opts,
          "agent",
          "perMessageDeflate",
          "pfx",
          "key",
          "passphrase",
          "cert",
          "ca",
          "ciphers",
          "rejectUnauthorized",
          "localAddress",
          "protocolVersion",
          "origin",
          "maxPayload",
          "family",
          "checkServerIdentity"
        );

    if (this.opts.extraHeaders) {
      opts.headers = this.opts.extraHeaders;
    }

    try {
      this.ws =
        usingBrowserWebSocket && !isReactNative
          ? protocols
            ? new WebSocket(uri, protocols)
            : new WebSocket(uri)
          : new WebSocket(uri, protocols, opts);
    } catch (err) {
      return this.emit("error", err);
    }

    this.ws.binaryType = this.socket.binaryType || defaultBinaryType;

    this.addEventListeners();
  }

  /**
   * Adds event listeners to the socket
   *
   * @api private
   */
  addEventListeners() {
    this.ws.onopen = () => {
      if (this.opts.autoUnref) {
        this.ws._socket.unref();
      }
      this.onOpen();
    };
    this.ws.onclose = this.onClose.bind(this);
    this.ws.onmessage = ev => this.onData(ev.data);
    this.ws.onerror = e => this.onError("websocket error", e);
  }

  /**
   * Writes data to socket.
   *
   * @param {Array} array of packets.
   * @api private
   */
  write(packets) {
    this.writable = false;

    // encodePacket efficient as it uses WS framing
    // no need for encodePayload
    for (let i = 0; i < packets.length; i++) {
      const packet = packets[i];
      const lastPacket = i === packets.length - 1;

      parser.encodePacket(packet, this.supportsBinary, data => {
        // always create a new object (GH-437)
        const opts = {};
        if (!usingBrowserWebSocket) {
          if (packet.options) {
            opts.compress = packet.options.compress;
          }

          if (this.opts.perMessageDeflate) {
            const len =
              "string" === typeof data ? Buffer.byteLength(data) : data.length;
            if (len < this.opts.perMessageDeflate.threshold) {
              opts.compress = false;
            }
          }
        }

        // Sometimes the websocket has already been closed but the browser didn't
        // have a chance of informing us about it yet, in that case send will
        // throw an error
        try {
          if (usingBrowserWebSocket) {
            // TypeError is thrown when passing the second argument on Safari
            this.ws.send(data);
          } else {
            this.ws.send(data, opts);
          }
        } catch (e) {
          debug("websocket closed before onclose event");
        }

        if (lastPacket) {
          // fake drain
          // defer to next tick to allow Socket to clear writeBuffer
          setTimeout(() => {
            this.writable = true;
            this.emit("drain");
          }, 0);
        }
      });
    }
  }

  /**
   * Called upon close
   *
   * @api private
   */
  onClose() {
    Transport.prototype.onClose.call(this);
  }

  /**
   * Closes socket.
   *
   * @api private
   */
  doClose() {
    if (typeof this.ws !== "undefined") {
      this.ws.close();
      this.ws = null;
    }
  }

  /**
   * Generates uri for connection.
   *
   * @api private
   */
  uri() {
    let query = this.query || {};
    const schema = this.opts.secure ? "wss" : "ws";
    let port = "";

    // avoid port if default for schema
    if (
      this.opts.port &&
      (("wss" === schema && Number(this.opts.port) !== 443) ||
        ("ws" === schema && Number(this.opts.port) !== 80))
    ) {
      port = ":" + this.opts.port;
    }

    // append timestamp to URI
    if (this.opts.timestampRequests) {
      query[this.opts.timestampParam] = yeast();
    }

    // communicate binary support capabilities
    if (!this.supportsBinary) {
      query.b64 = 1;
    }

    query = parseqs.encode(query);

    // prepend ? to query
    if (query.length) {
      query = "?" + query;
    }

    const ipv6 = this.opts.hostname.indexOf(":") !== -1;
    return (
      schema +
      "://" +
      (ipv6 ? "[" + this.opts.hostname + "]" : this.opts.hostname) +
      port +
      this.opts.path +
      query
    );
  }

  /**
   * Feature detection for WebSocket.
   *
   * @return {Boolean} whether this transport is available.
   * @api public
   */
  check() {
    return (
      !!WebSocket &&
      !("__initialize" in WebSocket && this.name === WS.prototype.name)
    );
  }
}

module.exports = WS;


/***/ }),

/***/ 83731:
/*!******************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/engine.io-client/lib/util.js ***!
  \******************************************************************************/
/***/ ((module) => {

module.exports.pick = (obj, ...attr) => {
  return attr.reduce((acc, k) => {
    if (obj.hasOwnProperty(k)) {
      acc[k] = obj[k];
    }
    return acc;
  }, {});
};


/***/ }),

/***/ 29663:
/*!****************************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/engine.io-client/lib/xmlhttprequest.js ***!
  \****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// browser shim for xmlhttprequest module

const hasCORS = __webpack_require__(/*! has-cors */ 62939);
const globalThis = __webpack_require__(/*! ./globalThis */ 42447);

module.exports = function(opts) {
  const xdomain = opts.xdomain;

  // scheme must be same when usign XDomainRequest
  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx
  const xscheme = opts.xscheme;

  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.
  // https://github.com/Automattic/engine.io-client/pull/217
  const enablesXDR = opts.enablesXDR;

  // XMLHttpRequest can be disabled on IE
  try {
    if ("undefined" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {
      return new XMLHttpRequest();
    }
  } catch (e) {}

  // Use XDomainRequest for IE8 if enablesXDR is true
  // because loading bar keeps flashing when using jsonp-polling
  // https://github.com/yujiosaka/socke.io-ie8-loading-example
  try {
    if ("undefined" !== typeof XDomainRequest && !xscheme && enablesXDR) {
      return new XDomainRequest();
    }
  } catch (e) {}

  if (!xdomain) {
    try {
      return new globalThis[["Active"].concat("Object").join("X")](
        "Microsoft.XMLHTTP"
      );
    } catch (e) {}
  }
};


/***/ }),

/***/ 61644:
/*!*********************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/engine.io-parser/lib/commons.js ***!
  \*********************************************************************************/
/***/ ((module) => {

const PACKET_TYPES = Object.create(null); // no Map = no polyfill
PACKET_TYPES["open"] = "0";
PACKET_TYPES["close"] = "1";
PACKET_TYPES["ping"] = "2";
PACKET_TYPES["pong"] = "3";
PACKET_TYPES["message"] = "4";
PACKET_TYPES["upgrade"] = "5";
PACKET_TYPES["noop"] = "6";

const PACKET_TYPES_REVERSE = Object.create(null);
Object.keys(PACKET_TYPES).forEach(key => {
  PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;
});

const ERROR_PACKET = { type: "error", data: "parser error" };

module.exports = {
  PACKET_TYPES,
  PACKET_TYPES_REVERSE,
  ERROR_PACKET
};


/***/ }),

/***/ 36333:
/*!**********************************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/engine.io-parser/lib/decodePacket.browser.js ***!
  \**********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const { PACKET_TYPES_REVERSE, ERROR_PACKET } = __webpack_require__(/*! ./commons */ 61644);

const withNativeArrayBuffer = typeof ArrayBuffer === "function";

let base64decoder;
if (withNativeArrayBuffer) {
  base64decoder = __webpack_require__(/*! base64-arraybuffer */ 15147);
}

const decodePacket = (encodedPacket, binaryType) => {
  if (typeof encodedPacket !== "string") {
    return {
      type: "message",
      data: mapBinary(encodedPacket, binaryType)
    };
  }
  const type = encodedPacket.charAt(0);
  if (type === "b") {
    return {
      type: "message",
      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)
    };
  }
  const packetType = PACKET_TYPES_REVERSE[type];
  if (!packetType) {
    return ERROR_PACKET;
  }
  return encodedPacket.length > 1
    ? {
        type: PACKET_TYPES_REVERSE[type],
        data: encodedPacket.substring(1)
      }
    : {
        type: PACKET_TYPES_REVERSE[type]
      };
};

const decodeBase64Packet = (data, binaryType) => {
  if (base64decoder) {
    const decoded = base64decoder.decode(data);
    return mapBinary(decoded, binaryType);
  } else {
    return { base64: true, data }; // fallback for old browsers
  }
};

const mapBinary = (data, binaryType) => {
  switch (binaryType) {
    case "blob":
      return data instanceof ArrayBuffer ? new Blob([data]) : data;
    case "arraybuffer":
    default:
      return data; // assuming the data is already an ArrayBuffer
  }
};

module.exports = decodePacket;


/***/ }),

/***/ 4475:
/*!**********************************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/engine.io-parser/lib/encodePacket.browser.js ***!
  \**********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const { PACKET_TYPES } = __webpack_require__(/*! ./commons */ 61644);

const withNativeBlob =
  typeof Blob === "function" ||
  (typeof Blob !== "undefined" &&
    Object.prototype.toString.call(Blob) === "[object BlobConstructor]");
const withNativeArrayBuffer = typeof ArrayBuffer === "function";

// ArrayBuffer.isView method is not defined in IE10
const isView = obj => {
  return typeof ArrayBuffer.isView === "function"
    ? ArrayBuffer.isView(obj)
    : obj && obj.buffer instanceof ArrayBuffer;
};

const encodePacket = ({ type, data }, supportsBinary, callback) => {
  if (withNativeBlob && data instanceof Blob) {
    if (supportsBinary) {
      return callback(data);
    } else {
      return encodeBlobAsBase64(data, callback);
    }
  } else if (
    withNativeArrayBuffer &&
    (data instanceof ArrayBuffer || isView(data))
  ) {
    if (supportsBinary) {
      return callback(data instanceof ArrayBuffer ? data : data.buffer);
    } else {
      return encodeBlobAsBase64(new Blob([data]), callback);
    }
  }
  // plain string
  return callback(PACKET_TYPES[type] + (data || ""));
};

const encodeBlobAsBase64 = (data, callback) => {
  const fileReader = new FileReader();
  fileReader.onload = function() {
    const content = fileReader.result.split(",")[1];
    callback("b" + content);
  };
  return fileReader.readAsDataURL(data);
};

module.exports = encodePacket;


/***/ }),

/***/ 40953:
/*!*******************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/engine.io-parser/lib/index.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const encodePacket = __webpack_require__(/*! ./encodePacket */ 4475);
const decodePacket = __webpack_require__(/*! ./decodePacket */ 36333);

const SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text

const encodePayload = (packets, callback) => {
  // some packets may be added to the array while encoding, so the initial length must be saved
  const length = packets.length;
  const encodedPackets = new Array(length);
  let count = 0;

  packets.forEach((packet, i) => {
    // force base64 encoding for binary packets
    encodePacket(packet, false, encodedPacket => {
      encodedPackets[i] = encodedPacket;
      if (++count === length) {
        callback(encodedPackets.join(SEPARATOR));
      }
    });
  });
};

const decodePayload = (encodedPayload, binaryType) => {
  const encodedPackets = encodedPayload.split(SEPARATOR);
  const packets = [];
  for (let i = 0; i < encodedPackets.length; i++) {
    const decodedPacket = decodePacket(encodedPackets[i], binaryType);
    packets.push(decodedPacket);
    if (decodedPacket.type === "error") {
      break;
    }
  }
  return packets;
};

module.exports = {
  protocol: 4,
  encodePacket,
  encodePayload,
  decodePacket,
  decodePayload
};


/***/ }),

/***/ 17037:
/*!*********************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/socket.io-client/build/index.js ***!
  \*********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.io = exports.Socket = exports.Manager = exports.protocol = void 0;
const url_1 = __webpack_require__(/*! ./url */ 41536);
const manager_1 = __webpack_require__(/*! ./manager */ 85978);
const debug = __webpack_require__(/*! debug */ 87807)("socket.io-client");
/**
 * Module exports.
 */
module.exports = exports = lookup;
/**
 * Managers cache.
 */
const cache = (exports.managers = {});
function lookup(uri, opts) {
    if (typeof uri === "object") {
        opts = uri;
        uri = undefined;
    }
    opts = opts || {};
    const parsed = url_1.url(uri, opts.path || "/socket.io");
    const source = parsed.source;
    const id = parsed.id;
    const path = parsed.path;
    const sameNamespace = cache[id] && path in cache[id]["nsps"];
    const newConnection = opts.forceNew ||
        opts["force new connection"] ||
        false === opts.multiplex ||
        sameNamespace;
    let io;
    if (newConnection) {
        debug("ignoring socket cache for %s", source);
        io = new manager_1.Manager(source, opts);
    }
    else {
        if (!cache[id]) {
            debug("new io instance for %s", source);
            cache[id] = new manager_1.Manager(source, opts);
        }
        io = cache[id];
    }
    if (parsed.query && !opts.query) {
        opts.query = parsed.queryKey;
    }
    return io.socket(parsed.path, opts);
}
exports.io = lookup;
/**
 * Protocol version.
 *
 * @public
 */
var socket_io_parser_1 = __webpack_require__(/*! socket.io-parser */ 49915);
Object.defineProperty(exports, "protocol", ({ enumerable: true, get: function () { return socket_io_parser_1.protocol; } }));
/**
 * `connect`.
 *
 * @param {String} uri
 * @public
 */
exports.connect = lookup;
/**
 * Expose constructors for standalone build.
 *
 * @public
 */
var manager_2 = __webpack_require__(/*! ./manager */ 85978);
Object.defineProperty(exports, "Manager", ({ enumerable: true, get: function () { return manager_2.Manager; } }));
var socket_1 = __webpack_require__(/*! ./socket */ 37898);
Object.defineProperty(exports, "Socket", ({ enumerable: true, get: function () { return socket_1.Socket; } }));
exports.default = lookup;


/***/ }),

/***/ 85978:
/*!***********************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/socket.io-client/build/manager.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Manager = void 0;
const eio = __webpack_require__(/*! engine.io-client */ 11117);
const socket_1 = __webpack_require__(/*! ./socket */ 37898);
const parser = __webpack_require__(/*! socket.io-parser */ 49915);
const on_1 = __webpack_require__(/*! ./on */ 54921);
const Backoff = __webpack_require__(/*! backo2 */ 41362);
const typed_events_1 = __webpack_require__(/*! ./typed-events */ 66538);
const debug = __webpack_require__(/*! debug */ 87807)("socket.io-client:manager");
class Manager extends typed_events_1.StrictEventEmitter {
    constructor(uri, opts) {
        super();
        this.nsps = {};
        this.subs = [];
        if (uri && "object" === typeof uri) {
            opts = uri;
            uri = undefined;
        }
        opts = opts || {};
        opts.path = opts.path || "/socket.io";
        this.opts = opts;
        this.reconnection(opts.reconnection !== false);
        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
        this.reconnectionDelay(opts.reconnectionDelay || 1000);
        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
        this.randomizationFactor(opts.randomizationFactor || 0.5);
        this.backoff = new Backoff({
            min: this.reconnectionDelay(),
            max: this.reconnectionDelayMax(),
            jitter: this.randomizationFactor(),
        });
        this.timeout(null == opts.timeout ? 20000 : opts.timeout);
        this._readyState = "closed";
        this.uri = uri;
        const _parser = opts.parser || parser;
        this.encoder = new _parser.Encoder();
        this.decoder = new _parser.Decoder();
        this._autoConnect = opts.autoConnect !== false;
        if (this._autoConnect)
            this.open();
    }
    reconnection(v) {
        if (!arguments.length)
            return this._reconnection;
        this._reconnection = !!v;
        return this;
    }
    reconnectionAttempts(v) {
        if (v === undefined)
            return this._reconnectionAttempts;
        this._reconnectionAttempts = v;
        return this;
    }
    reconnectionDelay(v) {
        var _a;
        if (v === undefined)
            return this._reconnectionDelay;
        this._reconnectionDelay = v;
        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);
        return this;
    }
    randomizationFactor(v) {
        var _a;
        if (v === undefined)
            return this._randomizationFactor;
        this._randomizationFactor = v;
        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);
        return this;
    }
    reconnectionDelayMax(v) {
        var _a;
        if (v === undefined)
            return this._reconnectionDelayMax;
        this._reconnectionDelayMax = v;
        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);
        return this;
    }
    timeout(v) {
        if (!arguments.length)
            return this._timeout;
        this._timeout = v;
        return this;
    }
    /**
     * Starts trying to reconnect if reconnection is enabled and we have not
     * started reconnecting yet
     *
     * @private
     */
    maybeReconnectOnOpen() {
        // Only try to reconnect if it's the first time we're connecting
        if (!this._reconnecting &&
            this._reconnection &&
            this.backoff.attempts === 0) {
            // keeps reconnection from firing twice for the same reconnection loop
            this.reconnect();
        }
    }
    /**
     * Sets the current transport `socket`.
     *
     * @param {Function} fn - optional, callback
     * @return self
     * @public
     */
    open(fn) {
        debug("readyState %s", this._readyState);
        if (~this._readyState.indexOf("open"))
            return this;
        debug("opening %s", this.uri);
        this.engine = eio(this.uri, this.opts);
        const socket = this.engine;
        const self = this;
        this._readyState = "opening";
        this.skipReconnect = false;
        // emit `open`
        const openSubDestroy = on_1.on(socket, "open", function () {
            self.onopen();
            fn && fn();
        });
        // emit `error`
        const errorSub = on_1.on(socket, "error", (err) => {
            debug("error");
            self.cleanup();
            self._readyState = "closed";
            this.emitReserved("error", err);
            if (fn) {
                fn(err);
            }
            else {
                // Only do this if there is no fn to handle the error
                self.maybeReconnectOnOpen();
            }
        });
        if (false !== this._timeout) {
            const timeout = this._timeout;
            debug("connect attempt will timeout after %d", timeout);
            if (timeout === 0) {
                openSubDestroy(); // prevents a race condition with the 'open' event
            }
            // set timer
            const timer = setTimeout(() => {
                debug("connect attempt timed out after %d", timeout);
                openSubDestroy();
                socket.close();
                socket.emit("error", new Error("timeout"));
            }, timeout);
            if (this.opts.autoUnref) {
                timer.unref();
            }
            this.subs.push(function subDestroy() {
                clearTimeout(timer);
            });
        }
        this.subs.push(openSubDestroy);
        this.subs.push(errorSub);
        return this;
    }
    /**
     * Alias for open()
     *
     * @return self
     * @public
     */
    connect(fn) {
        return this.open(fn);
    }
    /**
     * Called upon transport open.
     *
     * @private
     */
    onopen() {
        debug("open");
        // clear old subs
        this.cleanup();
        // mark as open
        this._readyState = "open";
        this.emitReserved("open");
        // add new subs
        const socket = this.engine;
        this.subs.push(on_1.on(socket, "ping", this.onping.bind(this)), on_1.on(socket, "data", this.ondata.bind(this)), on_1.on(socket, "error", this.onerror.bind(this)), on_1.on(socket, "close", this.onclose.bind(this)), on_1.on(this.decoder, "decoded", this.ondecoded.bind(this)));
    }
    /**
     * Called upon a ping.
     *
     * @private
     */
    onping() {
        this.emitReserved("ping");
    }
    /**
     * Called with data.
     *
     * @private
     */
    ondata(data) {
        this.decoder.add(data);
    }
    /**
     * Called when parser fully decodes a packet.
     *
     * @private
     */
    ondecoded(packet) {
        this.emitReserved("packet", packet);
    }
    /**
     * Called upon socket error.
     *
     * @private
     */
    onerror(err) {
        debug("error", err);
        this.emitReserved("error", err);
    }
    /**
     * Creates a new socket for the given `nsp`.
     *
     * @return {Socket}
     * @public
     */
    socket(nsp, opts) {
        let socket = this.nsps[nsp];
        if (!socket) {
            socket = new socket_1.Socket(this, nsp, opts);
            this.nsps[nsp] = socket;
        }
        return socket;
    }
    /**
     * Called upon a socket close.
     *
     * @param socket
     * @private
     */
    _destroy(socket) {
        const nsps = Object.keys(this.nsps);
        for (const nsp of nsps) {
            const socket = this.nsps[nsp];
            if (socket.active) {
                debug("socket %s is still active, skipping close", nsp);
                return;
            }
        }
        this._close();
    }
    /**
     * Writes a packet.
     *
     * @param packet
     * @private
     */
    _packet(packet) {
        debug("writing packet %j", packet);
        const encodedPackets = this.encoder.encode(packet);
        for (let i = 0; i < encodedPackets.length; i++) {
            this.engine.write(encodedPackets[i], packet.options);
        }
    }
    /**
     * Clean up transport subscriptions and packet buffer.
     *
     * @private
     */
    cleanup() {
        debug("cleanup");
        this.subs.forEach((subDestroy) => subDestroy());
        this.subs.length = 0;
        this.decoder.destroy();
    }
    /**
     * Close the current socket.
     *
     * @private
     */
    _close() {
        debug("disconnect");
        this.skipReconnect = true;
        this._reconnecting = false;
        if ("opening" === this._readyState) {
            // `onclose` will not fire because
            // an open event never happened
            this.cleanup();
        }
        this.backoff.reset();
        this._readyState = "closed";
        if (this.engine)
            this.engine.close();
    }
    /**
     * Alias for close()
     *
     * @private
     */
    disconnect() {
        return this._close();
    }
    /**
     * Called upon engine close.
     *
     * @private
     */
    onclose(reason) {
        debug("onclose");
        this.cleanup();
        this.backoff.reset();
        this._readyState = "closed";
        this.emitReserved("close", reason);
        if (this._reconnection && !this.skipReconnect) {
            this.reconnect();
        }
    }
    /**
     * Attempt a reconnection.
     *
     * @private
     */
    reconnect() {
        if (this._reconnecting || this.skipReconnect)
            return this;
        const self = this;
        if (this.backoff.attempts >= this._reconnectionAttempts) {
            debug("reconnect failed");
            this.backoff.reset();
            this.emitReserved("reconnect_failed");
            this._reconnecting = false;
        }
        else {
            const delay = this.backoff.duration();
            debug("will wait %dms before reconnect attempt", delay);
            this._reconnecting = true;
            const timer = setTimeout(() => {
                if (self.skipReconnect)
                    return;
                debug("attempting reconnect");
                this.emitReserved("reconnect_attempt", self.backoff.attempts);
                // check again for the case socket closed in above events
                if (self.skipReconnect)
                    return;
                self.open((err) => {
                    if (err) {
                        debug("reconnect attempt error");
                        self._reconnecting = false;
                        self.reconnect();
                        this.emitReserved("reconnect_error", err);
                    }
                    else {
                        debug("reconnect success");
                        self.onreconnect();
                    }
                });
            }, delay);
            if (this.opts.autoUnref) {
                timer.unref();
            }
            this.subs.push(function subDestroy() {
                clearTimeout(timer);
            });
        }
    }
    /**
     * Called upon successful reconnect.
     *
     * @private
     */
    onreconnect() {
        const attempt = this.backoff.attempts;
        this._reconnecting = false;
        this.backoff.reset();
        this.emitReserved("reconnect", attempt);
    }
}
exports.Manager = Manager;


/***/ }),

/***/ 54921:
/*!******************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/socket.io-client/build/on.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.on = void 0;
function on(obj, ev, fn) {
    obj.on(ev, fn);
    return function subDestroy() {
        obj.off(ev, fn);
    };
}
exports.on = on;


/***/ }),

/***/ 37898:
/*!**********************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/socket.io-client/build/socket.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Socket = void 0;
const socket_io_parser_1 = __webpack_require__(/*! socket.io-parser */ 49915);
const on_1 = __webpack_require__(/*! ./on */ 54921);
const typed_events_1 = __webpack_require__(/*! ./typed-events */ 66538);
const debug = __webpack_require__(/*! debug */ 87807)("socket.io-client:socket");
/**
 * Internal events.
 * These events can't be emitted by the user.
 */
const RESERVED_EVENTS = Object.freeze({
    connect: 1,
    connect_error: 1,
    disconnect: 1,
    disconnecting: 1,
    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener
    newListener: 1,
    removeListener: 1,
});
class Socket extends typed_events_1.StrictEventEmitter {
    /**
     * `Socket` constructor.
     *
     * @public
     */
    constructor(io, nsp, opts) {
        super();
        this.receiveBuffer = [];
        this.sendBuffer = [];
        this.ids = 0;
        this.acks = {};
        this.flags = {};
        this.io = io;
        this.nsp = nsp;
        this.ids = 0;
        this.acks = {};
        this.receiveBuffer = [];
        this.sendBuffer = [];
        this.connected = false;
        this.disconnected = true;
        this.flags = {};
        if (opts && opts.auth) {
            this.auth = opts.auth;
        }
        if (this.io._autoConnect)
            this.open();
    }
    /**
     * Subscribe to open, close and packet events
     *
     * @private
     */
    subEvents() {
        if (this.subs)
            return;
        const io = this.io;
        this.subs = [
            on_1.on(io, "open", this.onopen.bind(this)),
            on_1.on(io, "packet", this.onpacket.bind(this)),
            on_1.on(io, "error", this.onerror.bind(this)),
            on_1.on(io, "close", this.onclose.bind(this)),
        ];
    }
    /**
     * Whether the Socket will try to reconnect when its Manager connects or reconnects
     */
    get active() {
        return !!this.subs;
    }
    /**
     * "Opens" the socket.
     *
     * @public
     */
    connect() {
        if (this.connected)
            return this;
        this.subEvents();
        if (!this.io["_reconnecting"])
            this.io.open(); // ensure open
        if ("open" === this.io._readyState)
            this.onopen();
        return this;
    }
    /**
     * Alias for connect()
     */
    open() {
        return this.connect();
    }
    /**
     * Sends a `message` event.
     *
     * @return self
     * @public
     */
    send(...args) {
        args.unshift("message");
        this.emit.apply(this, args);
        return this;
    }
    /**
     * Override `emit`.
     * If the event is in `events`, it's emitted normally.
     *
     * @return self
     * @public
     */
    emit(ev, ...args) {
        if (RESERVED_EVENTS.hasOwnProperty(ev)) {
            throw new Error('"' + ev + '" is a reserved event name');
        }
        args.unshift(ev);
        const packet = {
            type: socket_io_parser_1.PacketType.EVENT,
            data: args,
        };
        packet.options = {};
        packet.options.compress = this.flags.compress !== false;
        // event ack callback
        if ("function" === typeof args[args.length - 1]) {
            debug("emitting packet with ack id %d", this.ids);
            this.acks[this.ids] = args.pop();
            packet.id = this.ids++;
        }
        const isTransportWritable = this.io.engine &&
            this.io.engine.transport &&
            this.io.engine.transport.writable;
        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);
        if (discardPacket) {
            debug("discard packet as the transport is not currently writable");
        }
        else if (this.connected) {
            this.packet(packet);
        }
        else {
            this.sendBuffer.push(packet);
        }
        this.flags = {};
        return this;
    }
    /**
     * Sends a packet.
     *
     * @param packet
     * @private
     */
    packet(packet) {
        packet.nsp = this.nsp;
        this.io._packet(packet);
    }
    /**
     * Called upon engine `open`.
     *
     * @private
     */
    onopen() {
        debug("transport is open - connecting");
        if (typeof this.auth == "function") {
            this.auth((data) => {
                this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data });
            });
        }
        else {
            this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data: this.auth });
        }
    }
    /**
     * Called upon engine or manager `error`.
     *
     * @param err
     * @private
     */
    onerror(err) {
        if (!this.connected) {
            this.emitReserved("connect_error", err);
        }
    }
    /**
     * Called upon engine `close`.
     *
     * @param reason
     * @private
     */
    onclose(reason) {
        debug("close (%s)", reason);
        this.connected = false;
        this.disconnected = true;
        delete this.id;
        this.emitReserved("disconnect", reason);
    }
    /**
     * Called with socket packet.
     *
     * @param packet
     * @private
     */
    onpacket(packet) {
        const sameNamespace = packet.nsp === this.nsp;
        if (!sameNamespace)
            return;
        switch (packet.type) {
            case socket_io_parser_1.PacketType.CONNECT:
                if (packet.data && packet.data.sid) {
                    const id = packet.data.sid;
                    this.onconnect(id);
                }
                else {
                    this.emitReserved("connect_error", new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));
                }
                break;
            case socket_io_parser_1.PacketType.EVENT:
                this.onevent(packet);
                break;
            case socket_io_parser_1.PacketType.BINARY_EVENT:
                this.onevent(packet);
                break;
            case socket_io_parser_1.PacketType.ACK:
                this.onack(packet);
                break;
            case socket_io_parser_1.PacketType.BINARY_ACK:
                this.onack(packet);
                break;
            case socket_io_parser_1.PacketType.DISCONNECT:
                this.ondisconnect();
                break;
            case socket_io_parser_1.PacketType.CONNECT_ERROR:
                const err = new Error(packet.data.message);
                // @ts-ignore
                err.data = packet.data.data;
                this.emitReserved("connect_error", err);
                break;
        }
    }
    /**
     * Called upon a server event.
     *
     * @param packet
     * @private
     */
    onevent(packet) {
        const args = packet.data || [];
        debug("emitting event %j", args);
        if (null != packet.id) {
            debug("attaching ack callback to event");
            args.push(this.ack(packet.id));
        }
        if (this.connected) {
            this.emitEvent(args);
        }
        else {
            this.receiveBuffer.push(Object.freeze(args));
        }
    }
    emitEvent(args) {
        if (this._anyListeners && this._anyListeners.length) {
            const listeners = this._anyListeners.slice();
            for (const listener of listeners) {
                listener.apply(this, args);
            }
        }
        super.emit.apply(this, args);
    }
    /**
     * Produces an ack callback to emit with an event.
     *
     * @private
     */
    ack(id) {
        const self = this;
        let sent = false;
        return function (...args) {
            // prevent double callbacks
            if (sent)
                return;
            sent = true;
            debug("sending ack %j", args);
            self.packet({
                type: socket_io_parser_1.PacketType.ACK,
                id: id,
                data: args,
            });
        };
    }
    /**
     * Called upon a server acknowlegement.
     *
     * @param packet
     * @private
     */
    onack(packet) {
        const ack = this.acks[packet.id];
        if ("function" === typeof ack) {
            debug("calling ack %s with %j", packet.id, packet.data);
            ack.apply(this, packet.data);
            delete this.acks[packet.id];
        }
        else {
            debug("bad ack %s", packet.id);
        }
    }
    /**
     * Called upon server connect.
     *
     * @private
     */
    onconnect(id) {
        debug("socket connected with id %s", id);
        this.id = id;
        this.connected = true;
        this.disconnected = false;
        this.emitBuffered();
        this.emitReserved("connect");
    }
    /**
     * Emit buffered events (received and emitted).
     *
     * @private
     */
    emitBuffered() {
        this.receiveBuffer.forEach((args) => this.emitEvent(args));
        this.receiveBuffer = [];
        this.sendBuffer.forEach((packet) => this.packet(packet));
        this.sendBuffer = [];
    }
    /**
     * Called upon server disconnect.
     *
     * @private
     */
    ondisconnect() {
        debug("server disconnect (%s)", this.nsp);
        this.destroy();
        this.onclose("io server disconnect");
    }
    /**
     * Called upon forced client/server side disconnections,
     * this method ensures the manager stops tracking us and
     * that reconnections don't get triggered for this.
     *
     * @private
     */
    destroy() {
        if (this.subs) {
            // clean subscriptions to avoid reconnections
            this.subs.forEach((subDestroy) => subDestroy());
            this.subs = undefined;
        }
        this.io["_destroy"](this);
    }
    /**
     * Disconnects the socket manually.
     *
     * @return self
     * @public
     */
    disconnect() {
        if (this.connected) {
            debug("performing disconnect (%s)", this.nsp);
            this.packet({ type: socket_io_parser_1.PacketType.DISCONNECT });
        }
        // remove socket from pool
        this.destroy();
        if (this.connected) {
            // fire events
            this.onclose("io client disconnect");
        }
        return this;
    }
    /**
     * Alias for disconnect()
     *
     * @return self
     * @public
     */
    close() {
        return this.disconnect();
    }
    /**
     * Sets the compress flag.
     *
     * @param compress - if `true`, compresses the sending data
     * @return self
     * @public
     */
    compress(compress) {
        this.flags.compress = compress;
        return this;
    }
    /**
     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not
     * ready to send messages.
     *
     * @returns self
     * @public
     */
    get volatile() {
        this.flags.volatile = true;
        return this;
    }
    /**
     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
     * callback.
     *
     * @param listener
     * @public
     */
    onAny(listener) {
        this._anyListeners = this._anyListeners || [];
        this._anyListeners.push(listener);
        return this;
    }
    /**
     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
     * callback. The listener is added to the beginning of the listeners array.
     *
     * @param listener
     * @public
     */
    prependAny(listener) {
        this._anyListeners = this._anyListeners || [];
        this._anyListeners.unshift(listener);
        return this;
    }
    /**
     * Removes the listener that will be fired when any event is emitted.
     *
     * @param listener
     * @public
     */
    offAny(listener) {
        if (!this._anyListeners) {
            return this;
        }
        if (listener) {
            const listeners = this._anyListeners;
            for (let i = 0; i < listeners.length; i++) {
                if (listener === listeners[i]) {
                    listeners.splice(i, 1);
                    return this;
                }
            }
        }
        else {
            this._anyListeners = [];
        }
        return this;
    }
    /**
     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,
     * e.g. to remove listeners.
     *
     * @public
     */
    listenersAny() {
        return this._anyListeners || [];
    }
}
exports.Socket = Socket;


/***/ }),

/***/ 66538:
/*!****************************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/socket.io-client/build/typed-events.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StrictEventEmitter = void 0;
const Emitter = __webpack_require__(/*! component-emitter */ 46184);
/**
 * Strictly typed version of an `EventEmitter`. A `TypedEventEmitter` takes type
 * parameters for mappings of event names to event data types, and strictly
 * types method calls to the `EventEmitter` according to these event maps.
 *
 * @typeParam ListenEvents - `EventsMap` of user-defined events that can be
 * listened to with `on` or `once`
 * @typeParam EmitEvents - `EventsMap` of user-defined events that can be
 * emitted with `emit`
 * @typeParam ReservedEvents - `EventsMap` of reserved events, that can be
 * emitted by socket.io with `emitReserved`, and can be listened to with
 * `listen`.
 */
class StrictEventEmitter extends Emitter {
    /**
     * Adds the `listener` function as an event listener for `ev`.
     *
     * @param ev Name of the event
     * @param listener Callback function
     */
    on(ev, listener) {
        super.on(ev, listener);
        return this;
    }
    /**
     * Adds a one-time `listener` function as an event listener for `ev`.
     *
     * @param ev Name of the event
     * @param listener Callback function
     */
    once(ev, listener) {
        super.once(ev, listener);
        return this;
    }
    /**
     * Emits an event.
     *
     * @param ev Name of the event
     * @param args Values to send to listeners of this event
     */
    emit(ev, ...args) {
        super.emit(ev, ...args);
        return this;
    }
    /**
     * Emits a reserved event.
     *
     * This method is `protected`, so that only a class extending
     * `StrictEventEmitter` can emit its own reserved events.
     *
     * @param ev Reserved event name
     * @param args Arguments to emit along with the event
     */
    emitReserved(ev, ...args) {
        super.emit(ev, ...args);
        return this;
    }
    /**
     * Returns the listeners listening to an event.
     *
     * @param event Event name
     * @returns Array of listeners subscribed to `event`
     */
    listeners(event) {
        return super.listeners(event);
    }
}
exports.StrictEventEmitter = StrictEventEmitter;


/***/ }),

/***/ 41536:
/*!*******************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/socket.io-client/build/url.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.url = void 0;
const parseuri = __webpack_require__(/*! parseuri */ 70326);
const debug = __webpack_require__(/*! debug */ 87807)("socket.io-client:url");
/**
 * URL parser.
 *
 * @param uri - url
 * @param path - the request path of the connection
 * @param loc - An object meant to mimic window.location.
 *        Defaults to window.location.
 * @public
 */
function url(uri, path = "", loc) {
    let obj = uri;
    // default to window.location
    loc = loc || (typeof location !== "undefined" && location);
    if (null == uri)
        uri = loc.protocol + "//" + loc.host;
    // relative path support
    if (typeof uri === "string") {
        if ("/" === uri.charAt(0)) {
            if ("/" === uri.charAt(1)) {
                uri = loc.protocol + uri;
            }
            else {
                uri = loc.host + uri;
            }
        }
        if (!/^(https?|wss?):\/\//.test(uri)) {
            debug("protocol-less url %s", uri);
            if ("undefined" !== typeof loc) {
                uri = loc.protocol + "//" + uri;
            }
            else {
                uri = "https://" + uri;
            }
        }
        // parse
        debug("parse %s", uri);
        obj = parseuri(uri);
    }
    // make sure we treat `localhost:80` and `localhost` equally
    if (!obj.port) {
        if (/^(http|ws)$/.test(obj.protocol)) {
            obj.port = "80";
        }
        else if (/^(http|ws)s$/.test(obj.protocol)) {
            obj.port = "443";
        }
    }
    obj.path = obj.path || "/";
    const ipv6 = obj.host.indexOf(":") !== -1;
    const host = ipv6 ? "[" + obj.host + "]" : obj.host;
    // define unique id
    obj.id = obj.protocol + "://" + host + ":" + obj.port + path;
    // define href
    obj.href =
        obj.protocol +
            "://" +
            host +
            (loc && loc.port === obj.port ? "" : ":" + obj.port);
    return obj;
}
exports.url = url;


/***/ }),

/***/ 80936:
/*!*********************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/socket.io-parser/dist/binary.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.reconstructPacket = exports.deconstructPacket = void 0;
const is_binary_1 = __webpack_require__(/*! ./is-binary */ 46592);
/**
 * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.
 *
 * @param {Object} packet - socket.io event packet
 * @return {Object} with deconstructed packet and list of buffers
 * @public
 */
function deconstructPacket(packet) {
    const buffers = [];
    const packetData = packet.data;
    const pack = packet;
    pack.data = _deconstructPacket(packetData, buffers);
    pack.attachments = buffers.length; // number of binary 'attachments'
    return { packet: pack, buffers: buffers };
}
exports.deconstructPacket = deconstructPacket;
function _deconstructPacket(data, buffers) {
    if (!data)
        return data;
    if (is_binary_1.isBinary(data)) {
        const placeholder = { _placeholder: true, num: buffers.length };
        buffers.push(data);
        return placeholder;
    }
    else if (Array.isArray(data)) {
        const newData = new Array(data.length);
        for (let i = 0; i < data.length; i++) {
            newData[i] = _deconstructPacket(data[i], buffers);
        }
        return newData;
    }
    else if (typeof data === "object" && !(data instanceof Date)) {
        const newData = {};
        for (const key in data) {
            if (data.hasOwnProperty(key)) {
                newData[key] = _deconstructPacket(data[key], buffers);
            }
        }
        return newData;
    }
    return data;
}
/**
 * Reconstructs a binary packet from its placeholder packet and buffers
 *
 * @param {Object} packet - event packet with placeholders
 * @param {Array} buffers - binary buffers to put in placeholder positions
 * @return {Object} reconstructed packet
 * @public
 */
function reconstructPacket(packet, buffers) {
    packet.data = _reconstructPacket(packet.data, buffers);
    packet.attachments = undefined; // no longer useful
    return packet;
}
exports.reconstructPacket = reconstructPacket;
function _reconstructPacket(data, buffers) {
    if (!data)
        return data;
    if (data && data._placeholder) {
        return buffers[data.num]; // appropriate buffer (should be natural order anyway)
    }
    else if (Array.isArray(data)) {
        for (let i = 0; i < data.length; i++) {
            data[i] = _reconstructPacket(data[i], buffers);
        }
    }
    else if (typeof data === "object") {
        for (const key in data) {
            if (data.hasOwnProperty(key)) {
                data[key] = _reconstructPacket(data[key], buffers);
            }
        }
    }
    return data;
}


/***/ }),

/***/ 49915:
/*!********************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/socket.io-parser/dist/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Decoder = exports.Encoder = exports.PacketType = exports.protocol = void 0;
const Emitter = __webpack_require__(/*! component-emitter */ 46184);
const binary_1 = __webpack_require__(/*! ./binary */ 80936);
const is_binary_1 = __webpack_require__(/*! ./is-binary */ 46592);
const debug = __webpack_require__(/*! debug */ 87807)("socket.io-parser");
/**
 * Protocol version.
 *
 * @public
 */
exports.protocol = 5;
var PacketType;
(function (PacketType) {
    PacketType[PacketType["CONNECT"] = 0] = "CONNECT";
    PacketType[PacketType["DISCONNECT"] = 1] = "DISCONNECT";
    PacketType[PacketType["EVENT"] = 2] = "EVENT";
    PacketType[PacketType["ACK"] = 3] = "ACK";
    PacketType[PacketType["CONNECT_ERROR"] = 4] = "CONNECT_ERROR";
    PacketType[PacketType["BINARY_EVENT"] = 5] = "BINARY_EVENT";
    PacketType[PacketType["BINARY_ACK"] = 6] = "BINARY_ACK";
})(PacketType = exports.PacketType || (exports.PacketType = {}));
/**
 * A socket.io Encoder instance
 */
class Encoder {
    /**
     * Encode a packet as a single string if non-binary, or as a
     * buffer sequence, depending on packet type.
     *
     * @param {Object} obj - packet object
     */
    encode(obj) {
        debug("encoding packet %j", obj);
        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {
            if (is_binary_1.hasBinary(obj)) {
                obj.type =
                    obj.type === PacketType.EVENT
                        ? PacketType.BINARY_EVENT
                        : PacketType.BINARY_ACK;
                return this.encodeAsBinary(obj);
            }
        }
        return [this.encodeAsString(obj)];
    }
    /**
     * Encode packet as string.
     */
    encodeAsString(obj) {
        // first is type
        let str = "" + obj.type;
        // attachments if we have them
        if (obj.type === PacketType.BINARY_EVENT ||
            obj.type === PacketType.BINARY_ACK) {
            str += obj.attachments + "-";
        }
        // if we have a namespace other than `/`
        // we append it followed by a comma `,`
        if (obj.nsp && "/" !== obj.nsp) {
            str += obj.nsp + ",";
        }
        // immediately followed by the id
        if (null != obj.id) {
            str += obj.id;
        }
        // json data
        if (null != obj.data) {
            str += JSON.stringify(obj.data);
        }
        debug("encoded %j as %s", obj, str);
        return str;
    }
    /**
     * Encode packet as 'buffer sequence' by removing blobs, and
     * deconstructing packet into object with placeholders and
     * a list of buffers.
     */
    encodeAsBinary(obj) {
        const deconstruction = binary_1.deconstructPacket(obj);
        const pack = this.encodeAsString(deconstruction.packet);
        const buffers = deconstruction.buffers;
        buffers.unshift(pack); // add packet info to beginning of data list
        return buffers; // write all the buffers
    }
}
exports.Encoder = Encoder;
/**
 * A socket.io Decoder instance
 *
 * @return {Object} decoder
 */
class Decoder extends Emitter {
    constructor() {
        super();
    }
    /**
     * Decodes an encoded packet string into packet JSON.
     *
     * @param {String} obj - encoded packet
     */
    add(obj) {
        let packet;
        if (typeof obj === "string") {
            packet = this.decodeString(obj);
            if (packet.type === PacketType.BINARY_EVENT ||
                packet.type === PacketType.BINARY_ACK) {
                // binary packet's json
                this.reconstructor = new BinaryReconstructor(packet);
                // no attachments, labeled binary but no binary data to follow
                if (packet.attachments === 0) {
                    super.emit("decoded", packet);
                }
            }
            else {
                // non-binary full packet
                super.emit("decoded", packet);
            }
        }
        else if (is_binary_1.isBinary(obj) || obj.base64) {
            // raw binary data
            if (!this.reconstructor) {
                throw new Error("got binary data when not reconstructing a packet");
            }
            else {
                packet = this.reconstructor.takeBinaryData(obj);
                if (packet) {
                    // received final buffer
                    this.reconstructor = null;
                    super.emit("decoded", packet);
                }
            }
        }
        else {
            throw new Error("Unknown type: " + obj);
        }
    }
    /**
     * Decode a packet String (JSON data)
     *
     * @param {String} str
     * @return {Object} packet
     */
    decodeString(str) {
        let i = 0;
        // look up type
        const p = {
            type: Number(str.charAt(0)),
        };
        if (PacketType[p.type] === undefined) {
            throw new Error("unknown packet type " + p.type);
        }
        // look up attachments if type binary
        if (p.type === PacketType.BINARY_EVENT ||
            p.type === PacketType.BINARY_ACK) {
            const start = i + 1;
            while (str.charAt(++i) !== "-" && i != str.length) { }
            const buf = str.substring(start, i);
            if (buf != Number(buf) || str.charAt(i) !== "-") {
                throw new Error("Illegal attachments");
            }
            p.attachments = Number(buf);
        }
        // look up namespace (if any)
        if ("/" === str.charAt(i + 1)) {
            const start = i + 1;
            while (++i) {
                const c = str.charAt(i);
                if ("," === c)
                    break;
                if (i === str.length)
                    break;
            }
            p.nsp = str.substring(start, i);
        }
        else {
            p.nsp = "/";
        }
        // look up id
        const next = str.charAt(i + 1);
        if ("" !== next && Number(next) == next) {
            const start = i + 1;
            while (++i) {
                const c = str.charAt(i);
                if (null == c || Number(c) != c) {
                    --i;
                    break;
                }
                if (i === str.length)
                    break;
            }
            p.id = Number(str.substring(start, i + 1));
        }
        // look up json data
        if (str.charAt(++i)) {
            const payload = tryParse(str.substr(i));
            if (Decoder.isPayloadValid(p.type, payload)) {
                p.data = payload;
            }
            else {
                throw new Error("invalid payload");
            }
        }
        debug("decoded %s as %j", str, p);
        return p;
    }
    static isPayloadValid(type, payload) {
        switch (type) {
            case PacketType.CONNECT:
                return typeof payload === "object";
            case PacketType.DISCONNECT:
                return payload === undefined;
            case PacketType.CONNECT_ERROR:
                return typeof payload === "string" || typeof payload === "object";
            case PacketType.EVENT:
            case PacketType.BINARY_EVENT:
                return Array.isArray(payload) && payload.length > 0;
            case PacketType.ACK:
            case PacketType.BINARY_ACK:
                return Array.isArray(payload);
        }
    }
    /**
     * Deallocates a parser's resources
     */
    destroy() {
        if (this.reconstructor) {
            this.reconstructor.finishedReconstruction();
        }
    }
}
exports.Decoder = Decoder;
function tryParse(str) {
    try {
        return JSON.parse(str);
    }
    catch (e) {
        return false;
    }
}
/**
 * A manager of a binary event's 'buffer sequence'. Should
 * be constructed whenever a packet of type BINARY_EVENT is
 * decoded.
 *
 * @param {Object} packet
 * @return {BinaryReconstructor} initialized reconstructor
 */
class BinaryReconstructor {
    constructor(packet) {
        this.packet = packet;
        this.buffers = [];
        this.reconPack = packet;
    }
    /**
     * Method to be called when binary data received from connection
     * after a BINARY_EVENT packet.
     *
     * @param {Buffer | ArrayBuffer} binData - the raw binary data received
     * @return {null | Object} returns null if more binary data is expected or
     *   a reconstructed packet object if all buffers have been received.
     */
    takeBinaryData(binData) {
        this.buffers.push(binData);
        if (this.buffers.length === this.reconPack.attachments) {
            // done with buffer list
            const packet = binary_1.reconstructPacket(this.reconPack, this.buffers);
            this.finishedReconstruction();
            return packet;
        }
        return null;
    }
    /**
     * Cleans up binary packet reconstruction variables.
     */
    finishedReconstruction() {
        this.reconPack = null;
        this.buffers = [];
    }
}


/***/ }),

/***/ 46592:
/*!************************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/socket.io-parser/dist/is-binary.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasBinary = exports.isBinary = void 0;
const withNativeArrayBuffer = typeof ArrayBuffer === "function";
const isView = (obj) => {
    return typeof ArrayBuffer.isView === "function"
        ? ArrayBuffer.isView(obj)
        : obj.buffer instanceof ArrayBuffer;
};
const toString = Object.prototype.toString;
const withNativeBlob = typeof Blob === "function" ||
    (typeof Blob !== "undefined" &&
        toString.call(Blob) === "[object BlobConstructor]");
const withNativeFile = typeof File === "function" ||
    (typeof File !== "undefined" &&
        toString.call(File) === "[object FileConstructor]");
/**
 * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.
 *
 * @private
 */
function isBinary(obj) {
    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||
        (withNativeBlob && obj instanceof Blob) ||
        (withNativeFile && obj instanceof File));
}
exports.isBinary = isBinary;
function hasBinary(obj, toJSON) {
    if (!obj || typeof obj !== "object") {
        return false;
    }
    if (Array.isArray(obj)) {
        for (let i = 0, l = obj.length; i < l; i++) {
            if (hasBinary(obj[i])) {
                return true;
            }
        }
        return false;
    }
    if (isBinary(obj)) {
        return true;
    }
    if (obj.toJSON &&
        typeof obj.toJSON === "function" &&
        arguments.length === 1) {
        return hasBinary(obj.toJSON(), true);
    }
    for (const key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {
            return true;
        }
    }
    return false;
}
exports.hasBinary = hasBinary;


/***/ }),

/***/ 76985:
/*!*********************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/Antrian/antrian-farmasi/antrian-farmasi.component.ts ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AntrianFarmasiComponent": () => (/* binding */ AntrianFarmasiComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var ngx_socket_io__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-socket-io */ 36212);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ 29996);
/* harmony import */ var src_app_modules_dashboard_dokter_services_resep_dokter_resep_dokter_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/modules/dashboard-dokter/services/resep-dokter/resep-dokter.service */ 67085);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_molecules_kanban_v1_mol_kanban_v1_mol_kanban_v1_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../shared/components/molecules/kanban-v1/mol-kanban-v1/mol-kanban-v1.component */ 11147);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ 61116);







let AntrianFarmasiComponent = /*@__PURE__*/ (() => {
    class AntrianFarmasiComponent {
        constructor(socket, router, resepDokterService) {
            this.socket = socket;
            this.router = router;
            this.resepDokterService = resepDokterService;
        }
        ngOnInit() {
            this.resepDokterService.onGetAntrian();
            this.onSocketAntrian();
            this.onSocketPembayaran();
            this.onSocketResep();
            this.ButtonNav = [
                { Id: 'buatResep', Captions: 'Buat Resep', Icons1: 'fa-file-prescription' },
            ];
        }
        onSocketResep() {
            return this.socket.fromEvent('resep-callback')
                .subscribe((_result) => {
                console.log(_result);
                this.resepDokterService.onGetAntrian();
            });
        }
        onSocketAntrian() {
            return this.socket.fromEvent('antrian-callback')
                .subscribe((_result) => {
                console.log(_result);
                this.resepDokterService.onGetAntrian();
            });
        }
        onSocketPembayaran() {
            return this.socket.fromEvent('pembayaran-callback')
                .subscribe((_result) => {
                console.log(_result);
                this.resepDokterService.onGetAntrian();
            });
        }
        onClickButtonNav(args) {
            switch (args) {
                case "buatResep":
                    this.router.navigate(['dashboard/Pharmacy/transaksi-obat/input-resep-irja']);
                    break;
                default:
                    break;
            }
        }
        onTransferItem() {
            let item;
            item = this.Columns[0]["Data"][0];
            this.Columns[0]["Data"].splice(0, 1);
            this.Columns[1]["Data"].push(item);
        }
        onTransferItemUsingDataDetailId(StatusBoardAwal, StatusBoardAkhir, DataDetailId) {
            let item;
            // ** Petakan Column By Board Id Awal
            let From = this.Columns.filter((item) => {
                return item.KeyField == StatusBoardAwal;
            });
            // ** Petakan Column By Board Id Akhir
            let To = this.Columns.filter((item) => {
                return item.KeyField == StatusBoardAkhir;
            });
            // ** Dapatkan Board Awal Data[i]["Id"] 
            let BoardAwalDataIndex = From[0]["Data"].findIndex((item) => {
                return item.Id == DataDetailId;
            });
            if (BoardAwalDataIndex !== -1) {
                // ** Isi Item 
                item = From[0]["Data"][BoardAwalDataIndex];
                // ** Hapus Board Awal 
                From[0]["Data"].splice(BoardAwalDataIndex, 1);
                // ** Isi Column Board Akhir
                To[0]["Data"].push(item);
                item = {};
            }
        }
        handePindahAntrian(noRegister) {
            this.resepDokterService.generadeNoAntrian(noRegister).subscribe((result) => {
                this.resepDokterService.onGetAntrian();
            });
        }
    }
    AntrianFarmasiComponent.ɵfac = function AntrianFarmasiComponent_Factory(t) { return new (t || AntrianFarmasiComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](ngx_socket_io__WEBPACK_IMPORTED_MODULE_4__.Socket), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_5__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](src_app_modules_dashboard_dokter_services_resep_dokter_resep_dokter_service__WEBPACK_IMPORTED_MODULE_0__.ResepDokterService)); };
    AntrianFarmasiComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: AntrianFarmasiComponent, selectors: [["app-antrian-farmasi"]], decls: 3, vars: 4, consts: [[3, "ButtonNav", "onClickButtonNav"], [3, "Columns", "onPindahKeAntrian"]], template: function AntrianFarmasiComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("onClickButtonNav", function AntrianFarmasiComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "mol-kanban-v1", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("onPindahKeAntrian", function AntrianFarmasiComponent_Template_mol_kanban_v1_onPindahKeAntrian_1_listener($event) { return ctx.handePindahAntrian($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpipe"](2, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav);
                _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("Columns", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpipeBind1"](2, 2, ctx.resepDokterService.dataAntrianIrja));
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_1__.OrgCardLayoutComponent, _shared_components_molecules_kanban_v1_mol_kanban_v1_mol_kanban_v1_component__WEBPACK_IMPORTED_MODULE_2__.MolKanbanV1Component], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_6__.AsyncPipe], styles: [""] });
    return AntrianFarmasiComponent;
})();


/***/ }),

/***/ 90554:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irda-daftar/refund-obat-irda-daftar.component.ts ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RefundObatIrdaDaftarComponent": () => (/* binding */ RefundObatIrdaDaftarComponent)
/* harmony export */ });
/* harmony import */ var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/grid.config.json */ 95129);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ 29996);
/* harmony import */ var src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/encryption.service */ 18757);
/* harmony import */ var _services_refund_obat_refund_obat_irda_refund_obat_irda_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/refund-obat/refund-obat-irda/refund-obat-irda.service */ 96861);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_molecules_filter_mol_offcanvas_filter_mol_offcanvas_filter_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/molecules/filter/mol-offcanvas-filter/mol-offcanvas-filter.component */ 82064);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 61116);









const _c0 = ["GridData"];
let RefundObatIrdaDaftarComponent = /*@__PURE__*/ (() => {
    class RefundObatIrdaDaftarComponent {
        constructor(router, encryptionService, refundObatIrdaService) {
            this.router = router;
            this.encryptionService = encryptionService;
            this.refundObatIrdaService = refundObatIrdaService;
            this.ButtonNav = [
                { Id: 'Add', Captions: 'Add', Icons1: 'fa-plus fa-sm' },
                { Id: 'Edit', Captions: 'Lihat Detail', Icons1: 'fa-edit fa-sm' }
            ];
            this.GridDataToolbar = [
                { text: 'Add', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-sm', id: 'add' },
                { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
                { text: 'Detail', tooltipText: 'Detail', prefixIcon: 'fas fa-info-circle fa-sm', id: 'detail' },
                'Search'
            ];
            this.FilterColumnDatasource = [
                { text: 'No. Refund', value: 'tpo.nomor_retur_penjualan_obat' },
                { text: 'No. Penjualan', value: 'tpo.nomor_penjualan_obat' },
                { text: 'Nama Outlet', value: 'pso.nama_outlet' },
                { text: 'Status Refund', value: 'tpo.judul_kontrak' },
            ];
            this.GridConfig = /*#__PURE__*/ (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
        }
        ngAfterViewInit() {
            // this.GridData.Grid.refresh();
            this.handlePencarianFilter([]);
        }
        ngOnInit() {
        }
        handlePencarianFilter(args) {
            this.refundObatIrdaService.onGetAllByParamsSource(args);
            // setTimeout(()=>{
            // this.GridData.Grid.refresh();
            // },500)
        }
        handleinitialized(component) {
            this.GridData = component;
        }
        handleClickButtonNav(args) {
            switch (args) {
                case 'Add':
                    this.router.navigateByUrl('dashboard/Pharmacy/refund-obat/refund-obat-irda');
                    break;
                case 'Edit':
                    const id = this.encryptionService.encrypt(JSON.stringify(this.SelectedData.retur_penjualan_obat_id));
                    this.router.navigate(['dashboard/Pharmacy/refund-obat/refund-obat-irda-detail', id, "GRAHCIS"]);
                    break;
                case 'Delete':
                    // this.DeleteData(this.SelectedData.id_person, this.SelectedData['is_active']);
                    break;
                default:
                    break;
            }
        }
        handleSelectedRow(args) {
            this.SelectedData = args.data;
            console.log(this.SelectedData);
        }
        handleRowDataBound(args) {
            let status_transaksi = args.data.status_transaksi;
            if (status_transaksi == "VALIDATED") {
                args.row.classList.add('e-validation-background');
            }
            if (status_transaksi == "CANCELED") {
                args.row.classList.add('e-canceled-background');
            }
            if (status_transaksi == "CLOSED") {
                args.row.classList.add('e-closed-background');
            }
        }
    }
    RefundObatIrdaDaftarComponent.ɵfac = function RefundObatIrdaDaftarComponent_Factory(t) { return new (t || RefundObatIrdaDaftarComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_7__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_1__.EncryptionService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_services_refund_obat_refund_obat_irda_refund_obat_irda_service__WEBPACK_IMPORTED_MODULE_2__.RefundObatIrdaService)); };
    RefundObatIrdaDaftarComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({ type: RefundObatIrdaDaftarComponent, selectors: [["app-refund-obat-irda-daftar"]], viewQuery: function RefundObatIrdaDaftarComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵviewQuery"](_c0, 5);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵloadQuery"]()) && (ctx.GridData = _t.first);
            }
        }, decls: 8, vars: 9, consts: [[3, "ButtonNav", "onClickButtonNav"], [1, "row", "pt-2"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "mb-2"], [3, "FilterColumnDatasource", "handle-pencarian"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], [3, "grid-height", "grid-DataSource", "grid-paging", "grid-lines", "columns", "row-selected", "row-data-bound"], ["GridData", ""]], template: function RefundObatIrdaDaftarComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onClickButtonNav", function RefundObatIrdaDaftarComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.handleClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "div", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](2, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "mol-offcanvas-filter", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("handle-pencarian", function RefundObatIrdaDaftarComponent_Template_mol_offcanvas_filter_handle_pencarian_3_listener($event) { return ctx.handlePencarianFilter($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](4, "div", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](5, "mol-grid", 5, 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("row-selected", function RefundObatIrdaDaftarComponent_Template_mol_grid_row_selected_5_listener($event) { return ctx.handleSelectedRow($event); })("row-data-bound", function RefundObatIrdaDaftarComponent_Template_mol_grid_row_data_bound_5_listener($event) { return ctx.handleRowDataBound($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpipe"](7, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("FilterColumnDatasource", ctx.FilterColumnDatasource);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("grid-height", "calc(100vh - 19rem)")("grid-DataSource", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpipeBind1"](7, 7, ctx.refundObatIrdaService.dataSource))("grid-paging", true)("grid-lines", "Both")("columns", ctx.GridConfig.GridColumns);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__.OrgCardLayoutComponent, _shared_components_molecules_filter_mol_offcanvas_filter_mol_offcanvas_filter_component__WEBPACK_IMPORTED_MODULE_4__.MolOffcanvasFilterComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_5__.MolGridComponent], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.AsyncPipe], styles: [""] });
    return RefundObatIrdaDaftarComponent;
})();


/***/ }),

/***/ 27286:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irda-detail/refund-obat-irda-detail.component.ts ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_detailItem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RefundObatIrdaDetailComponent": () => (/* binding */ RefundObatIrdaDetailComponent)
/* harmony export */ });
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sweetalert2 */ 22501);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _json_detailItem_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./json/detailItem.json */ 1584);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _services_refund_obat_refund_obat_irda_refund_obat_irda_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/refund-obat/refund-obat-irda/refund-obat-irda.service */ 96861);
/* harmony import */ var src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/encryption.service */ 18757);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/router */ 29996);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/common */ 61116);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-bootstrap/modal */ 75470);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);
/* harmony import */ var _shared_components_molecules_form_mol_input_textarea_mol_input_textarea_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-textarea/mol-input-textarea.component */ 93989);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _shared_components_molecules_form_mol_input_numeric_mol_input_numeric_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-numeric/mol-input-numeric.component */ 13864);















const _c0 = ["modalCanceled"];
const _c1 = ["modalClosed"];
function RefundObatIrdaDetailComponent_ng_template_16_Template(rf, ctx) {
    if (rf & 1) {
        const _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h5", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2, "Canceled");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "button", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function RefundObatIrdaDetailComponent_ng_template_16_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r3); const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r2.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "i", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "label", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "strong");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](10, "Reason Cancel");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](11, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "input", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "button", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function RefundObatIrdaDetailComponent_ng_template_16_Template_button_click_14_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r3); const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r4.onCalceled(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](15, "Cancel Data");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "button", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function RefundObatIrdaDetailComponent_ng_template_16_Template_button_click_16_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r3); const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r5.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](17, "Batal");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    }
}
let RefundObatIrdaDetailComponent = /*@__PURE__*/ (() => {
    class RefundObatIrdaDetailComponent {
        constructor(formBuilder, refundObatIrdaService, encryptionService, activatedRoute, location, utilityService, modalService) {
            this.formBuilder = formBuilder;
            this.refundObatIrdaService = refundObatIrdaService;
            this.encryptionService = encryptionService;
            this.activatedRoute = activatedRoute;
            this.location = location;
            this.utilityService = utilityService;
            this.modalService = modalService;
            this.inputFieldState = 'detail';
            this.ButtonNav = [
                { Id: 'Back', Captions: 'Back', Icons1: 'fa-chevron-left' },
                { Id: 'Validasi', Captions: 'Validasi', Icons1: 'fa-check' },
                { Id: 'Cancel', Captions: 'Cancel', Icons1: 'fa-times' }
            ];
            this.ConfigGrid = /*#__PURE__*/ (_json_detailItem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (_json_detailItem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(_json_detailItem_json__WEBPACK_IMPORTED_MODULE_1__, 2)));
        }
        ngOnInit() {
            this.formInput = this.formBuilder.group({
                nomor_retur_penjualan_obat: ["",],
                tanggal_retur_penjualan_obat: [null,],
                nama_outlet: ["",],
                keterangan_retur_penjualan_obat: ["",],
                jumlah_item_retur: [0,],
            });
        }
        ngAfterViewInit() {
            let id = this.encryptionService.decrypt(this.activatedRoute.snapshot.params["id"]);
            this.id = parseInt(id);
            console.log(id);
            this.onLoadDetailData(id);
        }
        onLoadDetailData(id) {
            this.refundObatIrdaService.onGetById(id).subscribe((result) => {
                this.formInput.setValue({
                    nomor_retur_penjualan_obat: result.data.nomor_retur_penjualan_obat,
                    tanggal_retur_penjualan_obat: result.data.tanggal_retur_penjualan_obat,
                    nama_outlet: result.data.nama_outlet,
                    keterangan_retur_penjualan_obat: result.data.keterangan_retur_penjualan_obat,
                    jumlah_item_retur: result.data.jumlah_item_retur,
                });
                this.refundObatIrdaService.setDetail(id);
            });
        }
        onClickButtonNav(ButtonId) {
            switch (ButtonId) {
                case 'Back':
                    this.location.back();
                    break;
                case 'Validasi':
                    sweetalert2__WEBPACK_IMPORTED_MODULE_0___default().fire({
                        title: 'Apakah anda yakin ingin validasi?',
                        text: "",
                        icon: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Iya Validasi',
                        cancelButtonText: 'Tidak',
                        focusCancel: true,
                    }).then((result) => {
                        if (result.isConfirmed) {
                            this.onValidation();
                        }
                    });
                    break;
                case 'Cancel':
                    this.modalRef = this.modalService.show(this.modalCanceled, Object.assign({}, { class: 'modal-lg' }));
                    break;
                case 'Close':
                    this.modalRef = this.modalService.show(this.modalClosed, Object.assign({}, { class: 'modal-lg' }));
                    break;
                default:
                    break;
            }
        }
        onValidation() {
            this.refundObatIrdaService.Validation(this.id).subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Data Refund Berhasil Di Validasi', result.message)
                    .then(() => {
                    this.onLoadDetailData(this.id);
                });
            });
        }
        onCalceled() {
            let reason_canceled = document.getElementsByName("reason_canceled")[0].value;
            this.refundObatIrdaService.Cancel(this.id, reason_canceled).subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Data Refund Berhasil Di Cancel', result.message)
                    .then(() => {
                    this.onLoadDetailData(this.id);
                    this.modalRef.hide();
                });
            });
        }
    }
    RefundObatIrdaDetailComponent.ɵfac = function RefundObatIrdaDetailComponent_Factory(t) { return new (t || RefundObatIrdaDetailComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_services_refund_obat_refund_obat_irda_refund_obat_irda_service__WEBPACK_IMPORTED_MODULE_2__.RefundObatIrdaService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_3__.EncryptionService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_13__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_14__.Location), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_4__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_5__.BsModalService)); };
    RefundObatIrdaDetailComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: RefundObatIrdaDetailComponent, selectors: [["app-refund-obat-irda-detail"]], viewQuery: function RefundObatIrdaDetailComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c0, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c1, 5);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.modalCanceled = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.modalClosed = _t.first);
            }
        }, decls: 18, vars: 18, consts: [[3, "ButtonNav", "onClickButtonNav"], [3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "mb-2"], ["formControlName", "nomor_retur_penjualan_obat", 3, "label", "inputFieldState"], ["formControlName", "tanggal_retur_penjualan_obat", 3, "label", "inputFieldState"], ["formControlName", "nama_outlet", 3, "label", "inputFieldState"], ["formControlName", "keterangan_retur_penjualan_obat", 3, "label", "inputFieldState"], [3, "grid-DataSource", "columns"], [1, "row"], [1, "col-sm-5"], [1, "col-sm-4"], [1, "col-sm-3"], ["formControlName", "jumlah_item_retur", 3, "label", "isFooter", "inputFieldState"], ["modalCanceled", ""], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body", "p-10"], [1, "row", "mx-0", "my-1"], ["for", "reason_canceled"], [1, "col-sm-8"], ["type", "text", "name", "reason_canceled", 1, "form-control", "form-control-sm"], [1, "modal-footer", "background-abu-muda"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], ["type", "button", 1, "btn", "btn-danger", 3, "click"]], template: function RefundObatIrdaDetailComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClickButtonNav", function RefundObatIrdaDetailComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "form", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "mol-input-text", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "mol-input-text", 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](7, "mol-input-text", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](8, "mol-input-textarea", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](9, "mol-grid", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpipe"](10, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](11, "div", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "div", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "div", 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "mol-input-numeric", 13);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](16, RefundObatIrdaDetailComponent_ng_template_16_Template, 18, 0, "ng-template", null, 14, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.formInput);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "No Retur")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Tanggal Retur")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Outlet")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Keterangan")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("grid-DataSource", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpipeBind1"](10, 16, ctx.refundObatIrdaService.dataDetail$))("columns", ctx.ConfigGrid.TrDetail);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Jumlah Item")("isFooter", true)("inputFieldState", "detail")("inputFieldState", "detail");
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_6__.OrgCardLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_7__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _shared_components_molecules_form_mol_input_textarea_mol_input_textarea_component__WEBPACK_IMPORTED_MODULE_8__.MolInputTextareaComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_9__.MolGridComponent, _shared_components_molecules_form_mol_input_numeric_mol_input_numeric_component__WEBPACK_IMPORTED_MODULE_10__.MolInputNumericComponent], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_14__.AsyncPipe], styles: [""] });
    return RefundObatIrdaDetailComponent;
})();


/***/ }),

/***/ 68425:
/*!***************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irda/refund-obat-irda.component.ts ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_LookupGridNoRegistrasi_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache;
var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
var _json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RefundObatIrdaComponent": () => (/* binding */ RefundObatIrdaComponent)
/* harmony export */ });
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 70654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ 31305);
/* harmony import */ var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/lookupitem.json */ 49755);
/* harmony import */ var _json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./json/gridPasien.config.json */ 55214);
/* harmony import */ var _json_LookupGridNoRegistrasi_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./json/LookupGridNoRegistrasi.json */ 94421);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _services_refund_obat_refund_obat_irda_refund_obat_irda_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../services/refund-obat/refund-obat-irda/refund-obat-irda.service */ 96861);
/* harmony import */ var src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/modules/shared/services/encryption.service */ 18757);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/router */ 29996);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/common */ 61116);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ 75470);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var src_app_modules_MM_services_setup_data_setup_item_setup_item_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/modules/MM/services/setup-data/setup-item/setup-item.service */ 13166);
/* harmony import */ var _services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../services/setup-data/setup-outlet/setup-outlet.service */ 47862);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_organism_loockUp_org_input_look_up_org_input_look_up_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/components/organism/loockUp/org-input-look-up/org-input-look-up.component */ 34550);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../shared/components/atoms/form/atm-label/atm-label.component */ 73391);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 34594);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 34903);






















const _c0 = ["LookupNoRegistrasi"];
const _c1 = ["gridDetail"];
const _c2 = ["LookupItem"];
const _c3 = ["modalQty"];
const _c4 = ["modalSatuan"];
const _c5 = ["modalCanceled"];
function RefundObatIrdaComponent_ng_template_38_Template(rf, ctx) {
    if (rf & 1) {
        const _r11 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "h5", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](2, "Edit Qty");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](3, "button", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function RefundObatIrdaComponent_ng_template_38_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r11); const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r10.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](4, "i", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](5, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](6, "div", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](7, "div", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](8, "input", 42, 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("keydown.enter", function RefundObatIrdaComponent_ng_template_38_Template_input_keydown_enter_8_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r11); const _r9 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵreference"](9); const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r12.handleQtyChange(_r9.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](10, "div", 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](11, "button", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](12, "Oke");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    }
}
function RefundObatIrdaComponent_ng_template_40_option_10_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "option", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const item_r15 = ctx.$implicit;
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ngValue", item_r15.kode_satuan);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtextInterpolate1"]("", item_r15.kode_satuan, " ");
    }
}
function RefundObatIrdaComponent_ng_template_40_Template(rf, ctx) {
    if (rf & 1) {
        const _r17 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "h5", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](2, "Edit Satuan");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](3, "button", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function RefundObatIrdaComponent_ng_template_40_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r17); const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r16.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](4, "i", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](5, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](6, "div", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](7, "div", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](8, "select", 46, 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("keydown.enter", function RefundObatIrdaComponent_ng_template_40_Template_select_keydown_enter_8_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r17); const _r13 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵreference"](9); const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r18.handleSatuanChange(_r13.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplate"](10, RefundObatIrdaComponent_ng_template_40_option_10_Template, 2, 2, "option", 48);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](11, "div", 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](12, "button", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](13, "Oke");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("value", ctx_r6.detailSelected.kode_satuan_besar);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ngForOf", ctx_r6.datasatuan);
    }
}
function RefundObatIrdaComponent_ng_template_42_Template(rf, ctx) {
    if (rf & 1) {
        const _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "h5", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](2, "Canceled");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](3, "button", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function RefundObatIrdaComponent_ng_template_42_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r20); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r19.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](4, "i", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](5, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](6, "div", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](7, "div", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](8, "label", 51);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](9, "strong");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](10, "Reason Cancel");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](11, "div", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](12, "input", 53);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](13, "div", 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](14, "button", 54);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function RefundObatIrdaComponent_ng_template_42_Template_button_click_14_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r20); const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r21.onCalceled(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](15, "Cancel Data");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](16, "button", 55);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function RefundObatIrdaComponent_ng_template_42_Template_button_click_16_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r20); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r22.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](17, "Batal");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    }
}
let RefundObatIrdaComponent = /*@__PURE__*/ (() => {
    class RefundObatIrdaComponent {
        constructor(formBuilder, refundObatIrdaService, encryptionService, activatedRoute, location, renderer, modalService, changeDetection, utilityService, setupItemService, setupOutletService) {
            this.formBuilder = formBuilder;
            this.refundObatIrdaService = refundObatIrdaService;
            this.encryptionService = encryptionService;
            this.activatedRoute = activatedRoute;
            this.location = location;
            this.renderer = renderer;
            this.modalService = modalService;
            this.changeDetection = changeDetection;
            this.utilityService = utilityService;
            this.setupItemService = setupItemService;
            this.setupOutletService = setupOutletService;
            this.SetupOutletDropdownField = { text: 'nama_outlet', value: 'id_outlet' };
            this.urlNoRegistrasi = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_3__.PHARMACY.RETUR_PENJUALAN.RETUR_PENJUALAN_OBAT_IRDA.GET_PASIEN_IRDA;
            this.LookupGridNoRegistrasi = /*#__PURE__*/ (_json_LookupGridNoRegistrasi_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (_json_LookupGridNoRegistrasi_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(_json_LookupGridNoRegistrasi_json__WEBPACK_IMPORTED_MODULE_2__, 2)));
            this.inputFieldState = 'detail';
            this.ButtonNav = [
                { Id: 'Back', Captions: 'Back', Icons1: 'fa-chevron-left' },
                { Id: 'Reset', Captions: 'Reset', Icons1: 'fas fa-undo fa-sm' },
                { Id: 'simpan', Captions: 'simpan', Icons1: 'fa-save' },
            ];
            this.GridDataEditSettings = { allowEditing: true };
            this.GridLookUpItem = /*#__PURE__*/ (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
            this.GridConfig = /*#__PURE__*/ (_json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (_json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(_json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1__, 2)));
            this.subscriptions = [];
            this.counterChildGrid = 0;
            this.datasatuan = [];
            this.childGridSatuan = [];
            this.id_stockroom = 0;
            this.dataSourceGrid = new rxjs__WEBPACK_IMPORTED_MODULE_15__.BehaviorSubject([]);
            this.dataScourceGridChild = [];
            this.totalJumlahItem = new rxjs__WEBPACK_IMPORTED_MODULE_15__.BehaviorSubject(0);
            this.itemBatch = [];
            this.id_item = new rxjs__WEBPACK_IMPORTED_MODULE_15__.BehaviorSubject(0);
            //=========
            this.id = 0;
        }
        ngOnInit() {
            this.formInput = this.formBuilder.group({
                id_register: ['',],
                depo: ['',],
                debitur: ['',],
                nama_pasien: ['',],
                no_rm: ['',],
                no_register: ['',],
                dokter: ['',],
                umur: ['',],
                alamat: ['',],
                poli: ['',],
            });
            let id_item = this.id_item;
            let currentChildGird = null;
            this.itemsParams = {
                create: () => {
                    this.itemsElem = document.createElement('input');
                    return this.itemsElem;
                },
                read: () => {
                    return this.itemsObj.text;
                },
                destroy: () => {
                    this.itemsObj.destroy();
                },
                write: () => {
                    this.setupItemService.onGetEDItem(this.id_stockroom, id_item.value).subscribe((result) => {
                        this.itemsObj = new _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_16__.DropDownList({
                            value: '',
                            dataSource: result.data,
                            fields: { value: 'batch_number', text: 'batch_number' },
                            enabled: true,
                            placeholder: 'Select a Batch',
                            floatLabelType: 'Never',
                            change: function (args) {
                                this.setFormGrif(args);
                                id_item.next(args.itemData.id_item);
                            }.bind(this),
                        });
                        this.itemsObj.appendTo(this.itemsElem);
                    });
                    if (currentChildGird) {
                        setTimeout(() => {
                            this.itemsObj.value = currentChildGird.batch_number;
                        }, 500);
                    }
                }
            };
            let dataSourceChild = this.dataScourceGridChild;
            let counterChildGrid = this.counterChildGrid;
            let dataSourceGrid = this.dataSourceGrid;
            let totalJumlahItem = this.totalJumlahItem;
            this.ChildGrid = {
                dataSource: this.dataScourceGridChild,
                queryString: "penjualan_obat_detail_id",
                rowHeight: 30,
                allowResizing: true,
                allowTextWrap: false,
                textWrapSettings: { wrapMode: 'Both' },
                toolbar: ['Add', 'Edit', 'Delete', 'Update', 'Cancel'],
                editSettings: { allowEditing: true, allowAdding: true, allowDeleting: true },
                columns: [
                    { field: "penjualan_obat_id", headerText: 'penjualan_obat_id', width: 100, visible: false },
                    { field: "penjualan_obat_detail_id", headerText: 'penjualan_obat_detail_id', width: 100, visible: false },
                    { field: "no_urut", headerText: 'urut', visible: false },
                    { field: "id_item", headerText: 'id_item', width: 100, visible: false },
                    // { field: "batch_number", headerText: 'Batch Number', editType: 'dropdownedit', edit: this.itemsParams, width: 200 },
                    { field: "batch_number", headerText: 'Batch Number', textAlign: 'Right', width: 200 },
                    { field: "expired_date", headerText: 'Expired Date', textAlign: 'Right', width: 80, editType: "datepickeredit", format: "dd MMMM yyyy" },
                    { field: "qty_besar", headerText: 'Banyak', visible: false, headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                    { field: "satuan", headerText: 'Satuan', visible: false, editType: 'dropdownedit', edit: this.satuanParams, width: 200 },
                    { field: "isi", headerText: 'Isi', visible: false, headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2', allowEditing: false },
                    { field: "qty_retur_penjualan_obat", headerText: 'Qty', headerTextAlign: 'Center', textAlign: 'Right', width: 50, format: 'N2', allowEditing: true },
                    { field: "nama_satuan", headerText: 'Satuan', headerTextAlign: 'Center', textAlign: 'Left', width: 100, format: 'N2', allowEditing: false, visible: false },
                    { field: "harga_satuan_retur", headerText: '', headerTextAlign: 'Center', textAlign: 'Right', width: 1, format: 'N2', allowEditing: false, visible: false },
                    { field: "sub_total", headerText: '', headerTextAlign: 'Center', textAlign: 'Right', width: 1, format: 'N2', allowEditing: false, visible: false },
                ],
                rowSelected(args) {
                    currentChildGird = args.data;
                },
                actionBegin(args) {
                    if (args.requestType === 'add') {
                        args.data['id_item'] = this.parentDetails.parentRowData.id_item;
                        args.data['penjualan_obat_id'] = this.parentDetails.parentRowData.penjualan_obat_id;
                        args.data['penjualan_obat_detail_id'] = this.parentDetails.parentRowData.penjualan_obat_detail_id;
                        args.data['harga_satuan_retur'] = this.parentDetails.parentRowData.harga_satuan;
                        args.data['counterChildGrid'] = counterChildGrid++;
                        id_item.next(this.parentDetails.parentRowData.id_item);
                    }
                    // if (args.requestType === 'beginEdit'){
                    //     SelectedDataRacikanObat = args.rowData;
                    // }
                },
                actionComplete(args) {
                    if (args.requestType === 'save') {
                        console.log('complete', args);
                        if (args.action === 'add') {
                            dataSourceChild.push(args.data);
                        }
                        if (args.action === 'edit') {
                            let index = dataSourceChild.map((item) => { return item.counterChildGrid; }).indexOf(args.data.counterChildGrid);
                            dataSourceChild[index] = args.data;
                        }
                        let data = [];
                        dataSourceGrid.value.forEach((itemPrent, indexPrent) => {
                            let total = 0;
                            dataSourceChild.forEach((item, index) => {
                                if (itemPrent.id_item == item.id_item) {
                                    total = total + parseInt(item.qty_retur_penjualan_obat);
                                }
                            });
                            itemPrent.qty_retur = total;
                            data.push(itemPrent);
                        });
                        // setTimeout(()=>{
                        dataSourceGrid.next(data);
                        totalJumlahItem.next(data.sum('qty_retur'));
                        // console.log(data);
                        // },500)
                    }
                    if (args.requestType === "delete") {
                        let index = dataSourceChild.map((item) => { return item.counterChildGrid; }).indexOf(args.data[0].counterChildGrid);
                        dataSourceChild.splice(index, 1);
                        let data = [];
                        dataSourceGrid.value.forEach((itemPrent, indexPrent) => {
                            let total = 0;
                            dataSourceChild.forEach((item, index) => {
                                if (itemPrent.id_item == item.id_item) {
                                    total = total + parseInt(item.qty_pemakaian_internal);
                                }
                            });
                            itemPrent.qty = total;
                            data.push(itemPrent);
                        });
                        setTimeout(() => {
                            dataSourceGrid.next(data);
                            console.log(data);
                        }, 500);
                    }
                }
            };
            this.globalListenFunc = this.renderer.listen('document', 'keydown', e => {
                if (e.keyCode == 112) {
                    this.LookupItem.onOpenModal();
                    e.preventDefault();
                }
            });
            this.GridDetailToolbar = [
                { text: '| [*]=Ubah Banyak | [+]=Satuan |', }
            ];
            this.setupOutletService.setDataSource();
        }
        ngAfterViewInit() {
            // let pemesanan_id = this.encryptionService.decrypt(this.activatedRoute.snapshot.params["id"]);
            // console.log(pemesanan_id);
            // this.onLoadDetailData(pemesanan_id);
        }
        onDataBound() {
            this.gridDetail.detailRowModule.expandAll();
        }
        setFormGrif(args) {
            document.getElementsByName("expired_date")[0].value = args.itemData.expired_date;
            document.getElementsByName("nama_satuan")[0].value = args.itemData.nama_satuan;
            document.getElementsByName("hpp_satuan")[0].value = args.itemData.harga_satuan_netto;
        }
        heandleSelectedNoRegistrasi(args) {
            this.formInput.setValue({
                id_register: args.id_register,
                depo: this.depo.value,
                debitur: args.nama_debitur,
                nama_pasien: args.nama_pasien,
                no_rm: args.no_rekam_medis,
                no_register: args.no_register,
                dokter: args.nama_dokter,
                umur: args.umur,
                alamat: args.alamat_pasien,
                poli: args.nama_poli,
            });
        }
        handleClickRefesh() {
            if (this.depo.value == '') {
                this.utilityService.onShowingCustomAlert('warning', 'Validasi', 'Depo belum di pilih');
                return false;
            }
            this.refundObatIrdaService.getDetailPenjualan(this.depo.value, this.id_register.value).subscribe((result) => {
                result.data.map((e, i) => {
                    return e.qty = 0;
                });
                this.dataSourceGrid.next(result.data);
            });
        }
        /** untuk identifikasi keyboard down pada grid */
        handleLoadGrid(args) {
            document.getElementsByClassName('e-grid')[0].addEventListener('keydown', this.KeyDownHandler.bind(this));
        }
        handleSelectdRow(args) {
            this.currentIndex = args.rowIndex;
            this.datasatuan = args.data.satuans;
            this.detailSelected = args.data;
            this.satuanVal = args.data.kode_satuan_besar;
        }
        handleActionCompleted($event) {
            if ($event.requestType == 'save') {
                console.log($event);
                this.refundObatIrdaService.updateFromInline($event.rowIndex, $event.data, $event.rowData);
                this.gridDetail.refresh();
            }
            // console.log('complate parent',this.gridDetail.childGrid.dataSource);
        }
        KeyDownHandler(event) {
            if (event.keyCode === 106) {
                this.onOpenQty();
            }
            ;
            if (event.keyCode === 46) {
                this.refundObatIrdaService.removeDataDetail(this.currentIndex);
                this.gridDetail.refresh();
                setTimeout(() => {
                    if (this.currentIndex != 0) {
                        this.gridDetail.selectedRowIndex = 0;
                    }
                }, 100);
            }
            ;
            //   if (event.keyCode === 111) {
            //       this.onOpenHarga()
            //   }
            //   if (event.keyCode === 109) {
            //       this.onOpenSubtotal()
            //   }
            if (event.keyCode === 107) {
                this.onOpenSatuan();
            }
        }
        onToolbarClick(args) {
            const item = args.item.id;
            switch (item) {
                case 'add':
                    this.LookupItem.onOpenModal();
                    break;
                default:
                    break;
            }
        }
        onOpenQty() {
            const _combine = (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.combineLatest)(this.modalService.onShow, this.modalService.onHidden).subscribe(() => this.changeDetection.markForCheck());
            this.subscriptions.push(this.modalService.onShown.subscribe(() => {
                setTimeout(() => {
                    document.getElementById("QtyValueId").focus();
                }, 100);
            }));
            this.subscriptions.push(this.modalService.onHidden.subscribe((reason) => {
                this.gridDetail.selectedRowIndex = this.currentIndex;
                this.gridDetail.selectRows([this.currentIndex]);
                this.unsubscribe();
            }));
            this.subscriptions.push(_combine);
            this.modalRef = this.modalService.show(this.modalQty, Object.assign({}, { class: 'modal-lg' }));
        }
        onOpenSatuan() {
            const _combine = (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.combineLatest)(this.modalService.onShown, this.modalService.onHidden).subscribe(() => this.changeDetection.markForCheck());
            this.subscriptions.push(this.modalService.onShown.subscribe(() => {
                setTimeout(() => {
                    document.getElementById("SatuanValueId").focus();
                }, 100);
            }));
            this.subscriptions.push(this.modalService.onHidden.subscribe((reason) => {
                this.gridDetail.selectedRowIndex = this.currentIndex;
                this.gridDetail.selectRows([this.currentIndex]);
                this.unsubscribe();
            }));
            this.subscriptions.push(_combine);
            this.modalRef = this.modalService.show(this.modalSatuan, Object.assign({}, { class: 'modal-lg' }));
        }
        unsubscribe() {
            this.subscriptions.forEach((subscription) => {
                subscription.unsubscribe();
            });
            this.subscriptions = [];
        }
        selectLastRowdetail() {
            setTimeout(() => {
                let last = this.gridDetail.dataSource;
                this.gridDetail.selectedRowIndex = last.length - 1;
            }, 150);
        }
        onSave() {
            if (this.formInput.valid) {
                let data = this.formInput.value;
                this.dataScourceGridChild.map((e, i) => {
                    e.sub_total = e.qty_retur_penjualan_obat * e.harga_satuan_retur;
                    e.no_urut = i + 1;
                    return e;
                });
                data.jumlah_item_retur = this.dataScourceGridChild.sum('qty_retur_penjualan_obat');
                data.total_transaksi_retur = this.dataScourceGridChild.sum('sub_total');
                data.nomor_retur_penjualan_obat = '23135';
                data.tanggal_retur_penjualan_obat = '2021-12-10';
                data.id_outlet_terima_retur = this.depo.value;
                console.log('data header', data);
                console.log('data detail', this.dataScourceGridChild);
                data.details = this.dataScourceGridChild;
                console.log('data', data);
                this.refundObatIrdaService.Insert(data).subscribe((result) => {
                    console.log(result);
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Refund Obat', result.message)
                        .then(() => {
                        this.onReset();
                    });
                });
            }
            else {
                alert('isi semua data');
            }
        }
        onReset() {
            this.formInput.reset();
            this.dataScourceGridChild = [];
            this.dataSourceGrid.next([]);
            this.ChildGrid.dataSource = [];
        }
        onClickButtonNav(ButtonId) {
            switch (ButtonId) {
                case 'Back':
                    this.location.back();
                    break;
                case 'Reset':
                    this.onReset();
                    break;
                case "simpan":
                    // this.dataScourceGridChild;
                    this.onSave();
                    break;
                default:
                    break;
            }
        }
        get id_register() { return this.formInput.get('id_register'); }
        get depo() { return this.formInput.get('depo'); }
    }
    RefundObatIrdaComponent.ɵfac = function RefundObatIrdaComponent_Factory(t) { return new (t || RefundObatIrdaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_services_refund_obat_refund_obat_irda_refund_obat_irda_service__WEBPACK_IMPORTED_MODULE_4__.RefundObatIrdaService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_5__.EncryptionService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_19__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_20__.Location), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_14__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__.BsModalService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_14__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_7__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_modules_MM_services_setup_data_setup_item_setup_item_service__WEBPACK_IMPORTED_MODULE_8__.SetupItemService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_9__.SetupOutletService)); };
    RefundObatIrdaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdefineComponent"]({ type: RefundObatIrdaComponent, selectors: [["app-refund-obat-irda"]], viewQuery: function RefundObatIrdaComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c0, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c1, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c2, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c3, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c4, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c5, 5);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.LookupNoRegistrasi = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.gridDetail = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.LookupItem = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.modalQty = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.modalSatuan = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.modalCanceled = _t.first);
            }
        }, decls: 44, vars: 55, consts: [[3, "ButtonNav", "onClickButtonNav"], [3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "mb-2"], [3, "lookup-url", "idTitle", "modal-title", "columns", "filter-lookup", "label", "onGetSelectedData"], ["LookupNoRegistrasi", ""], ["formControlName", "no_rm", 3, "label", "inputFieldState"], ["formControlName", "debitur", 3, "label", "inputFieldState"], ["formControlName", "nama_pasien", 3, "label", "inputFieldState"], ["formControlName", "umur", 3, "label", "inputFieldState"], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2", "mb-2"], ["type", "button", 1, "btn", "btn-sm", "btn-primary", 3, "click"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "LabelCaption"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], ["id", "marital", "formControlName", "depo", 3, "dataSource", "fields", "allowFiltering"], ["MaritalOutletDropdown", ""], ["formControlName", "alamat", 3, "label", "inputFieldState"], ["formControlName", "poli", 3, "label", "inputFieldState"], ["formControlName", "dokter", 3, "label", "inputFieldState"], [3, "editSettings", "dataSource", "gridLines", "allowResizing", "childGrid", "actionComplete", "toolbarClick", "load", "rowSelected", "dataBound"], ["gridDetail", ""], ["field", "no_urut", "headerText", "urut", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_item", "headerText", "id_item", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_outlet", "headerText", "Depo", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "user_inputed_name", "headerText", "User Entry", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "time_inputed", "headerText", "Waktu Entry", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "kode_item", "headerText", "Kode Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_obat", "headerText", "Nama Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "qty_jual", "headerText", "QTY Jual", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing"], ["field", "qty_returned", "headerText", "QTY Telah Diretur", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing"], ["field", "qty_retur", "headerText", "QTY Akan Di Retur", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing"], ["modalQty", ""], ["modalSatuan", ""], ["modalCanceled", ""], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body", "p-10"], [1, "row", "mx-0", "my-1"], [1, "col-lg-12", "col-md-12", "col-sm-12"], ["type", "text", "id", "QtyValueId", 1, "form-control", 3, "keydown.enter"], ["qtyValueId", ""], [1, "modal-footer", "background-abu-muda"], ["type", "button", 1, "btn", "btn-primary"], ["id", "SatuanValueId", "multiple", "", 1, "form-control", 3, "value", "keydown.enter"], ["satuanValueId", ""], [3, "ngValue", 4, "ngFor", "ngForOf"], [3, "ngValue"], [1, "col-sm-4"], ["for", "reason_canceled"], [1, "col-sm-8"], ["type", "text", "name", "reason_canceled", 1, "form-control", "form-control-sm"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], ["type", "button", 1, "btn", "btn-danger", 3, "click"]], template: function RefundObatIrdaComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("onClickButtonNav", function RefundObatIrdaComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "form", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](2, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](3, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](4, "org-input-look-up", 4, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("onGetSelectedData", function RefundObatIrdaComponent_Template_org_input_look_up_onGetSelectedData_4_listener($event) { return ctx.heandleSelectedNoRegistrasi($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](6, "mol-input-text", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](7, "mol-input-text", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](8, "mol-input-text", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](9, "mol-input-text", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](10, "div", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](11, "button", 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function RefundObatIrdaComponent_Template_button_click_11_listener() { return ctx.handleClickRefesh(); });
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](12, "Get Data");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](13, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](14, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](15, "div", 12);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](16, "atm-label", 13);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](17, "div", 14);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](18, "ejs-dropdownlist", 15, 16);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpipe"](20, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](21, "mol-input-text", 17);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](22, "mol-input-text", 18);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](23, "mol-input-text", 19);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](24, "ejs-grid", 20, 21);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("actionComplete", function RefundObatIrdaComponent_Template_ejs_grid_actionComplete_24_listener($event) { return ctx.handleActionCompleted($event); })("toolbarClick", function RefundObatIrdaComponent_Template_ejs_grid_toolbarClick_24_listener($event) { return ctx.onToolbarClick($event); })("load", function RefundObatIrdaComponent_Template_ejs_grid_load_24_listener($event) { return ctx.handleLoadGrid($event); })("rowSelected", function RefundObatIrdaComponent_Template_ejs_grid_rowSelected_24_listener($event) { return ctx.handleSelectdRow($event); })("dataBound", function RefundObatIrdaComponent_Template_ejs_grid_dataBound_24_listener() { return ctx.onDataBound(); });
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpipe"](26, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](27, "e-columns");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](28, "e-column", 22);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](29, "e-column", 23);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](30, "e-column", 24);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](31, "e-column", 25);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](32, "e-column", 26);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](33, "e-column", 27);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](34, "e-column", 28);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](35, "e-column", 29);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](36, "e-column", 30);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](37, "e-column", 31);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplate"](38, RefundObatIrdaComponent_ng_template_38_Template, 13, 0, "ng-template", null, 32, _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplate"](40, RefundObatIrdaComponent_ng_template_40_Template, 14, 2, "ng-template", null, 33, _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplate"](42, RefundObatIrdaComponent_ng_template_42_Template, 18, 0, "ng-template", null, 34, _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵreference"](5);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("formGroup", ctx.formInput);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("lookup-url", ctx.urlNoRegistrasi)("idTitle", "nama_pasien")("modal-title", "Data No Registrasi")("columns", ctx.LookupGridNoRegistrasi.columns)("filter-lookup", _r0.filter)("label", "No Registrasi");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "No Rm")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Debitur")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Nama Pasien")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Umur")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](7);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("LabelCaption", "Depo");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpipeBind1"](20, 51, ctx.setupOutletService.dataSource))("fields", ctx.SetupOutletDropdownField)("allowFiltering", true);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Alamat Pasien")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Poli")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Dokter")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("editSettings", ctx.GridDataEditSettings)("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpipeBind1"](26, 53, ctx.dataSourceGrid))("gridLines", "Both")("allowResizing", true)("childGrid", ctx.ChildGrid);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](4);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", false)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", false)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", true)("allowEditing", false);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_10__.OrgCardLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_18__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_18__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormGroupDirective, _shared_components_organism_loockUp_org_input_look_up_org_input_look_up_component__WEBPACK_IMPORTED_MODULE_11__.OrgInputLookUpComponent, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_12__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_18__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormControlName, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_13__.AtmLabelComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_21__.DropDownListComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__.AggregateColumnDirective, _angular_common__WEBPACK_IMPORTED_MODULE_20__.NgForOf, _angular_forms__WEBPACK_IMPORTED_MODULE_18__.NgSelectOption, _angular_forms__WEBPACK_IMPORTED_MODULE_18__["ɵNgSelectMultipleOption"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_20__.AsyncPipe], styles: ["#basic-addon1[_ngcontent-%COMP%] {\r\n    height: 32px;\r\n    padding-left: 12px;\r\n    width: 100%;\r\n    border-top-left-radius: 0;\r\n    border-bottom-left-radius: 0;\r\n    border: 0;\r\n  }\r\n  \r\n  #DropdownObat[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%] {\r\n    border-top-right-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n  }\r\n  \r\n  #NumericQty[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%]    > input[_ngcontent-%COMP%] {\r\n    text-align: right;\r\n    padding-right: 5px;\r\n  }\r\n  \r\n  div.head[_ngcontent-%COMP%] {\r\n    font-size: 13px !important;\r\n    font-weight: 500 !important;\r\n  }\r\n  \r\n  .is-racikan[_ngcontent-%COMP%]{\r\n    background-color: #f3e6f3;\r\n  }\r\n  \r\n  .form_paragraf[_ngcontent-%COMP%]{\r\n    display: inline-block!important;\r\n  }\r\n  \r\n  .form-label[_ngcontent-%COMP%] {\r\n  margin-bottom: 0px;\r\n}\r\n  \r\n  #basic-addon1[_ngcontent-%COMP%] {\r\n  height: 32px;\r\n  padding-left: 12px;\r\n  width: 100%;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  border: 0;\r\n}\r\n  \r\n  .e-toolbar[_ngcontent-%COMP%]   .e-toolbar-item[_ngcontent-%COMP%]   .e-tbar-btn.e-btn[_ngcontent-%COMP%]   .e-icons.e-btn-icon[_ngcontent-%COMP%] {\r\n  min-height: 14px !important;\r\n}\r\n  \r\n  th.e-headercell[_ngcontent-%COMP%] {\r\n  background-color: rgba(0, 0, 0, 0.03);\r\n  color: black;\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  padding: 5px !important;\r\n  height: 30px !important;\r\n}\r\n  \r\n  span.e-headertext[_ngcontent-%COMP%] {\r\n  font-size: 13px !important;\r\n}\r\n  \r\n  td.e-rowcell[_ngcontent-%COMP%] {\r\n  padding: 5px !important;\r\n}"] });
    return RefundObatIrdaComponent;
})();


/***/ }),

/***/ 18175:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irja-daftar/refund-obat-irja-daftar.component.ts ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RefundObatIrjaDaftarComponent": () => (/* binding */ RefundObatIrjaDaftarComponent)
/* harmony export */ });
/* harmony import */ var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/grid.config.json */ 24719);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ 29996);
/* harmony import */ var src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/encryption.service */ 18757);
/* harmony import */ var _services_refund_obat_refund_obat_irja_refund_obat_irja_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/refund-obat/refund-obat-irja/refund-obat-irja.service */ 58446);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_molecules_filter_mol_offcanvas_filter_mol_offcanvas_filter_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/molecules/filter/mol-offcanvas-filter/mol-offcanvas-filter.component */ 82064);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 61116);









const _c0 = ["GridData"];
let RefundObatIrjaDaftarComponent = /*@__PURE__*/ (() => {
    class RefundObatIrjaDaftarComponent {
        constructor(router, encryptionService, refundObatIrjaService) {
            this.router = router;
            this.encryptionService = encryptionService;
            this.refundObatIrjaService = refundObatIrjaService;
            this.ButtonNav = [
                { Id: 'Add', Captions: 'Add', Icons1: 'fa-plus fa-sm' },
                { Id: 'Edit', Captions: 'Lihat Detail', Icons1: 'fa-edit fa-sm' }
            ];
            this.GridDataToolbar = [
                { text: 'Add', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-sm', id: 'add' },
                { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
                { text: 'Detail', tooltipText: 'Detail', prefixIcon: 'fas fa-info-circle fa-sm', id: 'detail' },
                'Search'
            ];
            this.FilterColumnDatasource = [
                { text: 'No. Refund', value: 'tpo.nomor_retur_penjualan_obat' },
                { text: 'No. Penjualan', value: 'tpo.nomor_penjualan_obat' },
                { text: 'Nama Outlet', value: 'pso.nama_outlet' },
                { text: 'Status Refund', value: 'tpo.judul_kontrak' },
            ];
            this.GridConfig = /*#__PURE__*/ (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
        }
        ngAfterViewInit() {
            // this.GridData.Grid.refresh();
            this.handlePencarianFilter([]);
        }
        ngOnInit() {
        }
        handlePencarianFilter(args) {
            this.refundObatIrjaService.onGetAllByParamsSource(args);
            // setTimeout(()=>{
            // this.GridData.Grid.refresh();
            // },500)
        }
        handleinitialized(component) {
            this.GridData = component;
        }
        handleClickButtonNav(args) {
            switch (args) {
                case 'Add':
                    this.router.navigateByUrl('dashboard/Pharmacy/refund-obat/refund-obat-irja');
                    break;
                case 'Edit':
                    const id = this.encryptionService.encrypt(JSON.stringify(this.SelectedData.retur_penjualan_obat_id));
                    this.router.navigate(['dashboard/Pharmacy/refund-obat/refund-obat-irja-detail', id, "GRAHCIS"]);
                    break;
                case 'Delete':
                    // this.DeleteData(this.SelectedData.id_person, this.SelectedData['is_active']);
                    break;
                default:
                    break;
            }
        }
        handleSelectedRow(args) {
            this.SelectedData = args.data;
            console.log(this.SelectedData);
        }
        handleRowDataBound(args) {
            let status_transaksi = args.data.status_transaksi;
            if (status_transaksi == "VALIDATED") {
                args.row.classList.add('e-validation-background');
            }
            if (status_transaksi == "CANCELED") {
                args.row.classList.add('e-canceled-background');
            }
            if (status_transaksi == "CLOSED") {
                args.row.classList.add('e-closed-background');
            }
        }
    }
    RefundObatIrjaDaftarComponent.ɵfac = function RefundObatIrjaDaftarComponent_Factory(t) { return new (t || RefundObatIrjaDaftarComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_7__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_1__.EncryptionService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_services_refund_obat_refund_obat_irja_refund_obat_irja_service__WEBPACK_IMPORTED_MODULE_2__.RefundObatIrjaService)); };
    RefundObatIrjaDaftarComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({ type: RefundObatIrjaDaftarComponent, selectors: [["app-refund-obat-irja-daftar"]], viewQuery: function RefundObatIrjaDaftarComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵviewQuery"](_c0, 5);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵloadQuery"]()) && (ctx.GridData = _t.first);
            }
        }, decls: 8, vars: 9, consts: [[3, "ButtonNav", "onClickButtonNav"], [1, "row", "pt-2"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "mb-2"], [3, "FilterColumnDatasource", "handle-pencarian"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], [3, "grid-height", "grid-DataSource", "grid-paging", "grid-lines", "columns", "row-selected", "row-data-bound"], ["GridData", ""]], template: function RefundObatIrjaDaftarComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onClickButtonNav", function RefundObatIrjaDaftarComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.handleClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "div", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](2, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "mol-offcanvas-filter", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("handle-pencarian", function RefundObatIrjaDaftarComponent_Template_mol_offcanvas_filter_handle_pencarian_3_listener($event) { return ctx.handlePencarianFilter($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](4, "div", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](5, "mol-grid", 5, 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("row-selected", function RefundObatIrjaDaftarComponent_Template_mol_grid_row_selected_5_listener($event) { return ctx.handleSelectedRow($event); })("row-data-bound", function RefundObatIrjaDaftarComponent_Template_mol_grid_row_data_bound_5_listener($event) { return ctx.handleRowDataBound($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpipe"](7, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("FilterColumnDatasource", ctx.FilterColumnDatasource);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("grid-height", "calc(100vh - 19rem)")("grid-DataSource", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpipeBind1"](7, 7, ctx.refundObatIrjaService.dataSource))("grid-paging", true)("grid-lines", "Both")("columns", ctx.GridConfig.GridColumns);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__.OrgCardLayoutComponent, _shared_components_molecules_filter_mol_offcanvas_filter_mol_offcanvas_filter_component__WEBPACK_IMPORTED_MODULE_4__.MolOffcanvasFilterComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_5__.MolGridComponent], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.AsyncPipe], styles: [""] });
    return RefundObatIrjaDaftarComponent;
})();


/***/ }),

/***/ 37032:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irja-detail/refund-obat-irja-detail.component.ts ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_detailItem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RefundObatIrjaDetailComponent": () => (/* binding */ RefundObatIrjaDetailComponent)
/* harmony export */ });
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sweetalert2 */ 22501);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _json_detailItem_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./json/detailItem.json */ 90580);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _services_refund_obat_refund_obat_irja_refund_obat_irja_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/refund-obat/refund-obat-irja/refund-obat-irja.service */ 58446);
/* harmony import */ var src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/encryption.service */ 18757);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/router */ 29996);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/common */ 61116);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-bootstrap/modal */ 75470);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);
/* harmony import */ var _shared_components_molecules_form_mol_input_textarea_mol_input_textarea_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-textarea/mol-input-textarea.component */ 93989);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _shared_components_molecules_form_mol_input_numeric_mol_input_numeric_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-numeric/mol-input-numeric.component */ 13864);















const _c0 = ["modalCanceled"];
const _c1 = ["modalClosed"];
function RefundObatIrjaDetailComponent_ng_template_17_Template(rf, ctx) {
    if (rf & 1) {
        const _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h5", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2, "Canceled");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "button", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function RefundObatIrjaDetailComponent_ng_template_17_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r3); const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r2.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "i", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "div", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "label", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "strong");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](10, "Reason Cancel");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](11, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "input", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "button", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function RefundObatIrjaDetailComponent_ng_template_17_Template_button_click_14_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r3); const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r4.onCalceled(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](15, "Cancel Data");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "button", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function RefundObatIrjaDetailComponent_ng_template_17_Template_button_click_16_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r3); const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r5.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](17, "Batal");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    }
}
let RefundObatIrjaDetailComponent = /*@__PURE__*/ (() => {
    class RefundObatIrjaDetailComponent {
        constructor(formBuilder, refundObatIrjaService, encryptionService, activatedRoute, location, utilityService, modalService) {
            this.formBuilder = formBuilder;
            this.refundObatIrjaService = refundObatIrjaService;
            this.encryptionService = encryptionService;
            this.activatedRoute = activatedRoute;
            this.location = location;
            this.utilityService = utilityService;
            this.modalService = modalService;
            this.inputFieldState = 'detail';
            this.ButtonNav = [
                { Id: 'Back', Captions: 'Back', Icons1: 'fa-chevron-left' },
                { Id: 'Validasi', Captions: 'Validasi', Icons1: 'fa-check' },
                { Id: 'Cancel', Captions: 'Cancel', Icons1: 'fa-times' }
            ];
            this.ConfigGrid = /*#__PURE__*/ (_json_detailItem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (_json_detailItem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(_json_detailItem_json__WEBPACK_IMPORTED_MODULE_1__, 2)));
        }
        ngOnInit() {
            this.formInput = this.formBuilder.group({
                nomor_retur_penjualan_obat: ["",],
                tanggal_retur_penjualan_obat: [null,],
                nomor_penjualan_obat: ["",],
                nama_outlet: ["",],
                keterangan_retur_penjualan_obat: ["",],
                jumlah_item_retur: [0,],
            });
        }
        ngAfterViewInit() {
            let id = this.encryptionService.decrypt(this.activatedRoute.snapshot.params["id"]);
            this.id = parseInt(id);
            console.log(id);
            this.onLoadDetailData(id);
        }
        onLoadDetailData(id) {
            this.refundObatIrjaService.onGetById(id).subscribe((result) => {
                this.formInput.setValue({
                    nomor_retur_penjualan_obat: result.data.nomor_retur_penjualan_obat,
                    tanggal_retur_penjualan_obat: result.data.tanggal_retur_penjualan_obat,
                    nomor_penjualan_obat: result.data.nomor_penjualan_obat,
                    nama_outlet: result.data.nama_outlet,
                    keterangan_retur_penjualan_obat: result.data.keterangan_retur_penjualan_obat,
                    jumlah_item_retur: result.data.jumlah_item_retur,
                });
                this.refundObatIrjaService.setDetail(id);
            });
        }
        onClickButtonNav(ButtonId) {
            switch (ButtonId) {
                case 'Back':
                    this.location.back();
                    break;
                case 'Validasi':
                    sweetalert2__WEBPACK_IMPORTED_MODULE_0___default().fire({
                        title: 'Apakah anda yakin ingin validasi?',
                        text: "",
                        icon: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Iya Validasi',
                        cancelButtonText: 'Tidak',
                        focusCancel: true,
                    }).then((result) => {
                        if (result.isConfirmed) {
                            this.onValidation();
                        }
                    });
                    break;
                case 'Cancel':
                    this.modalRef = this.modalService.show(this.modalCanceled, Object.assign({}, { class: 'modal-lg' }));
                    break;
                case 'Close':
                    this.modalRef = this.modalService.show(this.modalClosed, Object.assign({}, { class: 'modal-lg' }));
                    break;
                default:
                    break;
            }
        }
        onValidation() {
            this.refundObatIrjaService.Validation(this.id).subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Data Refund Berhasil Di Validasi', result.message)
                    .then(() => {
                    this.onLoadDetailData(this.id);
                });
            });
        }
        onCalceled() {
            let reason_canceled = document.getElementsByName("reason_canceled")[0].value;
            this.refundObatIrjaService.Cancel(this.id, reason_canceled).subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Data Refund Berhasil Di Cancel', result.message)
                    .then(() => {
                    this.onLoadDetailData(this.id);
                    this.modalRef.hide();
                });
            });
        }
    }
    RefundObatIrjaDetailComponent.ɵfac = function RefundObatIrjaDetailComponent_Factory(t) { return new (t || RefundObatIrjaDetailComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_services_refund_obat_refund_obat_irja_refund_obat_irja_service__WEBPACK_IMPORTED_MODULE_2__.RefundObatIrjaService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_3__.EncryptionService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_13__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_14__.Location), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_4__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_5__.BsModalService)); };
    RefundObatIrjaDetailComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: RefundObatIrjaDetailComponent, selectors: [["app-refund-obat-irja-detail"]], viewQuery: function RefundObatIrjaDetailComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c0, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c1, 5);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.modalCanceled = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.modalClosed = _t.first);
            }
        }, decls: 19, vars: 20, consts: [[3, "ButtonNav", "onClickButtonNav"], [3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "mb-2"], ["formControlName", "nomor_retur_penjualan_obat", 3, "label", "inputFieldState"], ["formControlName", "tanggal_retur_penjualan_obat", 3, "label", "inputFieldState"], ["formControlName", "nomor_penjualan_obat", 3, "label", "inputFieldState"], ["formControlName", "nama_outlet", 3, "label", "inputFieldState"], ["formControlName", "keterangan_retur_penjualan_obat", 3, "label", "inputFieldState"], [3, "grid-DataSource", "columns"], [1, "row"], [1, "col-sm-5"], [1, "col-sm-4"], [1, "col-sm-3"], ["formControlName", "jumlah_item_retur", 3, "label", "isFooter", "inputFieldState"], ["modalCanceled", ""], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body", "p-10"], [1, "row", "mx-0", "my-1"], ["for", "reason_canceled"], [1, "col-sm-8"], ["type", "text", "name", "reason_canceled", 1, "form-control", "form-control-sm"], [1, "modal-footer", "background-abu-muda"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], ["type", "button", 1, "btn", "btn-danger", 3, "click"]], template: function RefundObatIrjaDetailComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClickButtonNav", function RefundObatIrjaDetailComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "form", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "mol-input-text", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "mol-input-text", 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](6, "mol-input-text", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](8, "mol-input-text", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](9, "mol-input-textarea", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](10, "mol-grid", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpipe"](11, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "div", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "div", 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "div", 12);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "div", 13);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "mol-input-numeric", 14);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](17, RefundObatIrjaDetailComponent_ng_template_17_Template, 18, 0, "ng-template", null, 15, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.formInput);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "No Retur")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Tanggal Retur")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "No Penjualan Obat")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Outlet")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Keterangan")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("grid-DataSource", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpipeBind1"](11, 18, ctx.refundObatIrjaService.dataDetail$))("columns", ctx.ConfigGrid.TrDetail);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Jumlah Item")("isFooter", true)("inputFieldState", "detail")("inputFieldState", "detail");
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_6__.OrgCardLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_7__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _shared_components_molecules_form_mol_input_textarea_mol_input_textarea_component__WEBPACK_IMPORTED_MODULE_8__.MolInputTextareaComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_9__.MolGridComponent, _shared_components_molecules_form_mol_input_numeric_mol_input_numeric_component__WEBPACK_IMPORTED_MODULE_10__.MolInputNumericComponent], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_14__.AsyncPipe], styles: [""] });
    return RefundObatIrjaDetailComponent;
})();


/***/ }),

/***/ 74865:
/*!***************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irja/refund-obat-irja.component.ts ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
var _json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RefundObatIrjaComponent": () => (/* binding */ RefundObatIrjaComponent)
/* harmony export */ });
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 70654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs */ 31305);
/* harmony import */ var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/lookupitem.json */ 62352);
/* harmony import */ var _json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./json/gridPasien.config.json */ 64813);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _services_refund_obat_refund_obat_irja_refund_obat_irja_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/refund-obat/refund-obat-irja/refund-obat-irja.service */ 58446);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/common */ 61116);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-bootstrap/modal */ 75470);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var src_app_modules_MM_services_setup_data_setup_item_setup_item_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/modules/MM/services/setup-data/setup-item/setup-item.service */ 13166);
/* harmony import */ var _services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../services/setup-data/setup-outlet/setup-outlet.service */ 47862);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/atoms/form/atm-label/atm-label.component */ 73391);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 34594);
/* harmony import */ var _shared_components_molecules_form_mol_datepicker_syncfusion_mol_datepicker_syncfusion_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-datepicker-syncfusion/mol-datepicker-syncfusion.component */ 30151);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);
/* harmony import */ var _shared_components_molecules_form_mol_input_textarea_mol_input_textarea_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-textarea/mol-input-textarea.component */ 93989);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 34903);




















const _c0 = ["gridDetail"];
const _c1 = ["LookupItem"];
const _c2 = ["modalQty"];
const _c3 = ["modalSatuan"];
const _c4 = ["modalCanceled"];
function RefundObatIrjaComponent_ng_template_37_Template(rf, ctx) {
    if (rf & 1) {
        const _r11 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](1, "h5", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](2, "Edit Qty");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](3, "button", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function RefundObatIrjaComponent_ng_template_37_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r11); const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](); return ctx_r10.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](4, "i", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](5, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](6, "div", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](7, "div", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](8, "input", 39, 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("keydown.enter", function RefundObatIrjaComponent_ng_template_37_Template_input_keydown_enter_8_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r11); const _r9 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵreference"](9); const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](); return ctx_r12.handleQtyChange(_r9.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](10, "div", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](11, "button", 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](12, "Oke");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    }
}
function RefundObatIrjaComponent_ng_template_39_option_10_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "option", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const item_r15 = ctx.$implicit;
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngValue", item_r15.kode_satuan);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"]("", item_r15.kode_satuan, " ");
    }
}
function RefundObatIrjaComponent_ng_template_39_Template(rf, ctx) {
    if (rf & 1) {
        const _r17 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](1, "h5", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](2, "Edit Satuan");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](3, "button", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function RefundObatIrjaComponent_ng_template_39_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r17); const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](); return ctx_r16.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](4, "i", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](5, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](6, "div", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](7, "div", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](8, "select", 43, 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("keydown.enter", function RefundObatIrjaComponent_ng_template_39_Template_select_keydown_enter_8_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r17); const _r13 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵreference"](9); const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](); return ctx_r18.handleSatuanChange(_r13.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](10, RefundObatIrjaComponent_ng_template_39_option_10_Template, 2, 2, "option", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](11, "div", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](12, "button", 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](13, "Oke");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("value", ctx_r6.detailSelected.kode_satuan_besar);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngForOf", ctx_r6.datasatuan);
    }
}
function RefundObatIrjaComponent_ng_template_41_Template(rf, ctx) {
    if (rf & 1) {
        const _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](1, "h5", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](2, "Canceled");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](3, "button", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function RefundObatIrjaComponent_ng_template_41_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r20); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](); return ctx_r19.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](4, "i", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](5, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](6, "div", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](7, "div", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](8, "label", 48);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](9, "strong");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](10, "Reason Cancel");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](11, "div", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](12, "input", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](13, "div", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](14, "button", 51);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function RefundObatIrjaComponent_ng_template_41_Template_button_click_14_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r20); const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](); return ctx_r21.onCalceled(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](15, "Cancel Data");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](16, "button", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function RefundObatIrjaComponent_ng_template_41_Template_button_click_16_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r20); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](); return ctx_r22.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](17, "Batal");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    }
}
let RefundObatIrjaComponent = /*@__PURE__*/ (() => {
    class RefundObatIrjaComponent {
        constructor(formBuilder, refundObatIrjaService, location, renderer, modalService, changeDetection, utilityService, setupItemService, setupOutletService) {
            this.formBuilder = formBuilder;
            this.refundObatIrjaService = refundObatIrjaService;
            this.location = location;
            this.renderer = renderer;
            this.modalService = modalService;
            this.changeDetection = changeDetection;
            this.utilityService = utilityService;
            this.setupItemService = setupItemService;
            this.setupOutletService = setupOutletService;
            this.SetupOutletDropdownField = { text: 'nama_outlet', value: 'id_outlet' };
            this.inputFieldState = 'detail';
            this.ButtonNav = [
                { Id: 'Back', Captions: 'Back', Icons1: 'fa-chevron-left' },
                { Id: 'Reset', Captions: 'Reset', Icons1: 'fas fa-undo fa-sm' },
                { Id: 'simpan', Captions: 'simpan', Icons1: 'fa-save' },
            ];
            this.GridDataEditSettings = { allowEditing: true };
            this.GridLookUpItem = /*#__PURE__*/ (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
            this.GridConfig = /*#__PURE__*/ (_json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (_json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(_json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1__, 2)));
            this.subscriptions = [];
            this.counterChildGrid = 0;
            this.datasatuan = [];
            this.childGridSatuan = [];
            this.id_stockroom = 0;
            this.dataSourceGrid = new rxjs__WEBPACK_IMPORTED_MODULE_14__.BehaviorSubject([]);
            this.dataScourceGridChild = [];
            this.totalJumlahItem = new rxjs__WEBPACK_IMPORTED_MODULE_14__.BehaviorSubject(0);
            this.itemBatch = [];
            this.id_item = new rxjs__WEBPACK_IMPORTED_MODULE_14__.BehaviorSubject(0);
            //=========
            this.id = 0;
        }
        ngOnInit() {
            this.formInput = this.formBuilder.group({
                penjualan_obat_id: [0,],
                id_outlet_terima_retur: [0,],
                tanggal_transaksi: [null,],
                depo: ['',],
                no_bill: ['',],
                nama_pasien: ['',],
                no_rm: ['',],
                no_register: ['',],
                keterangan_retur_penjualan_obat: ['',]
            });
            let id_item = this.id_item;
            let currentChildGird = null;
            this.satuanParams = {
                create: () => {
                    this.satuanElem = document.createElement('input');
                    return this.satuanElem;
                },
                read: () => {
                    return this.satuanObj.text;
                },
                destroy: () => {
                    this.satuanObj.destroy();
                },
                write: () => {
                    // this.childGridSatuan = this.refundObatIrjaService.getSatuanDetail(this.id_item.value);
                    // this.satuanObj = new DropDownList({
                    //     value: '',
                    //     dataSource: this.childGridSatuan,
                    //     fields: { value: 'kode_satuan', text: 'kode_satuan' },
                    //     enabled: true,
                    //     placeholder: 'Select a Satuan',
                    //     floatLabelType: 'Never',
                    // });
                    // this.satuanObj.appendTo(this.satuanElem);
                    // if(currentChildGird){
                    //     this.satuanObj.value = currentChildGird.satuan;
                    // }
                }
            };
            this.itemsParams = {
                create: () => {
                    this.itemsElem = document.createElement('input');
                    return this.itemsElem;
                },
                read: () => {
                    return this.itemsObj.text;
                },
                destroy: () => {
                    this.itemsObj.destroy();
                },
                write: () => {
                    this.setupItemService.onGetEDItem(this.id_stockroom, id_item.value).subscribe((result) => {
                        this.itemsObj = new _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_15__.DropDownList({
                            value: '',
                            dataSource: result.data,
                            fields: { value: 'batch_number', text: 'batch_number' },
                            enabled: true,
                            placeholder: 'Select a Batch',
                            floatLabelType: 'Never',
                            change: function (args) {
                                this.setFormGrif(args);
                                id_item.next(args.itemData.id_item);
                            }.bind(this),
                        });
                        this.itemsObj.appendTo(this.itemsElem);
                    });
                    if (currentChildGird) {
                        setTimeout(() => {
                            this.itemsObj.value = currentChildGird.batch_number;
                        }, 500);
                    }
                }
            };
            let dataSourceChild = this.dataScourceGridChild;
            let counterChildGrid = this.counterChildGrid;
            let dataSourceGrid = this.dataSourceGrid;
            let totalJumlahItem = this.totalJumlahItem;
            this.ChildGrid = {
                dataSource: this.dataScourceGridChild,
                queryString: "penjualan_obat_detail_id",
                rowHeight: 30,
                allowResizing: true,
                allowTextWrap: false,
                textWrapSettings: { wrapMode: 'Both' },
                toolbar: ['Add', 'Edit', 'Delete', 'Update', 'Cancel'],
                editSettings: { allowEditing: true, allowAdding: true, allowDeleting: true },
                columns: [
                    { field: "penjualan_obat_id", headerText: 'penjualan_obat_id', width: 100, visible: false },
                    { field: "penjualan_obat_detail_id", headerText: 'penjualan_obat_detail_id', width: 100, visible: false },
                    { field: "no_urut", headerText: 'urut', visible: false },
                    { field: "id_item", headerText: 'id_item', width: 100, visible: false },
                    // { field: "batch_number", headerText: 'Batch Number', editType: 'dropdownedit', edit: this.itemsParams, width: 200 },
                    { field: "batch_number", headerText: 'Batch Number', textAlign: 'Right', width: 200 },
                    { field: "expired_date", headerText: 'Expired Date', textAlign: 'Right', width: 80, editType: "datepickeredit", format: "dd MMMM yyyy" },
                    { field: "qty_besar", headerText: 'Banyak', visible: false, headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                    { field: "satuan", headerText: 'Satuan', visible: false, editType: 'dropdownedit', edit: this.satuanParams, width: 200 },
                    { field: "isi", headerText: 'Isi', visible: false, headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2', allowEditing: false },
                    { field: "qty_retur_penjualan_obat", headerText: 'Qty', headerTextAlign: 'Center', textAlign: 'Right', width: 50, format: 'N2', allowEditing: true },
                    { field: "nama_satuan", headerText: 'Satuan', headerTextAlign: 'Center', textAlign: 'Left', width: 100, format: 'N2', allowEditing: false, visible: false },
                    { field: "harga_satuan_retur", headerText: '', headerTextAlign: 'Center', textAlign: 'Right', width: 1, format: 'N2', allowEditing: false, visible: false },
                    { field: "sub_total", headerText: '', headerTextAlign: 'Center', textAlign: 'Right', width: 1, format: 'N2', allowEditing: false, visible: false },
                ],
                rowSelected(args) {
                    currentChildGird = args.data;
                },
                actionBegin(args) {
                    if (args.requestType === 'add') {
                        args.data['id_item'] = this.parentDetails.parentRowData.id_item;
                        args.data['penjualan_obat_id'] = this.parentDetails.parentRowData.penjualan_obat_id;
                        args.data['penjualan_obat_detail_id'] = this.parentDetails.parentRowData.penjualan_obat_detail_id;
                        args.data['harga_satuan_retur'] = this.parentDetails.parentRowData.harga_satuan;
                        args.data['counterChildGrid'] = counterChildGrid++;
                        id_item.next(this.parentDetails.parentRowData.id_item);
                    }
                },
                actionComplete(args) {
                    if (args.requestType === 'save') {
                        console.log('complete', args);
                        if (args.action === 'add') {
                            dataSourceChild.push(args.data);
                        }
                        if (args.action === 'edit') {
                            let index = dataSourceChild.map((item) => { return item.counterChildGrid; }).indexOf(args.data.counterChildGrid);
                            dataSourceChild[index] = args.data;
                        }
                        let data = [];
                        dataSourceGrid.value.forEach((itemPrent, indexPrent) => {
                            let total = 0;
                            dataSourceChild.forEach((item, index) => {
                                if (itemPrent.id_item == item.id_item) {
                                    total = total + parseInt(item.qty_retur_penjualan_obat);
                                }
                            });
                            itemPrent.qty_retur = total;
                            data.push(itemPrent);
                        });
                        // setTimeout(()=>{
                        dataSourceGrid.next(data);
                        totalJumlahItem.next(data.sum('qty_retur'));
                        // console.log(data);
                        // },500)
                    }
                    if (args.requestType === "delete") {
                        let index = dataSourceChild.map((item) => { return item.counterChildGrid; }).indexOf(args.data[0].counterChildGrid);
                        dataSourceChild.splice(index, 1);
                        let data = [];
                        dataSourceGrid.value.forEach((itemPrent, indexPrent) => {
                            let total = 0;
                            dataSourceChild.forEach((item, index) => {
                                if (itemPrent.id_item == item.id_item) {
                                    total = total + parseInt(item.qty_pemakaian_internal);
                                }
                            });
                            itemPrent.qty = total;
                            data.push(itemPrent);
                        });
                        setTimeout(() => {
                            dataSourceGrid.next(data);
                            console.log(data);
                        }, 500);
                    }
                }
            };
            this.globalListenFunc = this.renderer.listen('document', 'keydown', e => {
                if (e.keyCode == 112) {
                    this.LookupItem.onOpenModal();
                    e.preventDefault();
                }
            });
            this.GridDetailToolbar = [
                // { text: 'Add[F1]', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-sm', id: 'add' },
                { text: '| [*]=Ubah Banyak | [+]=Satuan |', }
            ];
            this.setupOutletService.setDataSource();
        }
        onDataBound() {
            this.gridDetail.detailRowModule.expandAll();
        }
        setFormGrif(args) {
            document.getElementsByName("expired_date")[0].value = args.itemData.expired_date;
            document.getElementsByName("nama_satuan")[0].value = args.itemData.nama_satuan;
            document.getElementsByName("hpp_satuan")[0].value = args.itemData.harga_satuan_netto;
        }
        handleClickRefesh() {
            if (this.depo.value == '') {
                this.utilityService.onShowingCustomAlert('warning', 'Validasi', 'Depo belum di pilih');
                return false;
            }
            if (this.tanggal_transaksi.value == null) {
                this.utilityService.onShowingCustomAlert('warning', 'Validasi', 'Tanggal transaksi penjualan belum di pilih');
                return false;
            }
            this.refundObatIrjaService.onGetDataTransaksiObat([
                {
                    columnName: "tpo.tanggal_penjualan_obat",
                    filter: "equal",
                    searchText: "",
                    searchText2: this.utilityService.onFormatDate(this.tanggal_transaksi.value, 'yyyy-MM-DD')
                },
                {
                    columnName: "tpo.id_outlet",
                    filter: "equal",
                    searchText: this.depo.value,
                    searchText2: ""
                }
            ]);
        }
        /** untuk identifikasi keyboard down pada grid */
        handleLoadGrid(args) {
            document.getElementsByClassName('e-grid')[0].addEventListener('keydown', this.KeyDownHandler.bind(this));
        }
        handleSelectedPasien(args) {
            console.log(args.data);
            this.formInput.setValue({
                id_outlet_terima_retur: args.data.id_outlet,
                penjualan_obat_id: args.data.penjualan_obat_id,
                tanggal_transaksi: this.tanggal_transaksi.value,
                depo: this.depo.value,
                no_bill: args.data.nomor_penjualan_obat,
                nama_pasien: args.data.nama_pasien,
                no_rm: args.data.no_rekam_medis,
                no_register: args.data.no_register,
                keterangan_retur_penjualan_obat: ''
            });
            this.refundObatIrjaService.getDetail(args.data.penjualan_obat_id).subscribe((result) => {
                this.dataSourceGrid.next(result.data);
                console.log(this.dataSourceGrid.value);
            });
        }
        handleSelectdRow(args) {
            this.currentIndex = args.rowIndex;
            this.datasatuan = args.data.satuans;
            this.detailSelected = args.data;
            this.satuanVal = args.data.kode_satuan_besar;
        }
        handleActionCompleted($event) {
            if ($event.requestType == 'save') {
                console.log($event);
                this.refundObatIrjaService.updateFromInline($event.rowIndex, $event.data, $event.rowData);
                this.gridDetail.refresh();
            }
            // console.log('complate parent',this.gridDetail.childGrid.dataSource);
        }
        KeyDownHandler(event) {
            if (event.keyCode === 106) {
                this.onOpenQty();
            }
            ;
            if (event.keyCode === 46) {
                this.refundObatIrjaService.removeDataDetail(this.currentIndex);
                this.gridDetail.refresh();
                setTimeout(() => {
                    if (this.currentIndex != 0) {
                        this.gridDetail.selectedRowIndex = 0;
                    }
                }, 100);
            }
            ;
            //   if (event.keyCode === 111) {
            //       this.onOpenHarga()
            //   }
            //   if (event.keyCode === 109) {
            //       this.onOpenSubtotal()
            //   }
            if (event.keyCode === 107) {
                this.onOpenSatuan();
            }
        }
        onToolbarClick(args) {
            const item = args.item.id;
            switch (item) {
                case 'add':
                    this.LookupItem.onOpenModal();
                    break;
                default:
                    break;
            }
        }
        onLoadDetailData(id) {
            this.refundObatIrjaService.onGetById(id).subscribe((result) => {
                this.id = parseInt(id);
                this.formInput.setValue({
                    pemakaian_internal_id: parseInt(id),
                    pic_pemberi: '',
                    pic_penerima: '',
                    time_serah_terima: new Date(),
                    total_transaksi: 0,
                });
                this.id_stockroom = result.data.id_stockroom;
                this.refundObatIrjaService.getDetail(id).subscribe((result) => {
                    result.data.map((e, i) => {
                        return e.qty = 0;
                    });
                    this.dataSourceGrid.next(result.data);
                });
                //this.persetujuanMutasiService.setDetail(pemesanan_id);
            });
        }
        onOpenQty() {
            const _combine = (0,rxjs__WEBPACK_IMPORTED_MODULE_16__.combineLatest)(this.modalService.onShow, this.modalService.onHidden).subscribe(() => this.changeDetection.markForCheck());
            this.subscriptions.push(this.modalService.onShown.subscribe(() => {
                setTimeout(() => {
                    document.getElementById("QtyValueId").focus();
                }, 100);
            }));
            this.subscriptions.push(this.modalService.onHidden.subscribe((reason) => {
                this.gridDetail.selectedRowIndex = this.currentIndex;
                this.gridDetail.selectRows([this.currentIndex]);
                this.unsubscribe();
            }));
            this.subscriptions.push(_combine);
            this.modalRef = this.modalService.show(this.modalQty, Object.assign({}, { class: 'modal-lg' }));
        }
        onOpenSatuan() {
            const _combine = (0,rxjs__WEBPACK_IMPORTED_MODULE_16__.combineLatest)(this.modalService.onShown, this.modalService.onHidden).subscribe(() => this.changeDetection.markForCheck());
            this.subscriptions.push(this.modalService.onShown.subscribe(() => {
                setTimeout(() => {
                    document.getElementById("SatuanValueId").focus();
                }, 100);
            }));
            this.subscriptions.push(this.modalService.onHidden.subscribe((reason) => {
                this.gridDetail.selectedRowIndex = this.currentIndex;
                this.gridDetail.selectRows([this.currentIndex]);
                this.unsubscribe();
            }));
            this.subscriptions.push(_combine);
            this.modalRef = this.modalService.show(this.modalSatuan, Object.assign({}, { class: 'modal-lg' }));
        }
        unsubscribe() {
            this.subscriptions.forEach((subscription) => {
                subscription.unsubscribe();
            });
            this.subscriptions = [];
        }
        selectLastRowdetail() {
            setTimeout(() => {
                let last = this.gridDetail.dataSource;
                this.gridDetail.selectedRowIndex = last.length - 1;
            }, 150);
        }
        onSave() {
            if (this.formInput.valid) {
                let data = this.formInput.value;
                this.dataScourceGridChild.map((e, i) => {
                    e.sub_total = e.qty_retur_penjualan_obat * e.harga_satuan_retur;
                    e.no_urut = i + 1;
                    return e;
                });
                data.jumlah_item_retur = this.dataScourceGridChild.sum('qty_retur_penjualan_obat');
                data.total_transaksi_retur = this.dataScourceGridChild.sum('sub_total');
                data.nomor_retur_penjualan_obat = '23135';
                data.tanggal_retur_penjualan_obat = '2021-12-10';
                console.log('data header', data);
                console.log('data detail', this.dataScourceGridChild);
                data.details = this.dataScourceGridChild;
                console.log('data', data);
                this.refundObatIrjaService.Insert(data).subscribe((result) => {
                    console.log(result);
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Refund Obat', result.message)
                        .then(() => {
                        this.onReset();
                    });
                });
            }
            else {
                alert('isi semua data');
            }
        }
        onReset() {
            this.formInput.reset();
            this.dataScourceGridChild = [];
            this.dataSourceGrid.next([]);
            this.ChildGrid.dataSource = [];
        }
        onClickButtonNav(ButtonId) {
            switch (ButtonId) {
                case 'Back':
                    this.location.back();
                    break;
                case 'Reset':
                    this.onReset();
                    break;
                case "simpan":
                    // this.dataScourceGridChild;
                    this.onSave();
                    break;
                default:
                    break;
            }
        }
        get tanggal_transaksi() { return this.formInput.get('tanggal_transaksi'); }
        ;
        get depo() { return this.formInput.get('depo'); }
        ;
        get no_bill() { return this.formInput.get('no_bill'); }
        ;
        get nama_pasien() { return this.formInput.get('nama_pasien'); }
        ;
        get no_rm() { return this.formInput.get('no_rm'); }
        ;
        get no_register() { return this.formInput.get('no_register'); }
        ;
    }
    RefundObatIrjaComponent.ɵfac = function RefundObatIrjaComponent_Factory(t) { return new (t || RefundObatIrjaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_services_refund_obat_refund_obat_irja_refund_obat_irja_service__WEBPACK_IMPORTED_MODULE_2__.RefundObatIrjaService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_18__.Location), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_13__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_3__.BsModalService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_13__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_4__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](src_app_modules_MM_services_setup_data_setup_item_setup_item_service__WEBPACK_IMPORTED_MODULE_5__.SetupItemService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_6__.SetupOutletService)); };
    RefundObatIrjaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdefineComponent"]({ type: RefundObatIrjaComponent, selectors: [["app-refund-obat-irja"]], viewQuery: function RefundObatIrjaComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵviewQuery"](_c0, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵviewQuery"](_c1, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵviewQuery"](_c2, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵviewQuery"](_c3, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵviewQuery"](_c4, 5);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵloadQuery"]()) && (ctx.gridDetail = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵloadQuery"]()) && (ctx.LookupItem = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵloadQuery"]()) && (ctx.modalQty = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵloadQuery"]()) && (ctx.modalSatuan = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵloadQuery"]()) && (ctx.modalCanceled = _t.first);
            }
        }, decls: 43, vars: 46, consts: [[3, "ButtonNav", "onClickButtonNav"], [3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "mb-2"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "LabelCaption"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], ["id", "marital", "formControlName", "depo", 3, "dataSource", "fields", "allowFiltering"], ["MaritalOutletDropdown", ""], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4", "mb-2"], ["formControlName", "tanggal_transaksi", 3, "label", "format"], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2", "mb-2"], ["type", "button", 1, "btn", "btn-sm", "btn-primary", 3, "click"], [3, "grid-height", "grid-DataSource", "grid-paging", "grid-lines", "columns", "row-selected"], ["GridResep", ""], [1, "row", "mb-2", "mt-2"], ["formControlName", "nama_pasien", 3, "label", "inputFieldState"], ["formControlName", "no_register", 3, "label", "inputFieldState"], ["formControlName", "no_rm", 3, "label", "inputFieldState"], ["formControlName", "keterangan_retur_penjualan_obat", 3, "label"], [3, "editSettings", "dataSource", "gridLines", "allowResizing", "childGrid", "height", "actionComplete", "toolbarClick", "load", "rowSelected", "dataBound"], ["gridDetail", ""], ["field", "no_urut", "headerText", "urut", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_item", "headerText", "id_item", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "kode_item", "headerText", "Kode Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", "width", "100", 3, "visible", "allowEditing"], ["field", "nama_obat", "headerText", "Nama Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", "width", "300", 3, "visible", "allowEditing"], ["field", "qty_jual", "headerText", "QTY Jual", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", "width", "100", 3, "visible", "allowEditing"], ["field", "qty_returned", "headerText", "QTY Telah Diretur", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", "width", "100", 3, "visible", "allowEditing"], ["field", "qty_retur", "headerText", "QTY Akan Di Retur", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", "width", "100", 3, "visible", "allowEditing"], ["modalQty", ""], ["modalSatuan", ""], ["modalCanceled", ""], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body", "p-10"], [1, "row", "mx-0", "my-1"], [1, "col-lg-12", "col-md-12", "col-sm-12"], ["type", "text", "id", "QtyValueId", 1, "form-control", 3, "keydown.enter"], ["qtyValueId", ""], [1, "modal-footer", "background-abu-muda"], ["type", "button", 1, "btn", "btn-primary"], ["id", "SatuanValueId", "multiple", "", 1, "form-control", 3, "value", "keydown.enter"], ["satuanValueId", ""], [3, "ngValue", 4, "ngFor", "ngForOf"], [3, "ngValue"], [1, "col-sm-4"], ["for", "reason_canceled"], [1, "col-sm-8"], ["type", "text", "name", "reason_canceled", 1, "form-control", "form-control-sm"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], ["type", "button", 1, "btn", "btn-danger", 3, "click"]], template: function RefundObatIrjaComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("onClickButtonNav", function RefundObatIrjaComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](1, "form", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](2, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](3, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](4, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](5, "div", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](6, "atm-label", 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](7, "div", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](8, "ejs-dropdownlist", 7, 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpipe"](10, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](11, "div", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](12, "mol-datepicker-syncfusion", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](13, "div", 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](14, "button", 12);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function RefundObatIrjaComponent_Template_button_click_14_listener() { return ctx.handleClickRefesh(); });
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](15, "Refresh");
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](16, "mol-grid", 13, 14);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("row-selected", function RefundObatIrjaComponent_Template_mol_grid_row_selected_16_listener($event) { return ctx.handleSelectedPasien($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpipe"](18, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](19, "div", 15);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](20, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](21, "mol-input-text", 16);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](22, "mol-input-text", 17);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](23, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](24, "mol-input-text", 18);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](25, "mol-input-textarea", 19);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](26, "ejs-grid", 20, 21);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("actionComplete", function RefundObatIrjaComponent_Template_ejs_grid_actionComplete_26_listener($event) { return ctx.handleActionCompleted($event); })("toolbarClick", function RefundObatIrjaComponent_Template_ejs_grid_toolbarClick_26_listener($event) { return ctx.onToolbarClick($event); })("load", function RefundObatIrjaComponent_Template_ejs_grid_load_26_listener($event) { return ctx.handleLoadGrid($event); })("rowSelected", function RefundObatIrjaComponent_Template_ejs_grid_rowSelected_26_listener($event) { return ctx.handleSelectdRow($event); })("dataBound", function RefundObatIrjaComponent_Template_ejs_grid_dataBound_26_listener() { return ctx.onDataBound(); });
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpipe"](28, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](29, "e-columns");
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](30, "e-column", 22);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](31, "e-column", 23);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](32, "e-column", 24);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](33, "e-column", 25);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](34, "e-column", 26);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](35, "e-column", 27);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](36, "e-column", 28);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](37, RefundObatIrjaComponent_ng_template_37_Template, 13, 0, "ng-template", null, 29, _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](39, RefundObatIrjaComponent_ng_template_39_Template, 14, 2, "ng-template", null, 30, _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](41, RefundObatIrjaComponent_ng_template_41_Template, 18, 0, "ng-template", null, 31, _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("formGroup", ctx.formInput);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](5);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("LabelCaption", "Depo");
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpipeBind1"](10, 40, ctx.setupOutletService.dataSource))("fields", ctx.SetupOutletDropdownField)("allowFiltering", true);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](4);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("label", "Tanggal")("format", "dd MMMM yyyy");
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](4);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("grid-height", "6rem")("grid-DataSource", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpipeBind1"](18, 42, ctx.refundObatIrjaService.dataTransaksiObat))("grid-paging", false)("grid-lines", "Both")("columns", ctx.GridConfig.GridColumns);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](5);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("label", "Nama Pasien")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("label", "No. Register")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("label", "No. RM")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("label", "Keterangan");
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("editSettings", ctx.GridDataEditSettings)("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpipeBind1"](28, 44, ctx.dataSourceGrid))("gridLines", "Both")("allowResizing", true)("childGrid", ctx.ChildGrid)("height", "calc(100vh - 31rem)");
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](4);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("visible", false)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("visible", false)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("visible", true)("allowEditing", false);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_7__.OrgCardLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_17__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_17__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormGroupDirective, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_8__.AtmLabelComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_19__.DropDownListComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_17__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormControlName, _shared_components_molecules_form_mol_datepicker_syncfusion_mol_datepicker_syncfusion_component__WEBPACK_IMPORTED_MODULE_9__.MolDatepickerSyncfusionComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_10__.MolGridComponent, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_11__.MolInputTextComponent, _shared_components_molecules_form_mol_input_textarea_mol_input_textarea_component__WEBPACK_IMPORTED_MODULE_12__.MolInputTextareaComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_20__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_20__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_20__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_20__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_20__.AggregateColumnDirective, _angular_common__WEBPACK_IMPORTED_MODULE_18__.NgForOf, _angular_forms__WEBPACK_IMPORTED_MODULE_17__.NgSelectOption, _angular_forms__WEBPACK_IMPORTED_MODULE_17__["ɵNgSelectMultipleOption"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_18__.AsyncPipe], styles: ["#basic-addon1[_ngcontent-%COMP%] {\r\n    height: 32px;\r\n    padding-left: 12px;\r\n    width: 100%;\r\n    border-top-left-radius: 0;\r\n    border-bottom-left-radius: 0;\r\n    border: 0;\r\n  }\r\n  \r\n  #DropdownObat[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%] {\r\n    border-top-right-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n  }\r\n  \r\n  #NumericQty[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%]    > input[_ngcontent-%COMP%] {\r\n    text-align: right;\r\n    padding-right: 5px;\r\n  }\r\n  \r\n  div.head[_ngcontent-%COMP%] {\r\n    font-size: 13px !important;\r\n    font-weight: 500 !important;\r\n  }\r\n  \r\n  .is-racikan[_ngcontent-%COMP%]{\r\n    background-color: #f3e6f3;\r\n  }\r\n  \r\n  .form_paragraf[_ngcontent-%COMP%]{\r\n    display: inline-block!important;\r\n  }\r\n  \r\n  .form-label[_ngcontent-%COMP%] {\r\n  margin-bottom: 0px;\r\n}\r\n  \r\n  #basic-addon1[_ngcontent-%COMP%] {\r\n  height: 32px;\r\n  padding-left: 12px;\r\n  width: 100%;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  border: 0;\r\n}\r\n  \r\n  .e-toolbar[_ngcontent-%COMP%]   .e-toolbar-item[_ngcontent-%COMP%]   .e-tbar-btn.e-btn[_ngcontent-%COMP%]   .e-icons.e-btn-icon[_ngcontent-%COMP%] {\r\n  min-height: 14px !important;\r\n}\r\n  \r\n  th.e-headercell[_ngcontent-%COMP%] {\r\n  background-color: rgba(0, 0, 0, 0.03);\r\n  color: black;\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  padding: 5px !important;\r\n  height: 30px !important;\r\n}\r\n  \r\n  span.e-headertext[_ngcontent-%COMP%] {\r\n  font-size: 13px !important;\r\n}\r\n  \r\n  td.e-rowcell[_ngcontent-%COMP%] {\r\n  padding: 5px !important;\r\n}"] });
    return RefundObatIrjaComponent;
})();


/***/ }),

/***/ 83043:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irna-daftar/refund-obat-irna-daftar.component.ts ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RefundObatIrnaDaftarComponent": () => (/* binding */ RefundObatIrnaDaftarComponent)
/* harmony export */ });
/* harmony import */ var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/grid.config.json */ 23609);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ 29996);
/* harmony import */ var src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/encryption.service */ 18757);
/* harmony import */ var _services_refund_obat_refund_obat_irna_refund_obat_irna_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/refund-obat/refund-obat-irna/refund-obat-irna.service */ 73940);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_molecules_filter_mol_offcanvas_filter_mol_offcanvas_filter_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/molecules/filter/mol-offcanvas-filter/mol-offcanvas-filter.component */ 82064);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 61116);









const _c0 = ["GridData"];
let RefundObatIrnaDaftarComponent = /*@__PURE__*/ (() => {
    class RefundObatIrnaDaftarComponent {
        constructor(router, encryptionService, refundObatIrnaService) {
            this.router = router;
            this.encryptionService = encryptionService;
            this.refundObatIrnaService = refundObatIrnaService;
            this.ButtonNav = [
                { Id: 'Add', Captions: 'Add', Icons1: 'fa-plus fa-sm' },
                { Id: 'Edit', Captions: 'Lihat Detail', Icons1: 'fa-edit fa-sm' }
            ];
            this.GridDataToolbar = [
                { text: 'Add', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-sm', id: 'add' },
                { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
                { text: 'Detail', tooltipText: 'Detail', prefixIcon: 'fas fa-info-circle fa-sm', id: 'detail' },
                'Search'
            ];
            this.FilterColumnDatasource = [
                { text: 'No. Refund', value: 'tpo.nomor_retur_penjualan_obat' },
                { text: 'No. Penjualan', value: 'tpo.nomor_penjualan_obat' },
                { text: 'Nama Outlet', value: 'pso.nama_outlet' },
                { text: 'Status Refund', value: 'tpo.judul_kontrak' },
            ];
            this.GridConfig = /*#__PURE__*/ (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
        }
        ngAfterViewInit() {
            // this.GridData.Grid.refresh();
            this.handlePencarianFilter([]);
        }
        ngOnInit() {
        }
        handlePencarianFilter(args) {
            this.refundObatIrnaService.onGetAllByParamsSource(args);
            // setTimeout(()=>{
            // this.GridData.Grid.refresh();
            // },500)
        }
        handleinitialized(component) {
            this.GridData = component;
        }
        handleClickButtonNav(args) {
            switch (args) {
                case 'Add':
                    this.router.navigateByUrl('dashboard/Pharmacy/refund-obat/refund-obat-irna');
                    break;
                case 'Edit':
                    const id = this.encryptionService.encrypt(JSON.stringify(this.SelectedData.retur_penjualan_obat_id));
                    this.router.navigate(['dashboard/Pharmacy/refund-obat/refund-obat-irna-detail', id, "GRAHCIS"]);
                    break;
                case 'Delete':
                    // this.DeleteData(this.SelectedData.id_person, this.SelectedData['is_active']);
                    break;
                default:
                    break;
            }
        }
        handleSelectedRow(args) {
            this.SelectedData = args.data;
            console.log(this.SelectedData);
        }
        handleRowDataBound(args) {
            let status_transaksi = args.data.status_transaksi;
            if (status_transaksi == "VALIDATED") {
                args.row.classList.add('e-validation-background');
            }
            if (status_transaksi == "CANCELED") {
                args.row.classList.add('e-canceled-background');
            }
            if (status_transaksi == "CLOSED") {
                args.row.classList.add('e-closed-background');
            }
        }
    }
    RefundObatIrnaDaftarComponent.ɵfac = function RefundObatIrnaDaftarComponent_Factory(t) { return new (t || RefundObatIrnaDaftarComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_7__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_1__.EncryptionService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_services_refund_obat_refund_obat_irna_refund_obat_irna_service__WEBPACK_IMPORTED_MODULE_2__.RefundObatIrnaService)); };
    RefundObatIrnaDaftarComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({ type: RefundObatIrnaDaftarComponent, selectors: [["app-refund-obat-irna-daftar"]], viewQuery: function RefundObatIrnaDaftarComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵviewQuery"](_c0, 5);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵloadQuery"]()) && (ctx.GridData = _t.first);
            }
        }, decls: 8, vars: 9, consts: [[3, "ButtonNav", "onClickButtonNav"], [1, "row", "pt-2"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "mb-2"], [3, "FilterColumnDatasource", "handle-pencarian"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], [3, "grid-height", "grid-DataSource", "grid-paging", "grid-lines", "columns", "row-selected", "row-data-bound"], ["GridData", ""]], template: function RefundObatIrnaDaftarComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onClickButtonNav", function RefundObatIrnaDaftarComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.handleClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "div", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](2, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "mol-offcanvas-filter", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("handle-pencarian", function RefundObatIrnaDaftarComponent_Template_mol_offcanvas_filter_handle_pencarian_3_listener($event) { return ctx.handlePencarianFilter($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](4, "div", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](5, "mol-grid", 5, 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("row-selected", function RefundObatIrnaDaftarComponent_Template_mol_grid_row_selected_5_listener($event) { return ctx.handleSelectedRow($event); })("row-data-bound", function RefundObatIrnaDaftarComponent_Template_mol_grid_row_data_bound_5_listener($event) { return ctx.handleRowDataBound($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpipe"](7, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("FilterColumnDatasource", ctx.FilterColumnDatasource);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("grid-height", "calc(100vh - 19rem)")("grid-DataSource", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpipeBind1"](7, 7, ctx.refundObatIrnaService.dataSource))("grid-paging", true)("grid-lines", "Both")("columns", ctx.GridConfig.GridColumns);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__.OrgCardLayoutComponent, _shared_components_molecules_filter_mol_offcanvas_filter_mol_offcanvas_filter_component__WEBPACK_IMPORTED_MODULE_4__.MolOffcanvasFilterComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_5__.MolGridComponent], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.AsyncPipe], styles: [""] });
    return RefundObatIrnaDaftarComponent;
})();


/***/ }),

/***/ 83033:
/*!*****************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irna-detail/refund-obat-irna-detail.component.ts ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_detailItem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RefundObatIrnaDetailComponent": () => (/* binding */ RefundObatIrnaDetailComponent)
/* harmony export */ });
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sweetalert2 */ 22501);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _json_detailItem_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./json/detailItem.json */ 86501);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _services_refund_obat_refund_obat_irna_refund_obat_irna_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/refund-obat/refund-obat-irna/refund-obat-irna.service */ 73940);
/* harmony import */ var src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/encryption.service */ 18757);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/router */ 29996);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/common */ 61116);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-bootstrap/modal */ 75470);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);
/* harmony import */ var _shared_components_molecules_form_mol_input_textarea_mol_input_textarea_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-textarea/mol-input-textarea.component */ 93989);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _shared_components_molecules_form_mol_input_numeric_mol_input_numeric_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-numeric/mol-input-numeric.component */ 13864);















const _c0 = ["modalCanceled"];
const _c1 = ["modalClosed"];
function RefundObatIrnaDetailComponent_ng_template_16_Template(rf, ctx) {
    if (rf & 1) {
        const _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h5", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2, "Canceled");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "button", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function RefundObatIrnaDetailComponent_ng_template_16_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r3); const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r2.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "i", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "label", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "strong");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](10, "Reason Cancel");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](11, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "input", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "button", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function RefundObatIrnaDetailComponent_ng_template_16_Template_button_click_14_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r3); const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r4.onCalceled(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](15, "Cancel Data");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "button", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function RefundObatIrnaDetailComponent_ng_template_16_Template_button_click_16_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r3); const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r5.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](17, "Batal");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    }
}
let RefundObatIrnaDetailComponent = /*@__PURE__*/ (() => {
    class RefundObatIrnaDetailComponent {
        constructor(formBuilder, refundObatIrnaService, encryptionService, activatedRoute, location, utilityService, modalService) {
            this.formBuilder = formBuilder;
            this.refundObatIrnaService = refundObatIrnaService;
            this.encryptionService = encryptionService;
            this.activatedRoute = activatedRoute;
            this.location = location;
            this.utilityService = utilityService;
            this.modalService = modalService;
            this.inputFieldState = 'detail';
            this.ButtonNav = [
                { Id: 'Back', Captions: 'Back', Icons1: 'fa-chevron-left' },
                { Id: 'Validasi', Captions: 'Validasi', Icons1: 'fa-check' },
                { Id: 'Cancel', Captions: 'Cancel', Icons1: 'fa-times' }
            ];
            this.ConfigGrid = /*#__PURE__*/ (_json_detailItem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (_json_detailItem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(_json_detailItem_json__WEBPACK_IMPORTED_MODULE_1__, 2)));
        }
        ngOnInit() {
            this.formInput = this.formBuilder.group({
                nomor_retur_penjualan_obat: ["",],
                tanggal_retur_penjualan_obat: [null,],
                nama_outlet: ["",],
                keterangan_retur_penjualan_obat: ["",],
                jumlah_item_retur: [0,],
            });
        }
        ngAfterViewInit() {
            let id = this.encryptionService.decrypt(this.activatedRoute.snapshot.params["id"]);
            this.id = parseInt(id);
            console.log(id);
            this.onLoadDetailData(id);
        }
        onLoadDetailData(id) {
            this.refundObatIrnaService.onGetById(id).subscribe((result) => {
                this.formInput.setValue({
                    nomor_retur_penjualan_obat: result.data.nomor_retur_penjualan_obat,
                    tanggal_retur_penjualan_obat: result.data.tanggal_retur_penjualan_obat,
                    nama_outlet: result.data.nama_outlet,
                    keterangan_retur_penjualan_obat: result.data.keterangan_retur_penjualan_obat,
                    jumlah_item_retur: result.data.jumlah_item_retur,
                });
                this.refundObatIrnaService.setDetail(id);
            });
        }
        onClickButtonNav(ButtonId) {
            switch (ButtonId) {
                case 'Back':
                    this.location.back();
                    break;
                case 'Validasi':
                    sweetalert2__WEBPACK_IMPORTED_MODULE_0___default().fire({
                        title: 'Apakah anda yakin ingin validasi?',
                        text: "",
                        icon: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Iya Validasi',
                        cancelButtonText: 'Tidak',
                        focusCancel: true,
                    }).then((result) => {
                        if (result.isConfirmed) {
                            this.onValidation();
                        }
                    });
                    break;
                case 'Cancel':
                    this.modalRef = this.modalService.show(this.modalCanceled, Object.assign({}, { class: 'modal-lg' }));
                    break;
                case 'Close':
                    this.modalRef = this.modalService.show(this.modalClosed, Object.assign({}, { class: 'modal-lg' }));
                    break;
                default:
                    break;
            }
        }
        onValidation() {
            this.refundObatIrnaService.Validation(this.id).subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Data Refund Berhasil Di Validasi', result.message)
                    .then(() => {
                    this.onLoadDetailData(this.id);
                });
            });
        }
        onCalceled() {
            let reason_canceled = document.getElementsByName("reason_canceled")[0].value;
            this.refundObatIrnaService.Cancel(this.id, reason_canceled).subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Data Refund Berhasil Di Cancel', result.message)
                    .then(() => {
                    this.onLoadDetailData(this.id);
                    this.modalRef.hide();
                });
            });
        }
    }
    RefundObatIrnaDetailComponent.ɵfac = function RefundObatIrnaDetailComponent_Factory(t) { return new (t || RefundObatIrnaDetailComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_services_refund_obat_refund_obat_irna_refund_obat_irna_service__WEBPACK_IMPORTED_MODULE_2__.RefundObatIrnaService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_3__.EncryptionService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_13__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_14__.Location), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_4__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_5__.BsModalService)); };
    RefundObatIrnaDetailComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: RefundObatIrnaDetailComponent, selectors: [["app-refund-obat-irna-detail"]], viewQuery: function RefundObatIrnaDetailComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c0, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c1, 5);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.modalCanceled = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.modalClosed = _t.first);
            }
        }, decls: 18, vars: 18, consts: [[3, "ButtonNav", "onClickButtonNav"], [3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "mb-2"], ["formControlName", "nomor_retur_penjualan_obat", 3, "label", "inputFieldState"], ["formControlName", "tanggal_retur_penjualan_obat", 3, "label", "inputFieldState"], ["formControlName", "nama_outlet", 3, "label", "inputFieldState"], ["formControlName", "keterangan_retur_penjualan_obat", 3, "label", "inputFieldState"], [3, "grid-DataSource", "columns"], [1, "row"], [1, "col-sm-5"], [1, "col-sm-4"], [1, "col-sm-3"], ["formControlName", "jumlah_item_retur", 3, "label", "isFooter", "inputFieldState"], ["modalCanceled", ""], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body", "p-10"], [1, "row", "mx-0", "my-1"], ["for", "reason_canceled"], [1, "col-sm-8"], ["type", "text", "name", "reason_canceled", 1, "form-control", "form-control-sm"], [1, "modal-footer", "background-abu-muda"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], ["type", "button", 1, "btn", "btn-danger", 3, "click"]], template: function RefundObatIrnaDetailComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClickButtonNav", function RefundObatIrnaDetailComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "form", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "mol-input-text", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "mol-input-text", 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](7, "mol-input-text", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](8, "mol-input-textarea", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](9, "mol-grid", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpipe"](10, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](11, "div", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "div", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "div", 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "mol-input-numeric", 13);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](16, RefundObatIrnaDetailComponent_ng_template_16_Template, 18, 0, "ng-template", null, 14, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.formInput);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "No Retur")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Tanggal Retur")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Outlet")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Keterangan")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("grid-DataSource", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpipeBind1"](10, 16, ctx.refundObatIrnaService.dataDetail$))("columns", ctx.ConfigGrid.TrDetail);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Jumlah Item")("isFooter", true)("inputFieldState", "detail")("inputFieldState", "detail");
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_6__.OrgCardLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_7__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _shared_components_molecules_form_mol_input_textarea_mol_input_textarea_component__WEBPACK_IMPORTED_MODULE_8__.MolInputTextareaComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_9__.MolGridComponent, _shared_components_molecules_form_mol_input_numeric_mol_input_numeric_component__WEBPACK_IMPORTED_MODULE_10__.MolInputNumericComponent], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_14__.AsyncPipe], styles: [""] });
    return RefundObatIrnaDetailComponent;
})();


/***/ }),

/***/ 56059:
/*!***************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irna/refund-obat-irna.component.ts ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_LookupGridNoRegistrasi_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache;
var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
var _json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RefundObatIrnaComponent": () => (/* binding */ RefundObatIrnaComponent)
/* harmony export */ });
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 70654);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ 31305);
/* harmony import */ var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/lookupitem.json */ 47876);
/* harmony import */ var _json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./json/gridPasien.config.json */ 8493);
/* harmony import */ var _json_LookupGridNoRegistrasi_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./json/LookupGridNoRegistrasi.json */ 85702);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _services_refund_obat_refund_obat_irna_refund_obat_irna_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../services/refund-obat/refund-obat-irna/refund-obat-irna.service */ 73940);
/* harmony import */ var src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/modules/shared/services/encryption.service */ 18757);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/router */ 29996);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/common */ 61116);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-bootstrap/modal */ 75470);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var src_app_modules_MM_services_setup_data_setup_item_setup_item_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/modules/MM/services/setup-data/setup-item/setup-item.service */ 13166);
/* harmony import */ var _services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../services/setup-data/setup-outlet/setup-outlet.service */ 47862);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_organism_loockUp_org_input_look_up_org_input_look_up_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/components/organism/loockUp/org-input-look-up/org-input-look-up.component */ 34550);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../shared/components/atoms/form/atm-label/atm-label.component */ 73391);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 34594);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 34903);






















const _c0 = ["LookupNoRegistrasi"];
const _c1 = ["gridDetail"];
const _c2 = ["LookupItem"];
const _c3 = ["modalQty"];
const _c4 = ["modalSatuan"];
const _c5 = ["modalCanceled"];
function RefundObatIrnaComponent_ng_template_39_Template(rf, ctx) {
    if (rf & 1) {
        const _r11 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "h5", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](2, "Edit Qty");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](3, "button", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function RefundObatIrnaComponent_ng_template_39_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r11); const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r10.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](4, "i", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](5, "div", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](6, "div", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](7, "div", 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](8, "input", 43, 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("keydown.enter", function RefundObatIrnaComponent_ng_template_39_Template_input_keydown_enter_8_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r11); const _r9 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵreference"](9); const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r12.handleQtyChange(_r9.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](10, "div", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](11, "button", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](12, "Oke");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    }
}
function RefundObatIrnaComponent_ng_template_41_option_10_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "option", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const item_r15 = ctx.$implicit;
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ngValue", item_r15.kode_satuan);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtextInterpolate1"]("", item_r15.kode_satuan, " ");
    }
}
function RefundObatIrnaComponent_ng_template_41_Template(rf, ctx) {
    if (rf & 1) {
        const _r17 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "h5", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](2, "Edit Satuan");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](3, "button", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function RefundObatIrnaComponent_ng_template_41_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r17); const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r16.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](4, "i", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](5, "div", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](6, "div", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](7, "div", 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](8, "select", 47, 48);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("keydown.enter", function RefundObatIrnaComponent_ng_template_41_Template_select_keydown_enter_8_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r17); const _r13 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵreference"](9); const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r18.handleSatuanChange(_r13.value); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplate"](10, RefundObatIrnaComponent_ng_template_41_option_10_Template, 2, 2, "option", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](11, "div", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](12, "button", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](13, "Oke");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("value", ctx_r6.detailSelected.kode_satuan_besar);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ngForOf", ctx_r6.datasatuan);
    }
}
function RefundObatIrnaComponent_ng_template_43_Template(rf, ctx) {
    if (rf & 1) {
        const _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "h5", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](2, "Canceled");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](3, "button", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function RefundObatIrnaComponent_ng_template_43_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r20); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r19.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](4, "i", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](5, "div", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](6, "div", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](7, "div", 51);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](8, "label", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](9, "strong");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](10, "Reason Cancel");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](11, "div", 53);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](12, "input", 54);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](13, "div", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](14, "button", 55);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function RefundObatIrnaComponent_ng_template_43_Template_button_click_14_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r20); const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r21.onCalceled(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](15, "Cancel Data");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](16, "button", 56);
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function RefundObatIrnaComponent_ng_template_43_Template_button_click_16_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵrestoreView"](_r20); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵnextContext"](); return ctx_r22.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](17, "Batal");
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
    }
}
let RefundObatIrnaComponent = /*@__PURE__*/ (() => {
    class RefundObatIrnaComponent {
        constructor(formBuilder, refundObatIrnaService, encryptionService, activatedRoute, location, renderer, modalService, changeDetection, utilityService, setupItemService, setupOutletService) {
            this.formBuilder = formBuilder;
            this.refundObatIrnaService = refundObatIrnaService;
            this.encryptionService = encryptionService;
            this.activatedRoute = activatedRoute;
            this.location = location;
            this.renderer = renderer;
            this.modalService = modalService;
            this.changeDetection = changeDetection;
            this.utilityService = utilityService;
            this.setupItemService = setupItemService;
            this.setupOutletService = setupOutletService;
            this.SetupOutletDropdownField = { text: 'nama_outlet', value: 'id_outlet' };
            this.urlNoRegistrasi = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_3__.PHARMACY.RETUR_PENJUALAN.RETUR_PENJUALAN_OBAT_IRNA.GET_PASIEN_IRNA_OPEN;
            this.LookupGridNoRegistrasi = /*#__PURE__*/ (_json_LookupGridNoRegistrasi_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (_json_LookupGridNoRegistrasi_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(_json_LookupGridNoRegistrasi_json__WEBPACK_IMPORTED_MODULE_2__, 2)));
            this.inputFieldState = 'detail';
            this.ButtonNav = [
                { Id: 'Back', Captions: 'Back', Icons1: 'fa-chevron-left' },
                { Id: 'Reset', Captions: 'Reset', Icons1: 'fas fa-undo fa-sm' },
                { Id: 'simpan', Captions: 'simpan', Icons1: 'fa-save' },
            ];
            this.GridDataEditSettings = { allowEditing: true };
            this.GridLookUpItem = /*#__PURE__*/ (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
            this.GridConfig = /*#__PURE__*/ (_json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (_json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(_json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1__, 2)));
            this.subscriptions = [];
            this.counterChildGrid = 0;
            this.datasatuan = [];
            this.childGridSatuan = [];
            this.id_stockroom = 0;
            this.dataSourceGrid = new rxjs__WEBPACK_IMPORTED_MODULE_15__.BehaviorSubject([]);
            this.dataScourceGridChild = [];
            this.totalJumlahItem = new rxjs__WEBPACK_IMPORTED_MODULE_15__.BehaviorSubject(0);
            this.itemBatch = [];
            this.id_item = new rxjs__WEBPACK_IMPORTED_MODULE_15__.BehaviorSubject(0);
            //=========
            this.id = 0;
        }
        ngOnInit() {
            this.formInput = this.formBuilder.group({
                id_register: ['',],
                depo: ['',],
                debitur: ['',],
                nama_pasien: ['',],
                bed: ['',],
                no_rm: ['',],
                no_register: ['',],
                dokter: ['',],
                umur: ['',],
                alamat: ['',],
                poli: ['',],
            });
            let id_item = this.id_item;
            let currentChildGird = null;
            this.itemsParams = {
                create: () => {
                    this.itemsElem = document.createElement('input');
                    return this.itemsElem;
                },
                read: () => {
                    return this.itemsObj.text;
                },
                destroy: () => {
                    this.itemsObj.destroy();
                },
                write: () => {
                    this.setupItemService.onGetEDItem(this.id_stockroom, id_item.value).subscribe((result) => {
                        this.itemsObj = new _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_16__.DropDownList({
                            value: '',
                            dataSource: result.data,
                            fields: { value: 'batch_number', text: 'batch_number' },
                            enabled: true,
                            placeholder: 'Select a Batch',
                            floatLabelType: 'Never',
                            change: function (args) {
                                this.setFormGrif(args);
                                id_item.next(args.itemData.id_item);
                            }.bind(this),
                        });
                        this.itemsObj.appendTo(this.itemsElem);
                    });
                    if (currentChildGird) {
                        setTimeout(() => {
                            this.itemsObj.value = currentChildGird.batch_number;
                        }, 500);
                    }
                }
            };
            let dataSourceChild = this.dataScourceGridChild;
            let counterChildGrid = this.counterChildGrid;
            let dataSourceGrid = this.dataSourceGrid;
            let totalJumlahItem = this.totalJumlahItem;
            this.ChildGrid = {
                dataSource: this.dataScourceGridChild,
                queryString: "penjualan_obat_detail_id",
                rowHeight: 30,
                allowResizing: true,
                allowTextWrap: false,
                textWrapSettings: { wrapMode: 'Both' },
                toolbar: ['Add', 'Edit', 'Delete', 'Update', 'Cancel'],
                editSettings: { allowEditing: true, allowAdding: true, allowDeleting: true },
                columns: [
                    { field: "penjualan_obat_id", headerText: 'penjualan_obat_id', width: 100, visible: false },
                    { field: "penjualan_obat_detail_id", headerText: 'penjualan_obat_detail_id', width: 100, visible: false },
                    { field: "no_urut", headerText: 'urut', visible: false },
                    { field: "id_item", headerText: 'id_item', width: 100, visible: false },
                    // { field: "batch_number", headerText: 'Batch Number', editType: 'dropdownedit', edit: this.itemsParams, width: 200 },
                    { field: "batch_number", headerText: 'Batch Number', textAlign: 'Right', width: 200 },
                    { field: "expired_date", headerText: 'Expired Date', textAlign: 'Right', width: 80, editType: "datepickeredit", format: "dd MMMM yyyy" },
                    { field: "qty_besar", headerText: 'Banyak', visible: false, headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                    { field: "satuan", headerText: 'Satuan', visible: false, editType: 'dropdownedit', edit: this.satuanParams, width: 200 },
                    { field: "isi", headerText: 'Isi', visible: false, headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2', allowEditing: false },
                    { field: "qty_retur_penjualan_obat", headerText: 'Qty', headerTextAlign: 'Center', textAlign: 'Right', width: 50, format: 'N2', allowEditing: true },
                    { field: "nama_satuan", headerText: 'Satuan', headerTextAlign: 'Center', textAlign: 'Left', width: 100, format: 'N2', allowEditing: false, visible: false },
                    { field: "harga_satuan_retur", headerText: '', headerTextAlign: 'Center', textAlign: 'Right', width: 1, format: 'N2', allowEditing: false, visible: false },
                    { field: "sub_total", headerText: '', headerTextAlign: 'Center', textAlign: 'Right', width: 1, format: 'N2', allowEditing: false, visible: false },
                ],
                rowSelected(args) {
                    currentChildGird = args.data;
                },
                actionBegin(args) {
                    if (args.requestType === 'add') {
                        args.data['id_item'] = this.parentDetails.parentRowData.id_item;
                        args.data['penjualan_obat_id'] = this.parentDetails.parentRowData.penjualan_obat_id;
                        args.data['penjualan_obat_detail_id'] = this.parentDetails.parentRowData.penjualan_obat_detail_id;
                        args.data['harga_satuan_retur'] = this.parentDetails.parentRowData.harga_satuan;
                        args.data['counterChildGrid'] = counterChildGrid++;
                        id_item.next(this.parentDetails.parentRowData.id_item);
                    }
                    // if (args.requestType === 'beginEdit'){
                    //     SelectedDataRacikanObat = args.rowData;
                    // }
                },
                actionComplete(args) {
                    if (args.requestType === 'save') {
                        console.log('complete', args);
                        if (args.action === 'add') {
                            dataSourceChild.push(args.data);
                        }
                        if (args.action === 'edit') {
                            let index = dataSourceChild.map((item) => { return item.counterChildGrid; }).indexOf(args.data.counterChildGrid);
                            dataSourceChild[index] = args.data;
                        }
                        let data = [];
                        dataSourceGrid.value.forEach((itemPrent, indexPrent) => {
                            let total = 0;
                            dataSourceChild.forEach((item, index) => {
                                if (itemPrent.id_item == item.id_item) {
                                    total = total + parseInt(item.qty_retur_penjualan_obat);
                                }
                            });
                            itemPrent.qty_retur = total;
                            data.push(itemPrent);
                        });
                        // setTimeout(()=>{
                        dataSourceGrid.next(data);
                        totalJumlahItem.next(data.sum('qty_retur'));
                        // console.log(data);
                        // },500)
                    }
                    if (args.requestType === "delete") {
                        let index = dataSourceChild.map((item) => { return item.counterChildGrid; }).indexOf(args.data[0].counterChildGrid);
                        dataSourceChild.splice(index, 1);
                        let data = [];
                        dataSourceGrid.value.forEach((itemPrent, indexPrent) => {
                            let total = 0;
                            dataSourceChild.forEach((item, index) => {
                                if (itemPrent.id_item == item.id_item) {
                                    total = total + parseInt(item.qty_pemakaian_internal);
                                }
                            });
                            itemPrent.qty = total;
                            data.push(itemPrent);
                        });
                        setTimeout(() => {
                            dataSourceGrid.next(data);
                            console.log(data);
                        }, 500);
                    }
                }
            };
            this.globalListenFunc = this.renderer.listen('document', 'keydown', e => {
                if (e.keyCode == 112) {
                    this.LookupItem.onOpenModal();
                    e.preventDefault();
                }
            });
            this.GridDetailToolbar = [
                { text: '| [*]=Ubah Banyak | [+]=Satuan |', }
            ];
            this.setupOutletService.setDataSource();
        }
        ngAfterViewInit() {
            // let pemesanan_id = this.encryptionService.decrypt(this.activatedRoute.snapshot.params["id"]);
            // console.log(pemesanan_id);
            // this.onLoadDetailData(pemesanan_id);
        }
        onDataBound() {
            this.gridDetail.detailRowModule.expandAll();
        }
        setFormGrif(args) {
            document.getElementsByName("expired_date")[0].value = args.itemData.expired_date;
            document.getElementsByName("nama_satuan")[0].value = args.itemData.nama_satuan;
            document.getElementsByName("hpp_satuan")[0].value = args.itemData.harga_satuan_netto;
        }
        heandleSelectedNoRegistrasi(args) {
            this.formInput.setValue({
                id_register: args.id_register,
                depo: this.depo.value,
                debitur: args.nama_debitur,
                nama_pasien: args.nama_pasien,
                no_rm: args.no_rekam_medis,
                no_register: args.no_register,
                dokter: args.nama_dokter,
                umur: args.umur,
                alamat: args.alamat_pasien,
                poli: args.nama_poli,
                bed: args.room_descr + ' - ' + args.bed_no,
            });
        }
        handleClickRefesh() {
            if (this.depo.value == '') {
                this.utilityService.onShowingCustomAlert('warning', 'Validasi', 'Depo belum di pilih');
                return false;
            }
            this.refundObatIrnaService.getDetailPenjualan(this.depo.value, this.id_register.value).subscribe((result) => {
                result.data.map((e, i) => {
                    return e.qty = 0;
                });
                this.dataSourceGrid.next(result.data);
            });
        }
        /** untuk identifikasi keyboard down pada grid */
        handleLoadGrid(args) {
            document.getElementsByClassName('e-grid')[0].addEventListener('keydown', this.KeyDownHandler.bind(this));
        }
        handleSelectdRow(args) {
            this.currentIndex = args.rowIndex;
            this.datasatuan = args.data.satuans;
            this.detailSelected = args.data;
            this.satuanVal = args.data.kode_satuan_besar;
        }
        handleActionCompleted($event) {
            if ($event.requestType == 'save') {
                console.log($event);
                this.refundObatIrnaService.updateFromInline($event.rowIndex, $event.data, $event.rowData);
                this.gridDetail.refresh();
            }
            // console.log('complate parent',this.gridDetail.childGrid.dataSource);
        }
        KeyDownHandler(event) {
            if (event.keyCode === 106) {
                this.onOpenQty();
            }
            ;
            if (event.keyCode === 46) {
                this.refundObatIrnaService.removeDataDetail(this.currentIndex);
                this.gridDetail.refresh();
                setTimeout(() => {
                    if (this.currentIndex != 0) {
                        this.gridDetail.selectedRowIndex = 0;
                    }
                }, 100);
            }
            ;
            //   if (event.keyCode === 111) {
            //       this.onOpenHarga()
            //   }
            //   if (event.keyCode === 109) {
            //       this.onOpenSubtotal()
            //   }
            if (event.keyCode === 107) {
                this.onOpenSatuan();
            }
        }
        onToolbarClick(args) {
            const item = args.item.id;
            switch (item) {
                case 'add':
                    this.LookupItem.onOpenModal();
                    break;
                default:
                    break;
            }
        }
        onOpenQty() {
            const _combine = (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.combineLatest)(this.modalService.onShow, this.modalService.onHidden).subscribe(() => this.changeDetection.markForCheck());
            this.subscriptions.push(this.modalService.onShown.subscribe(() => {
                setTimeout(() => {
                    document.getElementById("QtyValueId").focus();
                }, 100);
            }));
            this.subscriptions.push(this.modalService.onHidden.subscribe((reason) => {
                this.gridDetail.selectedRowIndex = this.currentIndex;
                this.gridDetail.selectRows([this.currentIndex]);
                this.unsubscribe();
            }));
            this.subscriptions.push(_combine);
            this.modalRef = this.modalService.show(this.modalQty, Object.assign({}, { class: 'modal-lg' }));
        }
        onOpenSatuan() {
            const _combine = (0,rxjs__WEBPACK_IMPORTED_MODULE_17__.combineLatest)(this.modalService.onShown, this.modalService.onHidden).subscribe(() => this.changeDetection.markForCheck());
            this.subscriptions.push(this.modalService.onShown.subscribe(() => {
                setTimeout(() => {
                    document.getElementById("SatuanValueId").focus();
                }, 100);
            }));
            this.subscriptions.push(this.modalService.onHidden.subscribe((reason) => {
                this.gridDetail.selectedRowIndex = this.currentIndex;
                this.gridDetail.selectRows([this.currentIndex]);
                this.unsubscribe();
            }));
            this.subscriptions.push(_combine);
            this.modalRef = this.modalService.show(this.modalSatuan, Object.assign({}, { class: 'modal-lg' }));
        }
        unsubscribe() {
            this.subscriptions.forEach((subscription) => {
                subscription.unsubscribe();
            });
            this.subscriptions = [];
        }
        selectLastRowdetail() {
            setTimeout(() => {
                let last = this.gridDetail.dataSource;
                this.gridDetail.selectedRowIndex = last.length - 1;
            }, 150);
        }
        onSave() {
            if (this.formInput.valid) {
                let data = this.formInput.value;
                this.dataScourceGridChild.map((e, i) => {
                    e.sub_total = e.qty_retur_penjualan_obat * e.harga_satuan_retur;
                    e.no_urut = i + 1;
                    return e;
                });
                data.jumlah_item_retur = this.dataScourceGridChild.sum('qty_retur_penjualan_obat');
                data.total_transaksi_retur = this.dataScourceGridChild.sum('sub_total');
                data.nomor_retur_penjualan_obat = '23135';
                data.tanggal_retur_penjualan_obat = '2021-12-10';
                data.id_outlet_terima_retur = this.depo.value;
                console.log('data header', data);
                console.log('data detail', this.dataScourceGridChild);
                data.details = this.dataScourceGridChild;
                console.log('data', data);
                this.refundObatIrnaService.Insert(data).subscribe((result) => {
                    console.log(result);
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Refund Obat', result.message)
                        .then(() => {
                        this.onReset();
                    });
                });
            }
            else {
                alert('isi semua data');
            }
        }
        onReset() {
            this.formInput.reset();
            this.dataScourceGridChild = [];
            this.dataSourceGrid.next([]);
            this.ChildGrid.dataSource = [];
        }
        onClickButtonNav(ButtonId) {
            switch (ButtonId) {
                case 'Back':
                    this.location.back();
                    break;
                case 'Reset':
                    this.onReset();
                    break;
                case "simpan":
                    // this.dataScourceGridChild;
                    this.onSave();
                    break;
                default:
                    break;
            }
        }
        get id_register() { return this.formInput.get('id_register'); }
        get depo() { return this.formInput.get('depo'); }
    }
    RefundObatIrnaComponent.ɵfac = function RefundObatIrnaComponent_Factory(t) { return new (t || RefundObatIrnaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_services_refund_obat_refund_obat_irna_refund_obat_irna_service__WEBPACK_IMPORTED_MODULE_4__.RefundObatIrnaService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_5__.EncryptionService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_19__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_20__.Location), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_14__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_6__.BsModalService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_14__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_7__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_modules_MM_services_setup_data_setup_item_setup_item_service__WEBPACK_IMPORTED_MODULE_8__.SetupItemService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_9__.SetupOutletService)); };
    RefundObatIrnaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdefineComponent"]({ type: RefundObatIrnaComponent, selectors: [["app-refund-obat-irna"]], viewQuery: function RefundObatIrnaComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c0, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c1, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c2, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c3, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c4, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c5, 5);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.LookupNoRegistrasi = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.gridDetail = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.LookupItem = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.modalQty = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.modalSatuan = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.modalCanceled = _t.first);
            }
        }, decls: 45, vars: 57, consts: [[3, "ButtonNav", "onClickButtonNav"], [3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "mb-2"], [3, "lookup-url", "idTitle", "modal-title", "columns", "filter-lookup", "label", "onGetSelectedData"], ["LookupNoRegistrasi", ""], ["formControlName", "no_rm", 3, "label", "inputFieldState"], ["formControlName", "debitur", 3, "label", "inputFieldState"], ["formControlName", "nama_pasien", 3, "label", "inputFieldState"], ["formControlName", "umur", 3, "label", "inputFieldState"], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2", "mb-2"], ["type", "button", 1, "btn", "btn-sm", "btn-primary", 3, "click"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "LabelCaption"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], ["id", "marital", "formControlName", "depo", 3, "dataSource", "fields", "allowFiltering"], ["MaritalOutletDropdown", ""], ["formControlName", "alamat", 3, "label", "inputFieldState"], ["formControlName", "poli", 3, "label", "inputFieldState"], ["formControlName", "bed", 3, "label", "inputFieldState"], ["formControlName", "dokter", 3, "label", "inputFieldState"], [3, "editSettings", "dataSource", "gridLines", "allowResizing", "childGrid", "actionComplete", "toolbarClick", "load", "rowSelected", "dataBound"], ["gridDetail", ""], ["field", "no_urut", "headerText", "urut", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_item", "headerText", "id_item", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_outlet", "headerText", "Depo", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "user_inputed_name", "headerText", "User Entry", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "time_inputed", "headerText", "Waktu Entry", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "kode_item", "headerText", "Kode Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_obat", "headerText", "Nama Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "qty_jual", "headerText", "QTY Jual", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing"], ["field", "qty_returned", "headerText", "QTY Telah Diretur", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing"], ["field", "qty_retur", "headerText", "QTY Akan Di Retur", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing"], ["modalQty", ""], ["modalSatuan", ""], ["modalCanceled", ""], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body", "p-10"], [1, "row", "mx-0", "my-1"], [1, "col-lg-12", "col-md-12", "col-sm-12"], ["type", "text", "id", "QtyValueId", 1, "form-control", 3, "keydown.enter"], ["qtyValueId", ""], [1, "modal-footer", "background-abu-muda"], ["type", "button", 1, "btn", "btn-primary"], ["id", "SatuanValueId", "multiple", "", 1, "form-control", 3, "value", "keydown.enter"], ["satuanValueId", ""], [3, "ngValue", 4, "ngFor", "ngForOf"], [3, "ngValue"], [1, "col-sm-4"], ["for", "reason_canceled"], [1, "col-sm-8"], ["type", "text", "name", "reason_canceled", 1, "form-control", "form-control-sm"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], ["type", "button", 1, "btn", "btn-danger", 3, "click"]], template: function RefundObatIrnaComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("onClickButtonNav", function RefundObatIrnaComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "form", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](2, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](3, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](4, "org-input-look-up", 4, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("onGetSelectedData", function RefundObatIrnaComponent_Template_org_input_look_up_onGetSelectedData_4_listener($event) { return ctx.heandleSelectedNoRegistrasi($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](6, "mol-input-text", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](7, "mol-input-text", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](8, "mol-input-text", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](9, "mol-input-text", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](10, "div", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](11, "button", 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("click", function RefundObatIrnaComponent_Template_button_click_11_listener() { return ctx.handleClickRefesh(); });
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](12, "Get Data");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](13, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](14, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](15, "div", 12);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](16, "atm-label", 13);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](17, "div", 14);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](18, "ejs-dropdownlist", 15, 16);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpipe"](20, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](21, "mol-input-text", 17);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](22, "mol-input-text", 18);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](23, "mol-input-text", 19);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](24, "mol-input-text", 20);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](25, "ejs-grid", 21, 22);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("actionComplete", function RefundObatIrnaComponent_Template_ejs_grid_actionComplete_25_listener($event) { return ctx.handleActionCompleted($event); })("toolbarClick", function RefundObatIrnaComponent_Template_ejs_grid_toolbarClick_25_listener($event) { return ctx.onToolbarClick($event); })("load", function RefundObatIrnaComponent_Template_ejs_grid_load_25_listener($event) { return ctx.handleLoadGrid($event); })("rowSelected", function RefundObatIrnaComponent_Template_ejs_grid_rowSelected_25_listener($event) { return ctx.handleSelectdRow($event); })("dataBound", function RefundObatIrnaComponent_Template_ejs_grid_dataBound_25_listener() { return ctx.onDataBound(); });
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpipe"](27, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](28, "e-columns");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](29, "e-column", 23);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](30, "e-column", 24);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](31, "e-column", 25);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](32, "e-column", 26);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](33, "e-column", 27);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](34, "e-column", 28);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](35, "e-column", 29);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](36, "e-column", 30);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](37, "e-column", 31);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](38, "e-column", 32);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplate"](39, RefundObatIrnaComponent_ng_template_39_Template, 13, 0, "ng-template", null, 33, _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplate"](41, RefundObatIrnaComponent_ng_template_41_Template, 14, 2, "ng-template", null, 34, _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplate"](43, RefundObatIrnaComponent_ng_template_43_Template, 18, 0, "ng-template", null, 35, _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵreference"](5);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("formGroup", ctx.formInput);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("lookup-url", ctx.urlNoRegistrasi)("idTitle", "nama_pasien")("modal-title", "Data No Registrasi")("columns", ctx.LookupGridNoRegistrasi.columns)("filter-lookup", _r0.filter)("label", "No Registrasi");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "No Rm")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Debitur")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Nama Pasien")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Umur")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](7);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("LabelCaption", "Depo");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpipeBind1"](20, 53, ctx.setupOutletService.dataSource))("fields", ctx.SetupOutletDropdownField)("allowFiltering", true);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Alamat Pasien")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Poli")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Bed")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Dokter")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("editSettings", ctx.GridDataEditSettings)("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpipeBind1"](27, 55, ctx.dataSourceGrid))("gridLines", "Both")("allowResizing", true)("childGrid", ctx.ChildGrid);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](4);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", false)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", false)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("visible", true)("allowEditing", false);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_10__.OrgCardLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_18__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_18__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormGroupDirective, _shared_components_organism_loockUp_org_input_look_up_org_input_look_up_component__WEBPACK_IMPORTED_MODULE_11__.OrgInputLookUpComponent, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_12__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_18__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_18__.FormControlName, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_13__.AtmLabelComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_21__.DropDownListComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_22__.AggregateColumnDirective, _angular_common__WEBPACK_IMPORTED_MODULE_20__.NgForOf, _angular_forms__WEBPACK_IMPORTED_MODULE_18__.NgSelectOption, _angular_forms__WEBPACK_IMPORTED_MODULE_18__["ɵNgSelectMultipleOption"]], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_20__.AsyncPipe], styles: ["#basic-addon1[_ngcontent-%COMP%] {\r\n  height: 32px;\r\n  padding-left: 12px;\r\n  width: 100%;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  border: 0;\r\n}\r\n\r\n#DropdownObat[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%] {\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n}\r\n\r\n#NumericQty[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%]    > input[_ngcontent-%COMP%] {\r\n  text-align: right;\r\n  padding-right: 5px;\r\n}\r\n\r\ndiv.head[_ngcontent-%COMP%] {\r\n  font-size: 13px !important;\r\n  font-weight: 500 !important;\r\n}\r\n\r\n.is-racikan[_ngcontent-%COMP%]{\r\n  background-color: #f3e6f3;\r\n}\r\n\r\n.form_paragraf[_ngcontent-%COMP%]{\r\n  display: inline-block!important;\r\n}\r\n\r\n.form-label[_ngcontent-%COMP%] {\r\nmargin-bottom: 0px;\r\n}\r\n\r\n#basic-addon1[_ngcontent-%COMP%] {\r\nheight: 32px;\r\npadding-left: 12px;\r\nwidth: 100%;\r\nborder-top-left-radius: 0;\r\nborder-bottom-left-radius: 0;\r\nborder: 0;\r\n}\r\n\r\n.e-toolbar[_ngcontent-%COMP%]   .e-toolbar-item[_ngcontent-%COMP%]   .e-tbar-btn.e-btn[_ngcontent-%COMP%]   .e-icons.e-btn-icon[_ngcontent-%COMP%] {\r\nmin-height: 14px !important;\r\n}\r\n\r\nth.e-headercell[_ngcontent-%COMP%] {\r\nbackground-color: rgba(0, 0, 0, 0.03);\r\ncolor: black;\r\nborder: 1px solid rgba(0, 0, 0, 0.125);\r\npadding: 5px !important;\r\nheight: 30px !important;\r\n}\r\n\r\nspan.e-headertext[_ngcontent-%COMP%] {\r\nfont-size: 13px !important;\r\n}\r\n\r\ntd.e-rowcell[_ngcontent-%COMP%] {\r\npadding: 5px !important;\r\n}"] });
    return RefundObatIrnaComponent;
})();


/***/ }),

/***/ 17788:
/*!*********************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/resep-racikan/resep-racikan.component.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResepRacikanComponent": () => (/* binding */ ResepRacikanComponent)
/* harmony export */ });
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 34903);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var _services_resep_racikan_resep_racikan_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../services/resep-racikan/resep-racikan.service */ 37188);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);





const _c0 = ["GridResepRacikan"];
let ResepRacikanComponent = /*@__PURE__*/ (() => {
    class ResepRacikanComponent {
        constructor(resepRacikanService) {
            this.resepRacikanService = resepRacikanService;
            /**
             * @GridResepRacikanDatasource
            */
            this.GridResepRacikanDatasource = [];
            /**
             * @GridDetailResepRacikanDatasource
            */
            this.GridDetailResepRacikanDatasource = [];
            this.ChildGrid = {
                dataSource: this.GridDetailResepRacikanDatasource,
                queryString: "id_obat",
                rowHeight: 30,
                allowResizing: true,
                allowTextWrap: true,
                textWrapSettings: { wrapMode: 'Both' },
                toolbar: [
                    { text: 'Add', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-xs', id: 'Add' },
                ],
                editSettings: { allowAdding: true },
                columns: [
                    { field: "id_obat", headerText: 'ID Obat', visible: false },
                    { field: "nama_obat", headerText: 'Nama Obat', width: 200 },
                    { field: "satuan", headerText: 'Satuan', width: 100 },
                    { field: "satuan_terkecil", headerText: 'Satuan Terkecil', width: 100 },
                    { field: "dosis_obat", headerText: 'Dosis Obat', textAlign: 'Right', width: 80 },
                    { field: "dosis_yg_diinginkan", headerText: 'Dosis yang Diinginkan', width: 100, headerTextAlign: 'Center', textAlign: 'Right' },
                    { field: "jumlah", headerText: 'Jumlah', textAlign: 'Right', width: 100, format: 'N2' },
                    { field: "harga", headerText: 'Harga (Rp)', textAlign: 'Right', width: 100, format: 'N2' },
                    { field: "subtotal", headerText: 'Subtotal (Rp)', textAlign: 'Right', width: 100, format: 'N2' },
                ],
            };
        }
        ngOnInit() {
            this.resepRacikanService.onGetResepRacikanDummy()
                .subscribe((result) => {
                this.GridResepRacikanDatasource = result;
            });
        }
        onLoad(args) {
            this.resepRacikanService.onGetDetailResepRacikanDummy()
                .subscribe((result) => {
                this.GridResepRacikan.childGrid.dataSource = result;
            });
        }
    }
    ResepRacikanComponent.ɵfac = function ResepRacikanComponent_Factory(t) { return new (t || ResepRacikanComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_services_resep_racikan_resep_racikan_service__WEBPACK_IMPORTED_MODULE_0__.ResepRacikanService)); };
    ResepRacikanComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: ResepRacikanComponent, selectors: [["app-resep-racikan"]], viewQuery: function ResepRacikanComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵviewQuery"](_c0, 5);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵloadQuery"]()) && (ctx.GridResepRacikan = _t.first);
            }
        }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵProvidersFeature"]([_syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_3__.DetailRowService])], decls: 18, vars: 3, consts: [[1, "row"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], [1, "card"], [1, "card-header"], [1, "mb-0", "text-biru-muda"], [1, "card-body", "p-0"], ["height", "calc(100vh - 13rem)", "gridLines", "Both", "rowHeight", "30", 3, "dataSource", "childGrid", "load"], ["GridResepRacikan", ""], ["field", "id_obat", "headerText", "Nama Obat", "textAlign", "Left", 3, "visible"], ["field", "nama_obat", "headerText", "Nama Obat", "textAlign", "Left"], ["field", "jumlah", "headerText", "Jumlah", "textAlign", "Center", "format", "N1"], ["field", "satuan", "headerText", "Satuan", "textAlign", "Left"], ["field", "harga", "headerText", "Harga (Rp)", "textAlign", "Right", "format", "N2"], ["field", "diskon", "headerText", "Diskon (%)", "textAlign", "Right", "format", "N2"], ["field", "subtotal", "headerText", "Subtotal (Rp)", "textAlign", "Right", "format", "N2"]], template: function ResepRacikanComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "org-card-layout");
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](1, "div", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](2, "div", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](3, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](4, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](5, "h5", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](6, "Resep Racikan Example");
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](7, "div", 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](8, "ejs-grid", 6, 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("load", function ResepRacikanComponent_Template_ejs_grid_load_8_listener($event) { return ctx.onLoad($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](10, "e-columns");
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](11, "e-column", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](12, "e-column", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](13, "e-column", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](14, "e-column", 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](15, "e-column", 12);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](16, "e-column", 13);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](17, "e-column", 14);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](8);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("dataSource", ctx.GridResepRacikanDatasource)("childGrid", ctx.ChildGrid);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("visible", false);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_1__.OrgCardLayoutComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_3__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_3__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_3__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_3__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_3__.AggregateColumnDirective], styles: [".e-toolbar[_ngcontent-%COMP%]   .e-toolbar-item[_ngcontent-%COMP%]   .e-tbar-btn.e-btn[_ngcontent-%COMP%]   .e-icons.e-btn-icon[_ngcontent-%COMP%] {\r\n  min-height: 14px !important;\r\n}\r\n\r\nth.e-headercell[_ngcontent-%COMP%] {\r\n  background-color: rgba(0, 0, 0, 0.03);\r\n  color: black;\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  padding: 10px !important;\r\n  height: 30px !important;\r\n}\r\n\r\nspan.e-headertext[_ngcontent-%COMP%] {\r\n  font-size: 13px !important;\r\n}\r\n\r\ntd.e-rowcell[_ngcontent-%COMP%] {\r\n  padding: 10px !important;\r\n}"] });
    return ResepRacikanComponent;
})();


/***/ }),

/***/ 42661:
/*!************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/setup-data/setup-cara-pakai-obat/setup-cara-pakai-obat.component.ts ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupCaraPakaiObatComponent": () => (/* binding */ SetupCaraPakaiObatComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/grid.config.json */ 5652);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var _services_setup_data_setup_cara_pakai_obat_setup_cara_pakai_obat_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/setup-data/setup-cara-pakai-obat/setup-cara-pakai-obat.service */ 71329);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-component/org-tabs-component.component */ 70651);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-item-component/org-tabs-item-component.component */ 38511);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-label-component/org-tabs-label-component.component */ 11753);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-body-component/org-tabs-body-component.component */ 38952);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);













const _c0 = ["OrgTabsRef"];
const _c1 = function () { return []; };
let SetupCaraPakaiObatComponent = /*@__PURE__*/ (() => {
    class SetupCaraPakaiObatComponent {
        constructor(formBuilder, utilityService, setupCaraPakaiObatService) {
            this.formBuilder = formBuilder;
            this.utilityService = utilityService;
            this.setupCaraPakaiObatService = setupCaraPakaiObatService;
            /**
             * Variable untuk menyimpan Configurasi Grid
             * @Json Config
            */
            this.GridConfig = /*#__PURE__*/ (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
            /**
             * Variable untuk menentukan component input
             * @val normal,edit,detail
            */
            this.inputFieldState = 'normal';
            /**
             * Variable untuk menentukan tap berada di posisi mana
             * @valur data | input
            */
            this.TabId = 'Data';
            this.GridData = null;
            this.GridDataEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
            this.FormInputData = this.formBuilder.group({
                id_cara_pakai_obat: [0, []],
                kode_cara_pakai_obat: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required]],
                cara_pakai_obat: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required]],
                is_active: [false, []]
            });
        }
        ngOnInit() {
            this.GridDataToolbar = [
                { text: 'Add', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-sm', id: 'add' },
                { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
                { text: 'Detail', tooltipText: 'Detail', prefixIcon: 'fas fa-info-circle fa-sm', id: 'detail' },
                'Search'
            ];
            this.GetAllData();
        }
        handleSelectedTabId(TabId) {
            this.TabId = TabId;
            if (TabId == 'Input') {
                this.setNewForm;
            }
            else {
                this.GetAllData;
            }
        }
        InitalizedGrid(component) {
            this.GridData = component;
        }
        handleSelectedRow(args) {
            this.SelectedData = args.data;
        }
        handleActionComplete($event) {
            console.log($event);
            if ($event.requestType == "save") {
                if ($event.data.is_active != $event.rowData.is_active) {
                    this.SetActive($event.data.is_active, $event.data.id_cara_pakai_obat);
                }
            }
        }
        handleToolbarClick(args) {
            const item = args.item.id;
            switch (item) {
                case 'add':
                    this.setNewForm();
                    break;
                case 'edit':
                    this.setEditForm();
                    break;
                case 'detail':
                    this.setViewForm();
                    break;
                default:
                    break;
            }
        }
        handleClickCommandGrid(args) {
            console.log(args);
        }
        handleClickButtonNav(ButtonId) {
            switch (ButtonId) {
                case 'SaveAndNew':
                    this.SaveAndNew();
                    break;
                case 'Clear':
                    this.Clear();
                    break;
                case 'Cancel':
                    this.Cancel();
                    break;
                default:
                    break;
            }
        }
        /** untuk identifikasi keyboard down pada grid */
        handleLoadGrid(args) {
            document.getElementsByClassName('e-grid')[0].addEventListener('keydown', this.KeyDownHandler.bind(this));
        }
        /** method setting input new data */
        setNewForm() {
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.inputFieldState = 'normal';
            this.FormInputData.reset();
            this.StatusFormNew = true;
            this.ButtonNav = [
                { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
                { Id: 'Clear', Captions: 'Clear', Icons1: 'fa-redo-alt' },
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        ;
        /** method setting edit data */
        setEditForm() {
            this.inputFieldState = 'edit';
            this.SetFrom(this.SelectedData);
            this.StatusFormNew = false;
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.ButtonNav = [
                { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        ;
        /** method setting lihat data detail */
        setViewForm() {
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.inputFieldState = 'detail';
            this.SetFrom(this.SelectedData);
            this.ButtonNav = [
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        /** Method untuk mengkosongkan data yang ada di form*/
        ResetFrom() {
            this.FormInputData.reset();
        }
        /** Method Untuk Mereload Data Grid */
        GetAllData() {
            this.setupCaraPakaiObatService.onGetAll()
                .subscribe((result) => {
                this.GridDatasource = result.data;
            });
        }
        AddDataCaraPakaiObat() {
            console.log('Add');
        }
        /** Method Untuk Mengisikan data yang ada di form */
        SetFrom(Data) {
            this.FormInputData.reset();
            this.FormInputData.setValue(Data);
        }
        /** Method menyimpan | menubah data */
        SaveAndNew() {
            const Data = this.FormInputData.value;
            if (this.inputFieldState == 'normal') {
                this.setupCaraPakaiObatService.onPostSave(Data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                        .then(() => {
                        this.ResetFrom();
                    });
                });
            }
            else {
                this.setupCaraPakaiObatService.onPutEdit(Data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Ubah Data', result.message)
                        .then(() => {
                    });
                });
            }
        }
        /** Method untuk mengubah status aktif | Non Active
         * @param is_active,kode_cara_pakai_obat
        */
        SetActive(is_active, id_cara_pakai_obat) {
            let data = {
                id_cara_pakai_obat: id_cara_pakai_obat
            };
            console.log('data', data);
            console.log('is_active', is_active);
            if (is_active) {
                this.setupCaraPakaiObatService.onPutToActive(data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Di Aktifkan', result.message)
                        .then(() => {
                    });
                });
            }
            else {
                this.setupCaraPakaiObatService.onPutToDeActive(data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Di Non Aktifkan', result.message)
                        .then(() => {
                    });
                });
            }
        }
        Clear() {
            this.ResetFrom();
        }
        Cancel() {
            this.ResetFrom();
            this.OrgTabsRef.onNavigateTabUsingTabId(0, 'Data');
            this.GetAllData();
        }
        KeyDownHandler(event) {
            if (event.keyCode === 13) {
                console.log('Enter Has Been Pressed');
            }
            ;
            if (event.keyCode === 46) {
                console.log('Delete Key Has Been Pressed');
            }
            ;
            if (event.keyCode === 40) {
                console.log('Delete Key Has Been Pressed');
            }
        }
        get kode_cara_pakai_obat() { return this.FormInputData.get('kode_cara_pakai_obat'); }
        get cara_pakai_obat() { return this.FormInputData.get('cara_pakai_obat'); }
    }
    SetupCaraPakaiObatComponent.ɵfac = function SetupCaraPakaiObatComponent_Factory(t) { return new (t || SetupCaraPakaiObatComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_services_setup_data_setup_cara_pakai_obat_setup_cara_pakai_obat_service__WEBPACK_IMPORTED_MODULE_2__.SetupCaraPakaiObatService)); };
    SetupCaraPakaiObatComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: SetupCaraPakaiObatComponent, selectors: [["app-setup-cara-pakai-obat"]], viewQuery: function SetupCaraPakaiObatComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c0, 7);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.OrgTabsRef = _t.first);
            }
        }, decls: 18, vars: 22, consts: [[3, "ButtonNav", "onClickButtonNav"], [3, "showHeader", "onGetSelectedTabId"], ["OrgTabsRef", ""], [3, "Id"], [3, "grid-height", "grid-DataSource", "grid-paging", "grid-editSettings", "grid-lines", "grid-toolbar", "columns", "row-selected", "toolbar-click", "load-grid", "initialized", "command-click", "action-complete"], ["GridData", ""], [1, "p-2", 3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "mb-2"], ["formControlName", "kode_cara_pakai_obat", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState", "disabled"], ["formControlName", "cara_pakai_obat", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState"]], template: function SetupCaraPakaiObatComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClickButtonNav", function SetupCaraPakaiObatComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.handleClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "org-tabs", 1, 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onGetSelectedTabId", function SetupCaraPakaiObatComponent_Template_org_tabs_onGetSelectedTabId_1_listener($event) { return ctx.handleSelectedTabId($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "org-tabs-item");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "org-tabs-label", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5, "Data Cara Pakai Obat");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "org-tabs-body");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "mol-grid", 4, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("row-selected", function SetupCaraPakaiObatComponent_Template_mol_grid_row_selected_7_listener($event) { return ctx.handleSelectedRow($event); })("toolbar-click", function SetupCaraPakaiObatComponent_Template_mol_grid_toolbar_click_7_listener($event) { return ctx.handleToolbarClick($event); })("load-grid", function SetupCaraPakaiObatComponent_Template_mol_grid_load_grid_7_listener($event) { return ctx.handleLoadGrid($event); })("initialized", function SetupCaraPakaiObatComponent_Template_mol_grid_initialized_7_listener($event) { return ctx.InitalizedGrid($event); })("command-click", function SetupCaraPakaiObatComponent_Template_mol_grid_command_click_7_listener($event) { return ctx.handleClickCommandGrid($event); })("action-complete", function SetupCaraPakaiObatComponent_Template_mol_grid_action_complete_7_listener($event) { return ctx.handleActionComplete($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "org-tabs-item");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "org-tabs-label", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](11, "Input Cara Pakai Obat");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "org-tabs-body");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "form", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "div", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "mol-input-text", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](17, "mol-input-text", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ButtonNav", ctx.TabId == "Input" ? ctx.ButtonNav : _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](21, _c1));
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showHeader", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("Id", "Data");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("grid-height", 300)("grid-DataSource", ctx.GridDatasource)("grid-paging", false)("grid-editSettings", ctx.GridDataEditSettings)("grid-lines", "Both")("grid-toolbar", ctx.GridDataToolbar)("columns", ctx.GridConfig.GridColumns);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("Id", "Input");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.FormInputData);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Kode Cara Pakai Obat")("IsFormControlInvalid", ctx.kode_cara_pakai_obat.invalid)("ValidatorsCaption", "Kode Cara Pakai Obat Tidak Boleh Kosong")("inputFieldState", ctx.inputFieldState)("disabled", ctx.inputFieldState === "edit");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Nama Cara Pakai Obat")("IsFormControlInvalid", ctx.cara_pakai_obat.invalid)("ValidatorsCaption", "Nama Cara Pakai Obat Tidak Boleh Kosong")("inputFieldState", ctx.inputFieldState);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__.OrgCardLayoutComponent, _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_4__.OrgTabsComponentComponent, _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_5__.OrgTabsItemComponentComponent, _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_6__.OrgTabsLabelComponentComponent, _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_7__.OrgTabsBodyComponentComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_8__.MolGridComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_10__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_9__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormControlName], styles: [""] });
    return SetupCaraPakaiObatComponent;
})();


/***/ }),

/***/ 32973:
/*!************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/setup-data/setup-grup-obat/setup-grup-obat.component.ts ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupGrupObatComponent": () => (/* binding */ SetupGrupObatComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/grid.config.json */ 92232);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var _services_setup_data_setup_grup_obat_setup_grup_obat_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/setup-data/setup-grup-obat/setup-grup-obat.service */ 73186);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-component/org-tabs-component.component */ 70651);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-item-component/org-tabs-item-component.component */ 38511);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-label-component/org-tabs-label-component.component */ 11753);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-body-component/org-tabs-body-component.component */ 38952);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);













const _c0 = ["OrgTabsRef"];
const _c1 = function () { return []; };
let SetupGrupObatComponent = /*@__PURE__*/ (() => {
    class SetupGrupObatComponent {
        constructor(formBuilder, utilityService, setupGrupObatService) {
            this.formBuilder = formBuilder;
            this.utilityService = utilityService;
            this.setupGrupObatService = setupGrupObatService;
            /**
             * Variable untuk menyimpan Configurasi Grid
             * @Json Config
            */
            this.GridConfig = /*#__PURE__*/ (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
            /**
             * Variable untuk menentukan component input
             * @val normal,edit,detail
            */
            this.inputFieldState = 'normal';
            /**
             * Variable untuk menentukan tap berada di posisi mana
             * @valur data | input
            */
            this.TabId = 'Data';
            this.GridData = null;
            this.GridDataEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
            this.FormInputData = this.formBuilder.group({
                id_grup_obat: ['', []],
                kode_grup_obat: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required]],
                nama_grup_obat: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required]],
                is_active: [false, []]
            });
        }
        ngOnInit() {
            this.GridDataToolbar = [
                { text: 'Add', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-sm', id: 'add' },
                { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
                { text: 'Detail', tooltipText: 'Detail', prefixIcon: 'fas fa-info-circle fa-sm', id: 'detail' },
                'Search'
            ];
            this.GetAllData();
        }
        handleSelectedTabId(TabId) {
            this.TabId = TabId;
            if (TabId == 'Input') {
                this.setNewForm;
            }
            else {
                this.GetAllData;
            }
        }
        InitalizedGrid(component) {
            this.GridData = component;
        }
        handleSelectedRow(args) {
            this.SelectedData = args.data;
        }
        handleActionComplete($event) {
            console.log($event);
            if ($event.requestType == "save") {
                if ($event.data.is_active != $event.rowData.is_active) {
                    this.SetActive($event.data.is_active, $event.data.id_grup_obat);
                }
            }
        }
        handleToolbarClick(args) {
            const item = args.item.id;
            switch (item) {
                case 'add':
                    this.setNewForm();
                    break;
                case 'edit':
                    this.setEditForm();
                    break;
                case 'detail':
                    this.setViewForm();
                    break;
                default:
                    break;
            }
        }
        handleClickCommandGrid(args) {
            console.log(args);
        }
        handleClickButtonNav(ButtonId) {
            switch (ButtonId) {
                case 'SaveAndNew':
                    this.SaveAndNew();
                    break;
                case 'Clear':
                    this.Clear();
                    break;
                case 'Cancel':
                    this.Cancel();
                    break;
                default:
                    break;
            }
        }
        /** untuk identifikasi keyboard down pada grid */
        handleLoadGrid(args) {
            document.getElementsByClassName('e-grid')[0].addEventListener('keydown', this.KeyDownHandler.bind(this));
        }
        /** method setting input new data */
        setNewForm() {
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.inputFieldState = 'normal';
            this.FormInputData.reset();
            this.StatusFormNew = true;
            this.ButtonNav = [
                { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
                { Id: 'Clear', Captions: 'Clear', Icons1: 'fa-redo-alt' },
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        ;
        /** method setting edit data */
        setEditForm() {
            this.inputFieldState = 'edit';
            this.SetFrom(this.SelectedData);
            this.StatusFormNew = false;
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.ButtonNav = [
                { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        ;
        /** method setting lihat data detail */
        setViewForm() {
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.inputFieldState = 'detail';
            this.SetFrom(this.SelectedData);
            this.ButtonNav = [
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        /** Method untuk mengkosongkan data yang ada di form*/
        ResetFrom() {
            this.FormInputData.reset();
        }
        /** Method Untuk Mereload Data Grid */
        GetAllData() {
            this.setupGrupObatService.onGetAll()
                .subscribe((result) => {
                this.GridDatasource = result.data;
            });
        }
        AddDataGrupObat() {
            console.log('Add');
        }
        /** Method Untuk Mengisikan data yang ada di form */
        SetFrom(Data) {
            delete Data.user_created;
            delete Data.time_created;
            delete Data.user_deactived;
            delete Data.time_deactived;
            this.FormInputData.reset();
            this.FormInputData.setValue(Data);
        }
        /** Method menyimpan | menubah data */
        SaveAndNew() {
            const Data = this.FormInputData.value;
            if (this.inputFieldState == 'normal') {
                this.setupGrupObatService.onPostSave(Data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                        .then(() => {
                        this.ResetFrom();
                    });
                });
            }
            else {
                this.setupGrupObatService.onPutEdit(Data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Ubah Data', result.message)
                        .then(() => {
                    });
                });
            }
        }
        /** Method untuk mengubah status aktif | Non Active
         * @param is_active,kode_grup_obat
        */
        SetActive(is_active, id_grup_obat) {
            let data = {
                id_grup_obat: id_grup_obat
            };
            console.log('data', data);
            console.log('is_active', is_active);
            if (is_active) {
                this.setupGrupObatService.onPutToActive(data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Di Aktifkan', result.message)
                        .then(() => {
                    });
                });
            }
            else {
                this.setupGrupObatService.onPutToDeActive(data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Di Non Aktifkan', result.message)
                        .then(() => {
                    });
                });
            }
        }
        Clear() {
            this.ResetFrom();
        }
        Cancel() {
            this.ResetFrom();
            this.OrgTabsRef.onNavigateTabUsingTabId(0, 'Data');
            this.GetAllData();
        }
        KeyDownHandler(event) {
            if (event.keyCode === 13) {
                console.log('Enter Has Been Pressed');
            }
            ;
            if (event.keyCode === 46) {
                console.log('Delete Key Has Been Pressed');
            }
            ;
            if (event.keyCode === 40) {
                console.log('Delete Key Has Been Pressed');
            }
        }
        get kode_grup_obat() { return this.FormInputData.get('kode_grup_obat'); }
        get nama_grup_obat() { return this.FormInputData.get('nama_grup_obat'); }
    }
    SetupGrupObatComponent.ɵfac = function SetupGrupObatComponent_Factory(t) { return new (t || SetupGrupObatComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_services_setup_data_setup_grup_obat_setup_grup_obat_service__WEBPACK_IMPORTED_MODULE_2__.SetupGrupObatService)); };
    SetupGrupObatComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: SetupGrupObatComponent, selectors: [["app-setup-grup-obat"]], viewQuery: function SetupGrupObatComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c0, 7);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.OrgTabsRef = _t.first);
            }
        }, decls: 18, vars: 22, consts: [[3, "ButtonNav", "onClickButtonNav"], [3, "showHeader", "onGetSelectedTabId"], ["OrgTabsRef", ""], [3, "Id"], [3, "grid-height", "grid-DataSource", "grid-paging", "grid-editSettings", "grid-lines", "grid-toolbar", "columns", "row-selected", "toolbar-click", "load-grid", "initialized", "command-click", "action-complete"], ["GridData", ""], [1, "p-2", 3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "mb-2"], ["formControlName", "kode_grup_obat", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState", "disabled"], ["formControlName", "nama_grup_obat", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState"]], template: function SetupGrupObatComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClickButtonNav", function SetupGrupObatComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.handleClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "org-tabs", 1, 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onGetSelectedTabId", function SetupGrupObatComponent_Template_org_tabs_onGetSelectedTabId_1_listener($event) { return ctx.handleSelectedTabId($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "org-tabs-item");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "org-tabs-label", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5, "Data Grup Obat");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "org-tabs-body");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "mol-grid", 4, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("row-selected", function SetupGrupObatComponent_Template_mol_grid_row_selected_7_listener($event) { return ctx.handleSelectedRow($event); })("toolbar-click", function SetupGrupObatComponent_Template_mol_grid_toolbar_click_7_listener($event) { return ctx.handleToolbarClick($event); })("load-grid", function SetupGrupObatComponent_Template_mol_grid_load_grid_7_listener($event) { return ctx.handleLoadGrid($event); })("initialized", function SetupGrupObatComponent_Template_mol_grid_initialized_7_listener($event) { return ctx.InitalizedGrid($event); })("command-click", function SetupGrupObatComponent_Template_mol_grid_command_click_7_listener($event) { return ctx.handleClickCommandGrid($event); })("action-complete", function SetupGrupObatComponent_Template_mol_grid_action_complete_7_listener($event) { return ctx.handleActionComplete($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "org-tabs-item");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "org-tabs-label", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](11, "Input Grup Obat");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "org-tabs-body");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "form", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "div", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "mol-input-text", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](17, "mol-input-text", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ButtonNav", ctx.TabId == "Input" ? ctx.ButtonNav : _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](21, _c1));
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showHeader", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("Id", "Data");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("grid-height", 300)("grid-DataSource", ctx.GridDatasource)("grid-paging", false)("grid-editSettings", ctx.GridDataEditSettings)("grid-lines", "Both")("grid-toolbar", ctx.GridDataToolbar)("columns", ctx.GridConfig.GridColumns);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("Id", "Input");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.FormInputData);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Kode Grup Obat")("IsFormControlInvalid", ctx.kode_grup_obat.invalid)("ValidatorsCaption", "Kode Grup Obat Tidak Boleh Kosong")("inputFieldState", ctx.inputFieldState)("disabled", ctx.inputFieldState === "edit");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Nama Grup Obat")("IsFormControlInvalid", ctx.nama_grup_obat.invalid)("ValidatorsCaption", "Nama Grup Obat Tidak Boleh Kosong")("inputFieldState", ctx.inputFieldState);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__.OrgCardLayoutComponent, _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_4__.OrgTabsComponentComponent, _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_5__.OrgTabsItemComponentComponent, _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_6__.OrgTabsLabelComponentComponent, _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_7__.OrgTabsBodyComponentComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_8__.MolGridComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_10__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_9__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormControlName], styles: [""] });
    return SetupGrupObatComponent;
})();


/***/ }),

/***/ 29012:
/*!**********************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/setup-data/setup-label-pemakaian-obat/setup-label-pemakaian-obat.component.ts ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupLabelPemakaianObatComponent": () => (/* binding */ SetupLabelPemakaianObatComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/grid.config.json */ 60141);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var _services_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/setup-data/setup-label-pemakaian-obat/setup-label-pemakaian-obat.service */ 13527);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-component/org-tabs-component.component */ 70651);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-item-component/org-tabs-item-component.component */ 38511);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-label-component/org-tabs-label-component.component */ 11753);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-body-component/org-tabs-body-component.component */ 38952);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);













const _c0 = ["OrgTabsRef"];
const _c1 = function () { return []; };
let SetupLabelPemakaianObatComponent = /*@__PURE__*/ (() => {
    class SetupLabelPemakaianObatComponent {
        constructor(formBuilder, utilityService, setupLabelPemakaianObatService) {
            this.formBuilder = formBuilder;
            this.utilityService = utilityService;
            this.setupLabelPemakaianObatService = setupLabelPemakaianObatService;
            /**
             * Variable untuk menyimpan Configurasi Grid
             * @Json Config
            */
            this.GridConfig = /*#__PURE__*/ (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
            /**
             * Variable untuk menentukan component input
             * @val normal,edit,detail
            */
            this.inputFieldState = 'normal';
            /**
             * Variable untuk menentukan tap berada di posisi mana
             * @valur data | input
            */
            this.TabId = 'Data';
            this.GridData = null;
            this.GridDataEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
            this.FormInputData = this.formBuilder.group({
                id_label_pemakaian_obat: [0, []],
                kode_label_pemakaian_obat: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required]],
                nama_label_pemakaian_obat: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required]],
                berapa_kali_per_hari: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required]],
                is_active: [false, []]
            });
        }
        ngOnInit() {
            this.GridDataToolbar = [
                { text: 'Add', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-sm', id: 'add' },
                { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
                { text: 'Detail', tooltipText: 'Detail', prefixIcon: 'fas fa-info-circle fa-sm', id: 'detail' },
                'Search'
            ];
            this.GetAllData();
        }
        handleSelectedTabId(TabId) {
            this.TabId = TabId;
            if (TabId == 'Input') {
                this.setNewForm;
            }
            else {
                this.GetAllData;
            }
        }
        InitalizedGrid(component) {
            this.GridData = component;
        }
        handleSelectedRow(args) {
            this.SelectedData = args.data;
        }
        handleActionComplete($event) {
            console.log($event);
            if ($event.requestType == "save") {
                if ($event.data.is_active != $event.rowData.is_active) {
                    this.SetActive($event.data.is_active, $event.data.id_label_pemakaian_obat);
                }
            }
        }
        handleToolbarClick(args) {
            const item = args.item.id;
            switch (item) {
                case 'add':
                    this.setNewForm();
                    break;
                case 'edit':
                    this.setEditForm();
                    break;
                case 'detail':
                    this.setViewForm();
                    break;
                default:
                    break;
            }
        }
        handleClickCommandGrid(args) {
            console.log(args);
        }
        handleClickButtonNav(ButtonId) {
            switch (ButtonId) {
                case 'SaveAndNew':
                    this.SaveAndNew();
                    break;
                case 'Clear':
                    this.Clear();
                    break;
                case 'Cancel':
                    this.Cancel();
                    break;
                default:
                    break;
            }
        }
        /** untuk identifikasi keyboard down pada grid */
        handleLoadGrid(args) {
            document.getElementsByClassName('e-grid')[0].addEventListener('keydown', this.KeyDownHandler.bind(this));
        }
        /** method setting input new data */
        setNewForm() {
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.inputFieldState = 'normal';
            this.FormInputData.reset();
            this.StatusFormNew = true;
            this.ButtonNav = [
                { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
                { Id: 'Clear', Captions: 'Clear', Icons1: 'fa-redo-alt' },
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        ;
        /** method setting edit data */
        setEditForm() {
            this.inputFieldState = 'edit';
            this.SetFrom(this.SelectedData);
            this.StatusFormNew = false;
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.ButtonNav = [
                { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        ;
        /** method setting lihat data detail */
        setViewForm() {
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.inputFieldState = 'detail';
            this.SetFrom(this.SelectedData);
            this.ButtonNav = [
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        /** Method untuk mengkosongkan data yang ada di form*/
        ResetFrom() {
            this.FormInputData.reset();
            this.kode_label_pemakaian_obat.setValue('');
            this.nama_label_pemakaian_obat.setValue('');
        }
        /** Method Untuk Mereload Data Grid */
        GetAllData() {
            this.setupLabelPemakaianObatService.onGetAll()
                .subscribe((result) => {
                this.GridDatasource = result.data;
            });
        }
        AddDataLabelPemakaianObat() {
            console.log('Add');
        }
        /** Method Untuk Mengisikan data yang ada di form */
        SetFrom(Data) {
            this.FormInputData.reset();
            this.FormInputData.setValue(Data);
        }
        /** Method menyimpan | menubah data */
        SaveAndNew() {
            const Data = this.FormInputData.value;
            if (this.inputFieldState == 'normal') {
                this.setupLabelPemakaianObatService.onPostSave(Data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                        .then(() => {
                        this.ResetFrom();
                    });
                });
            }
            else {
                this.setupLabelPemakaianObatService.onPutEdit(Data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Ubah Data', result.message)
                        .then(() => {
                    });
                });
            }
        }
        /** Method untuk mengubah status aktif | Non Active
         * @param is_active,kode_label_pemakaian_obat
        */
        SetActive(is_active, id_label_pemakaian_obat) {
            let data = {
                id_label_pemakaian_obat: id_label_pemakaian_obat
            };
            console.log('data', data);
            console.log('is_active', is_active);
            if (is_active) {
                this.setupLabelPemakaianObatService.onPutToActive(data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Di Aktifkan', result.message)
                        .then(() => {
                    });
                });
            }
            else {
                this.setupLabelPemakaianObatService.onPutToDeActive(data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Di Non Aktifkan', result.message)
                        .then(() => {
                    });
                });
            }
        }
        Clear() {
            this.ResetFrom();
        }
        Cancel() {
            this.ResetFrom();
            this.OrgTabsRef.onNavigateTabUsingTabId(0, 'Data');
            this.GetAllData();
        }
        KeyDownHandler(event) {
            if (event.keyCode === 13) {
                console.log('Enter Has Been Pressed');
            }
            ;
            if (event.keyCode === 46) {
                console.log('Delete Key Has Been Pressed');
            }
            ;
            if (event.keyCode === 40) {
                console.log('Delete Key Has Been Pressed');
            }
        }
        get kode_label_pemakaian_obat() { return this.FormInputData.get('kode_label_pemakaian_obat'); }
        get nama_label_pemakaian_obat() { return this.FormInputData.get('nama_label_pemakaian_obat'); }
        get berapa_kali_per_hari() { return this.FormInputData.get('berapa_kali_per_hari'); }
    }
    SetupLabelPemakaianObatComponent.ɵfac = function SetupLabelPemakaianObatComponent_Factory(t) { return new (t || SetupLabelPemakaianObatComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_services_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_service__WEBPACK_IMPORTED_MODULE_2__.SetupLabelPemakaianObatService)); };
    SetupLabelPemakaianObatComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: SetupLabelPemakaianObatComponent, selectors: [["app-setup-label-pemakaian-obat"]], viewQuery: function SetupLabelPemakaianObatComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c0, 7);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.OrgTabsRef = _t.first);
            }
        }, decls: 19, vars: 24, consts: [[3, "ButtonNav", "onClickButtonNav"], [3, "showHeader", "onGetSelectedTabId"], ["OrgTabsRef", ""], [3, "Id"], [3, "grid-height", "grid-DataSource", "grid-paging", "grid-editSettings", "grid-lines", "grid-toolbar", "columns", "row-selected", "toolbar-click", "load-grid", "initialized", "command-click", "action-complete"], ["GridData", ""], [1, "p-2", 3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "mb-2"], ["formControlName", "kode_label_pemakaian_obat", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState", "disabled"], ["formControlName", "nama_label_pemakaian_obat", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState"], ["formControlName", "berapa_kali_per_hari", 3, "label", "inputFieldState"]], template: function SetupLabelPemakaianObatComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClickButtonNav", function SetupLabelPemakaianObatComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.handleClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "org-tabs", 1, 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onGetSelectedTabId", function SetupLabelPemakaianObatComponent_Template_org_tabs_onGetSelectedTabId_1_listener($event) { return ctx.handleSelectedTabId($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "org-tabs-item");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "org-tabs-label", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5, "Data Label Pemakaian Obat");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "org-tabs-body");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "mol-grid", 4, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("row-selected", function SetupLabelPemakaianObatComponent_Template_mol_grid_row_selected_7_listener($event) { return ctx.handleSelectedRow($event); })("toolbar-click", function SetupLabelPemakaianObatComponent_Template_mol_grid_toolbar_click_7_listener($event) { return ctx.handleToolbarClick($event); })("load-grid", function SetupLabelPemakaianObatComponent_Template_mol_grid_load_grid_7_listener($event) { return ctx.handleLoadGrid($event); })("initialized", function SetupLabelPemakaianObatComponent_Template_mol_grid_initialized_7_listener($event) { return ctx.InitalizedGrid($event); })("command-click", function SetupLabelPemakaianObatComponent_Template_mol_grid_command_click_7_listener($event) { return ctx.handleClickCommandGrid($event); })("action-complete", function SetupLabelPemakaianObatComponent_Template_mol_grid_action_complete_7_listener($event) { return ctx.handleActionComplete($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "org-tabs-item");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "org-tabs-label", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](11, "Input Label Pemakaian Obat");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "org-tabs-body");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "form", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "div", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "mol-input-text", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](17, "mol-input-text", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](18, "mol-input-text", 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ButtonNav", ctx.TabId == "Input" ? ctx.ButtonNav : _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](23, _c1));
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showHeader", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("Id", "Data");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("grid-height", 300)("grid-DataSource", ctx.GridDatasource)("grid-paging", false)("grid-editSettings", ctx.GridDataEditSettings)("grid-lines", "Both")("grid-toolbar", ctx.GridDataToolbar)("columns", ctx.GridConfig.GridColumns);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("Id", "Input");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.FormInputData);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Kode Label Pemakaian Obat")("IsFormControlInvalid", ctx.kode_label_pemakaian_obat.invalid)("ValidatorsCaption", "Kode Label Pemakaian Obat Tidak Boleh Kosong")("inputFieldState", ctx.inputFieldState)("disabled", ctx.inputFieldState === "edit");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Nama Label Pemakaian Obat")("IsFormControlInvalid", ctx.nama_label_pemakaian_obat.invalid)("ValidatorsCaption", "Nama Label Pemakaian Obat Tidak Boleh Kosong")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Berapa Kali Perhari")("inputFieldState", ctx.inputFieldState);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__.OrgCardLayoutComponent, _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_4__.OrgTabsComponentComponent, _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_5__.OrgTabsItemComponentComponent, _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_6__.OrgTabsLabelComponentComponent, _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_7__.OrgTabsBodyComponentComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_8__.MolGridComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_10__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_9__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormControlName], styles: [""] });
    return SetupLabelPemakaianObatComponent;
})();


/***/ }),

/***/ 49357:
/*!******************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/setup-data/setup-outlet/setup-outlet.component.ts ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupOutletComponent": () => (/* binding */ SetupOutletComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/grid.config.json */ 84212);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var _services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/setup-data/setup-outlet/setup-outlet.service */ 47862);
/* harmony import */ var src_app_modules_MM_services_setup_data_setup_stockroom_setup_stock_room_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/MM/services/setup-data/setup-stockroom/setup-stock-room.service */ 22282);
/* harmony import */ var _services_setup_data_setup_tipe_outlet_setup_tipe_outlet_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../services/setup-data/setup-tipe-outlet/setup-tipe-outlet.service */ 38404);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-component/org-tabs-component.component */ 70651);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-item-component/org-tabs-item-component.component */ 38511);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-label-component/org-tabs-label-component.component */ 11753);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-body-component/org-tabs-body-component.component */ 38952);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/components/atoms/form/atm-label/atm-label.component */ 73391);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 34594);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/common */ 61116);


















const _c0 = ["OrgTabsRef"];
const _c1 = function () { return []; };
let SetupOutletComponent = /*@__PURE__*/ (() => {
    class SetupOutletComponent {
        constructor(formBuilder, utilityService, setupOutletService, setupStockroomService, setupTipeOutletService) {
            this.formBuilder = formBuilder;
            this.utilityService = utilityService;
            this.setupOutletService = setupOutletService;
            this.setupStockroomService = setupStockroomService;
            this.setupTipeOutletService = setupTipeOutletService;
            this.MaritalTipeOutletDropdownField = { text: 'tipe_outlet', value: 'id_tipe_outlet' };
            this.MaritalStockroomDropdownField = { text: 'nama_stockroom', value: 'id_stockroom' };
            /**
             * Variable untuk menyimpan Configurasi Grid
             * @Json Config
            */
            this.GridConfig = /*#__PURE__*/ (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
            /**
             * Variable untuk menentukan component input
             * @val normal,edit,detail
            */
            this.inputFieldState = 'normal';
            /**
             * Variable untuk menentukan tap berada di posisi mana
             * @valur data | input
            */
            this.TabId = 'Data';
            this.GridData = null;
            this.GridDataEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
            this.FormInputData = this.formBuilder.group({
                id_outlet: [0, []],
                id_stockroom: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
                kode_outlet: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
                nama_outlet: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
                id_tipe_outlet: [0, [_angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required]],
                is_active: [false, []]
            });
        }
        ngOnInit() {
            this.GridDataToolbar = [
                { text: 'Add', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-sm', id: 'add' },
                { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
                { text: 'Detail', tooltipText: 'Detail', prefixIcon: 'fas fa-info-circle fa-sm', id: 'detail' },
                'Search'
            ];
            this.GetAllData();
            this.setupStockroomService.setDataSource();
            this.setupTipeOutletService.setDataSource();
        }
        handleSelectedTabId(TabId) {
            this.TabId = TabId;
            if (TabId == 'Input') {
                this.setNewForm;
            }
            else {
                this.GetAllData;
            }
        }
        InitalizedGrid(component) {
            this.GridData = component;
        }
        handleSelectedRow(args) {
            this.SelectedData = args.data;
        }
        handleActionComplete($event) {
            console.log($event);
            if ($event.requestType == "save") {
                if ($event.data.is_active != $event.rowData.is_active) {
                    this.SetActive($event.data.is_active, $event.data.id_outlet);
                }
            }
        }
        handleToolbarClick(args) {
            const item = args.item.id;
            switch (item) {
                case 'add':
                    this.setNewForm();
                    break;
                case 'edit':
                    this.setEditForm();
                    break;
                case 'detail':
                    this.setViewForm();
                    break;
                default:
                    break;
            }
        }
        handleClickCommandGrid(args) {
            console.log(args);
        }
        handleClickButtonNav(ButtonId) {
            switch (ButtonId) {
                case 'SaveAndNew':
                    this.SaveAndNew();
                    break;
                case 'Clear':
                    this.Clear();
                    break;
                case 'Cancel':
                    this.Cancel();
                    break;
                default:
                    break;
            }
        }
        /** untuk identifikasi keyboard down pada grid */
        handleLoadGrid(args) {
            document.getElementsByClassName('e-grid')[0].addEventListener('keydown', this.KeyDownHandler.bind(this));
        }
        /** method setting input new data */
        setNewForm() {
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.inputFieldState = 'normal';
            this.FormInputData.reset();
            this.StatusFormNew = true;
            this.ButtonNav = [
                { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
                { Id: 'Clear', Captions: 'Clear', Icons1: 'fa-redo-alt' },
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        ;
        /** method setting edit data */
        setEditForm() {
            this.inputFieldState = 'edit';
            this.SetFrom(this.SelectedData);
            this.StatusFormNew = false;
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.ButtonNav = [
                { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        ;
        /** method setting lihat data detail */
        setViewForm() {
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.inputFieldState = 'detail';
            this.SetFrom(this.SelectedData);
            this.ButtonNav = [
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        /** Method untuk mengkosongkan data yang ada di form*/
        ResetFrom() {
            this.FormInputData.reset();
        }
        /** Method Untuk Mereload Data Grid */
        GetAllData() {
            this.setupOutletService.onGetAll()
                .subscribe((result) => {
                this.GridDatasource = result.data;
            });
        }
        AddDataOutlet() {
            console.log('Add');
        }
        /** Method Untuk Mengisikan data yang ada di form */
        SetFrom(Data) {
            this.FormInputData.reset();
            this.FormInputData.setValue(Data);
        }
        /** Method menyimpan | menubah data */
        SaveAndNew() {
            const Data = this.FormInputData.value;
            if (this.inputFieldState == 'normal') {
                this.setupOutletService.onPostSave(Data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                        .then(() => {
                        this.ResetFrom();
                    });
                });
            }
            else {
                this.setupOutletService.onPutEdit(Data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Ubah Data', result.message)
                        .then(() => {
                    });
                });
            }
        }
        /** Method untuk mengubah status aktif | Non Active
         * @param is_active,kode_outlet
        */
        SetActive(is_active, id_outlet) {
            let data = {
                id_outlet: id_outlet
            };
            console.log('data', data);
            console.log('is_active', is_active);
            if (is_active) {
                this.setupOutletService.onPutToActive(data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Di Aktifkan', result.message)
                        .then(() => {
                    });
                });
            }
            else {
                this.setupOutletService.onPutToDeActive(data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Di Non Aktifkan', result.message)
                        .then(() => {
                    });
                });
            }
        }
        Clear() {
            this.ResetFrom();
        }
        Cancel() {
            this.ResetFrom();
            this.OrgTabsRef.onNavigateTabUsingTabId(0, 'Data');
            this.GetAllData();
        }
        KeyDownHandler(event) {
            if (event.keyCode === 13) {
                console.log('Enter Has Been Pressed');
            }
            ;
            if (event.keyCode === 46) {
                console.log('Delete Key Has Been Pressed');
            }
            ;
            if (event.keyCode === 40) {
                console.log('Delete Key Has Been Pressed');
            }
        }
        get id_stockroom() { return this.FormInputData.get('id_stockroom'); }
        get kode_outlet() { return this.FormInputData.get('kode_outlet'); }
        get nama_outlet() { return this.FormInputData.get('nama_outlet'); }
        get id_tipe_outlet() { return this.FormInputData.get('id_tipe_outlet'); }
    }
    SetupOutletComponent.ɵfac = function SetupOutletComponent_Factory(t) { return new (t || SetupOutletComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_2__.SetupOutletService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](src_app_modules_MM_services_setup_data_setup_stockroom_setup_stock_room_service__WEBPACK_IMPORTED_MODULE_3__.SetupStockroomService), _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdirectiveInject"](_services_setup_data_setup_tipe_outlet_setup_tipe_outlet_service__WEBPACK_IMPORTED_MODULE_4__.SetupTipeOutletService)); };
    SetupOutletComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵdefineComponent"]({ type: SetupOutletComponent, selectors: [["app-setup-outlet"]], viewQuery: function SetupOutletComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵviewQuery"](_c0, 7);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵloadQuery"]()) && (ctx.OrgTabsRef = _t.first);
            }
        }, decls: 32, vars: 34, consts: [[3, "ButtonNav", "onClickButtonNav"], [3, "showHeader", "onGetSelectedTabId"], ["OrgTabsRef", ""], [3, "Id"], [3, "grid-height", "grid-DataSource", "grid-paging", "grid-editSettings", "grid-lines", "grid-toolbar", "columns", "row-selected", "toolbar-click", "load-grid", "initialized", "command-click", "action-complete"], ["GridData", ""], [1, "p-2", 3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "mb-2"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "LabelCaption"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], ["id", "marital", "formControlName", "id_stockroom", 3, "dataSource", "fields", "allowFiltering"], ["MaritalStockroomDropdown", ""], ["formControlName", "kode_outlet", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState", "disabled"], ["formControlName", "nama_outlet", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState"], ["id", "marital", "formControlName", "id_tipe_outlet", 3, "dataSource", "fields", "allowFiltering"], ["MaritalTipeOutletDropdown", ""]], template: function SetupOutletComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("onClickButtonNav", function SetupOutletComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.handleClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](1, "org-tabs", 1, 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("onGetSelectedTabId", function SetupOutletComponent_Template_org_tabs_onGetSelectedTabId_1_listener($event) { return ctx.handleSelectedTabId($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](3, "org-tabs-item");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](4, "org-tabs-label", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](5, "Data Outlet");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](6, "org-tabs-body");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](7, "mol-grid", 4, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵlistener"]("row-selected", function SetupOutletComponent_Template_mol_grid_row_selected_7_listener($event) { return ctx.handleSelectedRow($event); })("toolbar-click", function SetupOutletComponent_Template_mol_grid_toolbar_click_7_listener($event) { return ctx.handleToolbarClick($event); })("load-grid", function SetupOutletComponent_Template_mol_grid_load_grid_7_listener($event) { return ctx.handleLoadGrid($event); })("initialized", function SetupOutletComponent_Template_mol_grid_initialized_7_listener($event) { return ctx.InitalizedGrid($event); })("command-click", function SetupOutletComponent_Template_mol_grid_command_click_7_listener($event) { return ctx.handleClickCommandGrid($event); })("action-complete", function SetupOutletComponent_Template_mol_grid_action_complete_7_listener($event) { return ctx.handleActionComplete($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](9, "org-tabs-item");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](10, "org-tabs-label", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵtext"](11, "Input Outlet");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](12, "org-tabs-body");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](13, "form", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](14, "div", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](15, "div", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](16, "div", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](17, "div", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](18, "atm-label", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](19, "div", 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](20, "ejs-dropdownlist", 12, 13);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpipe"](22, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](23, "mol-input-text", 14);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](24, "mol-input-text", 15);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](25, "div", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](26, "div", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](27, "atm-label", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementStart"](28, "div", 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelement"](29, "ejs-dropdownlist", 16, 17);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpipe"](31, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("ButtonNav", ctx.TabId == "Input" ? ctx.ButtonNav : _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpureFunction0"](33, _c1));
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("showHeader", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("Id", "Data");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("grid-height", 300)("grid-DataSource", ctx.GridDatasource)("grid-paging", false)("grid-editSettings", ctx.GridDataEditSettings)("grid-lines", "Both")("grid-toolbar", ctx.GridDataToolbar)("columns", ctx.GridConfig.GridColumns);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("Id", "Input");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("formGroup", ctx.FormInputData);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](5);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("LabelCaption", "Stockroom");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpipeBind1"](22, 29, ctx.setupStockroomService.dataSource))("fields", ctx.MaritalStockroomDropdownField)("allowFiltering", true);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Kode Outlet")("IsFormControlInvalid", ctx.kode_outlet.invalid)("ValidatorsCaption", "Kode Outlet Tidak Boleh Kosong")("inputFieldState", ctx.inputFieldState)("disabled", ctx.inputFieldState === "edit");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("label", "Nama Outlet")("IsFormControlInvalid", ctx.nama_outlet.invalid)("ValidatorsCaption", "Nama Outlet Tidak Boleh Kosong")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("LabelCaption", "Tipe Outlet");
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_14__["ɵɵpipeBind1"](31, 31, ctx.setupTipeOutletService.dataSource))("fields", ctx.MaritalTipeOutletDropdownField)("allowFiltering", true);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_5__.OrgCardLayoutComponent, _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_6__.OrgTabsComponentComponent, _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_7__.OrgTabsItemComponentComponent, _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_8__.OrgTabsLabelComponentComponent, _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_9__.OrgTabsBodyComponentComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_10__.MolGridComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormGroupDirective, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_11__.AtmLabelComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_15__.DropDownListComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormControlName, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_12__.MolInputTextComponent], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_16__.AsyncPipe], styles: [""] });
    return SetupOutletComponent;
})();


/***/ }),

/***/ 30939:
/*!********************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/setup-data/setup-rute-pemberian-obat/setup-rute-pemberian-obat.component.ts ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupRutePemberianObatComponent": () => (/* binding */ SetupRutePemberianObatComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/grid.config.json */ 53106);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var _services_setup_data_setup_rute_pemberian_obat_setup_rute_pemberian_obat_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/setup-data/setup-rute-pemberian-obat/setup-rute-pemberian-obat.service */ 4452);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-component/org-tabs-component.component */ 70651);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-item-component/org-tabs-item-component.component */ 38511);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-label-component/org-tabs-label-component.component */ 11753);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-body-component/org-tabs-body-component.component */ 38952);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);
/* harmony import */ var _shared_components_molecules_form_mol_input_checkbox_single_mol_input_checkbox_single_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-checkbox-single/mol-input-checkbox-single.component */ 36740);














const _c0 = ["OrgTabsRef"];
const _c1 = function () { return []; };
let SetupRutePemberianObatComponent = /*@__PURE__*/ (() => {
    class SetupRutePemberianObatComponent {
        constructor(formBuilder, utilityService, setupRutePemberianObatService) {
            this.formBuilder = formBuilder;
            this.utilityService = utilityService;
            this.setupRutePemberianObatService = setupRutePemberianObatService;
            /**
             * Variable untuk menyimpan Configurasi Grid
             * @Json Config
            */
            this.GridConfig = /*#__PURE__*/ (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
            /**
             * Variable untuk menentukan component input
             * @val normal,edit,detail
            */
            this.inputFieldState = 'normal';
            /**
             * Variable untuk menentukan tap berada di posisi mana
             * @valur data | input
            */
            this.TabId = 'Data';
            this.GridData = null;
            this.GridDataEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
            this.FormInputData = this.formBuilder.group({
                id_rute_pemberian_obat: [0, []],
                nama_rute_pemberian_obat: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.required]],
                rute_pasien: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.required]],
                ordered: [0, []],
                is_parenteral: [false, []],
                is_active: [false, []]
            });
        }
        ngOnInit() {
            this.GridDataToolbar = [
                { text: 'Add', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-sm', id: 'add' },
                { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
                { text: 'Detail', tooltipText: 'Detail', prefixIcon: 'fas fa-info-circle fa-sm', id: 'detail' },
                'Search'
            ];
            this.GetAllData();
        }
        handleSelectedTabId(TabId) {
            this.TabId = TabId;
            if (TabId == 'Input') {
                this.setNewForm;
            }
            else {
                this.GetAllData;
            }
        }
        InitalizedGrid(component) {
            this.GridData = component;
        }
        handleSelectedRow(args) {
            this.SelectedData = args.data;
        }
        handleActionComplete($event) {
            console.log($event);
            if ($event.requestType == "save") {
                if ($event.data.is_active != $event.rowData.is_active) {
                    this.SetActive($event.data.is_active, $event.data.id_rute_pemberian_obat);
                }
            }
        }
        handleToolbarClick(args) {
            const item = args.item.id;
            switch (item) {
                case 'add':
                    this.setNewForm();
                    break;
                case 'edit':
                    this.setEditForm();
                    break;
                case 'detail':
                    this.setViewForm();
                    break;
                default:
                    break;
            }
        }
        handleClickCommandGrid(args) {
            console.log(args);
        }
        handleClickButtonNav(ButtonId) {
            switch (ButtonId) {
                case 'SaveAndNew':
                    this.SaveAndNew();
                    break;
                case 'Clear':
                    this.Clear();
                    break;
                case 'Cancel':
                    this.Cancel();
                    break;
                default:
                    break;
            }
        }
        /** untuk identifikasi keyboard down pada grid */
        handleLoadGrid(args) {
            document.getElementsByClassName('e-grid')[0].addEventListener('keydown', this.KeyDownHandler.bind(this));
        }
        /** method setting input new data */
        setNewForm() {
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.inputFieldState = 'normal';
            this.FormInputData.reset();
            this.StatusFormNew = true;
            this.ButtonNav = [
                { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
                { Id: 'Clear', Captions: 'Clear', Icons1: 'fa-redo-alt' },
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        ;
        /** method setting edit data */
        setEditForm() {
            this.inputFieldState = 'edit';
            this.SetFrom(this.SelectedData);
            this.StatusFormNew = false;
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.ButtonNav = [
                { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        ;
        /** method setting lihat data detail */
        setViewForm() {
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.inputFieldState = 'detail';
            this.SetFrom(this.SelectedData);
            this.ButtonNav = [
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        /** Method untuk mengkosongkan data yang ada di form*/
        ResetFrom() {
            this.FormInputData.reset();
        }
        /** Method Untuk Mereload Data Grid */
        GetAllData() {
            this.setupRutePemberianObatService.onGetAll()
                .subscribe((result) => {
                this.GridDatasource = result.data;
            });
        }
        AddDataRutePemberianObat() {
            console.log('Add');
        }
        /** Method Untuk Mengisikan data yang ada di form */
        SetFrom(Data) {
            this.FormInputData.reset();
            this.FormInputData.setValue(Data);
        }
        /** Method menyimpan | menubah data */
        SaveAndNew() {
            const Data = this.FormInputData.value;
            if (this.inputFieldState == 'normal') {
                this.setupRutePemberianObatService.onPostSave(Data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                        .then(() => {
                        this.ResetFrom();
                    });
                });
            }
            else {
                this.setupRutePemberianObatService.onPutEdit(Data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Ubah Data', result.message)
                        .then(() => {
                    });
                });
            }
        }
        /** Method untuk mengubah status aktif | Non Active
         * @param is_active,kode_rute_pemberian_obat
        */
        SetActive(is_active, id_rute_pemberian_obat) {
            let data = {
                id_rute_pemberian_obat: id_rute_pemberian_obat
            };
            console.log('data', data);
            console.log('is_active', is_active);
            if (is_active) {
                this.setupRutePemberianObatService.onPutToActive(data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Di Aktifkan', result.message)
                        .then(() => {
                    });
                });
            }
            else {
                this.setupRutePemberianObatService.onPutToDeActive(data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Di Non Aktifkan', result.message)
                        .then(() => {
                    });
                });
            }
        }
        Clear() {
            this.ResetFrom();
        }
        Cancel() {
            this.ResetFrom();
            this.OrgTabsRef.onNavigateTabUsingTabId(0, 'Data');
            this.GetAllData();
        }
        KeyDownHandler(event) {
            if (event.keyCode === 13) {
                console.log('Enter Has Been Pressed');
            }
            ;
            if (event.keyCode === 46) {
                console.log('Delete Key Has Been Pressed');
            }
            ;
            if (event.keyCode === 40) {
                console.log('Delete Key Has Been Pressed');
            }
        }
        get id_rute_pemberian_obat() { return this.FormInputData.get('id_rute_pemberian_obat'); }
        get nama_rute_pemberian_obat() { return this.FormInputData.get('nama_rute_pemberian_obat'); }
        get rute_pasien() { return this.FormInputData.get('rute_pasien'); }
        get ordered() { return this.FormInputData.get('ordered'); }
        get is_parenteral() { return this.FormInputData.get('is_parenteral'); }
    }
    SetupRutePemberianObatComponent.ɵfac = function SetupRutePemberianObatComponent_Factory(t) { return new (t || SetupRutePemberianObatComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_services_setup_data_setup_rute_pemberian_obat_setup_rute_pemberian_obat_service__WEBPACK_IMPORTED_MODULE_2__.SetupRutePemberianObatService)); };
    SetupRutePemberianObatComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({ type: SetupRutePemberianObatComponent, selectors: [["app-setup-rute-pemberian-obat"]], viewQuery: function SetupRutePemberianObatComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c0, 7);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx.OrgTabsRef = _t.first);
            }
        }, decls: 20, vars: 24, consts: [[3, "ButtonNav", "onClickButtonNav"], [3, "showHeader", "onGetSelectedTabId"], ["OrgTabsRef", ""], [3, "Id"], [3, "grid-height", "grid-DataSource", "grid-paging", "grid-editSettings", "grid-lines", "grid-toolbar", "columns", "row-selected", "toolbar-click", "load-grid", "initialized", "command-click", "action-complete"], ["GridData", ""], [1, "p-2", 3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "mb-2"], ["formControlName", "nama_rute_pemberian_obat", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState"], ["formControlName", "rute_pasien", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState"], ["formControlName", "ordered", 3, "label", "inputFieldState"], ["formControlName", "is_parenteral", "id", "is_parenteral", 3, "label"]], template: function SetupRutePemberianObatComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("onClickButtonNav", function SetupRutePemberianObatComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.handleClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "org-tabs", 1, 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("onGetSelectedTabId", function SetupRutePemberianObatComponent_Template_org_tabs_onGetSelectedTabId_1_listener($event) { return ctx.handleSelectedTabId($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "org-tabs-item");
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "org-tabs-label", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](5, "Data Rute Pemberian Obat");
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "org-tabs-body");
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "mol-grid", 4, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("row-selected", function SetupRutePemberianObatComponent_Template_mol_grid_row_selected_7_listener($event) { return ctx.handleSelectedRow($event); })("toolbar-click", function SetupRutePemberianObatComponent_Template_mol_grid_toolbar_click_7_listener($event) { return ctx.handleToolbarClick($event); })("load-grid", function SetupRutePemberianObatComponent_Template_mol_grid_load_grid_7_listener($event) { return ctx.handleLoadGrid($event); })("initialized", function SetupRutePemberianObatComponent_Template_mol_grid_initialized_7_listener($event) { return ctx.InitalizedGrid($event); })("command-click", function SetupRutePemberianObatComponent_Template_mol_grid_command_click_7_listener($event) { return ctx.handleClickCommandGrid($event); })("action-complete", function SetupRutePemberianObatComponent_Template_mol_grid_action_complete_7_listener($event) { return ctx.handleActionComplete($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "org-tabs-item");
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "org-tabs-label", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](11, "Input Rute Pemberian Obat");
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](12, "org-tabs-body");
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](13, "form", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "div", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](15, "div", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](16, "mol-input-text", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](17, "mol-input-text", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](18, "mol-input-text", 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](19, "mol-input-checkbox-single", 12);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ButtonNav", ctx.TabId == "Input" ? ctx.ButtonNav : _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction0"](23, _c1));
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("showHeader", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("Id", "Data");
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("grid-height", 300)("grid-DataSource", ctx.GridDatasource)("grid-paging", false)("grid-editSettings", ctx.GridDataEditSettings)("grid-lines", "Both")("grid-toolbar", ctx.GridDataToolbar)("columns", ctx.GridConfig.GridColumns);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("Id", "Input");
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("formGroup", ctx.FormInputData);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "Nama Rute Pemberian Obat")("IsFormControlInvalid", ctx.nama_rute_pemberian_obat.invalid)("ValidatorsCaption", "Nama Rute Pemberian Obat Tidak Boleh Kosong")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "Kode Rute Pemberian Obat")("IsFormControlInvalid", ctx.rute_pasien.invalid)("ValidatorsCaption", "Kode Rute Pemberian Obat Tidak Boleh Kosong")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "Ordered")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "Parenteral");
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__.OrgCardLayoutComponent, _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_4__.OrgTabsComponentComponent, _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_5__.OrgTabsItemComponentComponent, _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_6__.OrgTabsLabelComponentComponent, _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_7__.OrgTabsBodyComponentComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_8__.MolGridComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_9__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormControlName, _shared_components_molecules_form_mol_input_checkbox_single_mol_input_checkbox_single_component__WEBPACK_IMPORTED_MODULE_10__.MolInputCheckboxSingleComponent], styles: [""] });
    return SetupRutePemberianObatComponent;
})();


/***/ }),

/***/ 72854:
/*!****************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/setup-data/setup-tipe-outlet/setup-tipe-outlet.component.ts ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupTipeOutletComponent": () => (/* binding */ SetupTipeOutletComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/grid.config.json */ 20520);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var _services_setup_data_setup_tipe_outlet_setup_tipe_outlet_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/setup-data/setup-tipe-outlet/setup-tipe-outlet.service */ 38404);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-component/org-tabs-component.component */ 70651);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-item-component/org-tabs-item-component.component */ 38511);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-label-component/org-tabs-label-component.component */ 11753);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/organism/tabs/org-tabs-body-component/org-tabs-body-component.component */ 38952);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);













const _c0 = ["OrgTabsRef"];
const _c1 = function () { return []; };
let SetupTipeOutletComponent = /*@__PURE__*/ (() => {
    class SetupTipeOutletComponent {
        constructor(formBuilder, utilityService, setupTipeOutletService) {
            this.formBuilder = formBuilder;
            this.utilityService = utilityService;
            this.setupTipeOutletService = setupTipeOutletService;
            /**
             * Variable untuk menyimpan Configurasi Grid
             * @Json Config
            */
            this.GridConfig = /*#__PURE__*/ (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
            /**
             * Variable untuk menentukan component input
             * @val normal,edit,detail
            */
            this.inputFieldState = 'normal';
            /**
             * Variable untuk menentukan tap berada di posisi mana
             * @valur data | input
            */
            this.TabId = 'Data';
            this.GridData = null;
            this.GridDataEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
            this.FormInputData = this.formBuilder.group({
                id_tipe_outlet: [0, []],
                tipe_outlet: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required]],
                keterangan: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_10__.Validators.required]],
            });
        }
        ngOnInit() {
            this.GridDataToolbar = [
                { text: 'Add', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-sm', id: 'add' },
                { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
                { text: 'Detail', tooltipText: 'Detail', prefixIcon: 'fas fa-info-circle fa-sm', id: 'detail' },
                'Search'
            ];
            this.GetAllData();
        }
        handleSelectedTabId(TabId) {
            this.TabId = TabId;
            if (TabId == 'Input') {
                this.setNewForm;
            }
            else {
                this.GetAllData;
            }
        }
        InitalizedGrid(component) {
            this.GridData = component;
        }
        handleSelectedRow(args) {
            this.SelectedData = args.data;
        }
        handleToolbarClick(args) {
            const item = args.item.id;
            switch (item) {
                case 'add':
                    this.setNewForm();
                    break;
                case 'edit':
                    this.setEditForm();
                    break;
                case 'detail':
                    this.setViewForm();
                    break;
                default:
                    break;
            }
        }
        handleClickCommandGrid(args) {
            console.log(args);
        }
        handleClickButtonNav(ButtonId) {
            switch (ButtonId) {
                case 'SaveAndNew':
                    this.SaveAndNew();
                    break;
                case 'Clear':
                    this.Clear();
                    break;
                case 'Cancel':
                    this.Cancel();
                    break;
                default:
                    break;
            }
        }
        /** untuk identifikasi keyboard down pada grid */
        handleLoadGrid(args) {
            document.getElementsByClassName('e-grid')[0].addEventListener('keydown', this.KeyDownHandler.bind(this));
        }
        /** method setting input new data */
        setNewForm() {
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.inputFieldState = 'normal';
            this.FormInputData.reset();
            this.StatusFormNew = true;
            this.ButtonNav = [
                { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
                { Id: 'Clear', Captions: 'Clear', Icons1: 'fa-redo-alt' },
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        ;
        /** method setting edit data */
        setEditForm() {
            this.inputFieldState = 'edit';
            this.SetFrom(this.SelectedData);
            this.StatusFormNew = false;
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.ButtonNav = [
                { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        ;
        /** method setting lihat data detail */
        setViewForm() {
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.inputFieldState = 'detail';
            this.SetFrom(this.SelectedData);
            this.ButtonNav = [
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        /** Method untuk mengkosongkan data yang ada di form*/
        ResetFrom() {
            this.FormInputData.reset();
        }
        /** Method Untuk Mereload Data Grid */
        GetAllData() {
            this.setupTipeOutletService.onGetAll()
                .subscribe((result) => {
                this.GridDatasource = result.data;
            });
        }
        AddDataTipeOutlet() {
            console.log('Add');
        }
        /** Method Untuk Mengisikan data yang ada di form */
        SetFrom(Data) {
            this.FormInputData.reset();
            this.FormInputData.setValue(Data);
        }
        /** Method menyimpan | menubah data */
        SaveAndNew() {
            const Data = this.FormInputData.value;
            if (this.inputFieldState == 'normal') {
                this.setupTipeOutletService.onPostSave(Data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                        .then(() => {
                        this.ResetFrom();
                    });
                });
            }
            else {
                this.setupTipeOutletService.onPutEdit(Data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Ubah Data', result.message)
                        .then(() => {
                    });
                });
            }
        }
        Clear() {
            this.ResetFrom();
        }
        Cancel() {
            this.ResetFrom();
            this.OrgTabsRef.onNavigateTabUsingTabId(0, 'Data');
            this.GetAllData();
        }
        KeyDownHandler(event) {
            if (event.keyCode === 13) {
                console.log('Enter Has Been Pressed');
            }
            ;
            if (event.keyCode === 46) {
                console.log('Delete Key Has Been Pressed');
            }
            ;
            if (event.keyCode === 40) {
                console.log('Delete Key Has Been Pressed');
            }
        }
        get tipe_outlet() { return this.FormInputData.get('tipe_outlet'); }
        get keterangan() { return this.FormInputData.get('keterangan'); }
    }
    SetupTipeOutletComponent.ɵfac = function SetupTipeOutletComponent_Factory(t) { return new (t || SetupTipeOutletComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_services_setup_data_setup_tipe_outlet_setup_tipe_outlet_service__WEBPACK_IMPORTED_MODULE_2__.SetupTipeOutletService)); };
    SetupTipeOutletComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: SetupTipeOutletComponent, selectors: [["app-setup-tipe-outlet"]], viewQuery: function SetupTipeOutletComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c0, 7);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.OrgTabsRef = _t.first);
            }
        }, decls: 18, vars: 21, consts: [[3, "ButtonNav", "onClickButtonNav"], [3, "showHeader", "onGetSelectedTabId"], ["OrgTabsRef", ""], [3, "Id"], [3, "grid-height", "grid-DataSource", "grid-paging", "grid-editSettings", "grid-lines", "grid-toolbar", "columns", "row-selected", "toolbar-click", "load-grid", "initialized", "command-click"], ["GridData", ""], [1, "p-2", 3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "mb-2"], ["formControlName", "tipe_outlet", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState"], ["formControlName", "keterangan", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState"]], template: function SetupTipeOutletComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClickButtonNav", function SetupTipeOutletComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.handleClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "org-tabs", 1, 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onGetSelectedTabId", function SetupTipeOutletComponent_Template_org_tabs_onGetSelectedTabId_1_listener($event) { return ctx.handleSelectedTabId($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "org-tabs-item");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "org-tabs-label", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5, "Data Tipe Outlet");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "org-tabs-body");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "mol-grid", 4, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("row-selected", function SetupTipeOutletComponent_Template_mol_grid_row_selected_7_listener($event) { return ctx.handleSelectedRow($event); })("toolbar-click", function SetupTipeOutletComponent_Template_mol_grid_toolbar_click_7_listener($event) { return ctx.handleToolbarClick($event); })("load-grid", function SetupTipeOutletComponent_Template_mol_grid_load_grid_7_listener($event) { return ctx.handleLoadGrid($event); })("initialized", function SetupTipeOutletComponent_Template_mol_grid_initialized_7_listener($event) { return ctx.InitalizedGrid($event); })("command-click", function SetupTipeOutletComponent_Template_mol_grid_command_click_7_listener($event) { return ctx.handleClickCommandGrid($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "org-tabs-item");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "org-tabs-label", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](11, "Input Tipe Outlet");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "org-tabs-body");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "form", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "div", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "mol-input-text", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](17, "mol-input-text", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ButtonNav", ctx.TabId == "Input" ? ctx.ButtonNav : _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](20, _c1));
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showHeader", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("Id", "Data");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("grid-height", 300)("grid-DataSource", ctx.GridDatasource)("grid-paging", false)("grid-editSettings", ctx.GridDataEditSettings)("grid-lines", "Both")("grid-toolbar", ctx.GridDataToolbar)("columns", ctx.GridConfig.GridColumns);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("Id", "Input");
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.FormInputData);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Tipe Outlet")("IsFormControlInvalid", ctx.tipe_outlet.invalid)("ValidatorsCaption", "Tipe Outlet Tidak Boleh Kosong")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("label", "Keterangan")("IsFormControlInvalid", ctx.keterangan.invalid)("ValidatorsCaption", "Keterangan Outlet Tidak Boleh Kosong")("inputFieldState", ctx.inputFieldState);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_3__.OrgCardLayoutComponent, _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_4__.OrgTabsComponentComponent, _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_5__.OrgTabsItemComponentComponent, _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_6__.OrgTabsLabelComponentComponent, _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_7__.OrgTabsBodyComponentComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_8__.MolGridComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_10__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_9__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormControlName], styles: [""] });
    return SetupTipeOutletComponent;
})();


/***/ }),

/***/ 78947:
/*!***********************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/setup-formularium/setup-formularium/setup-formularium.component.ts ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_GridSetting_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupFormulariumComponent": () => (/* binding */ SetupFormulariumComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _json_GridSetting_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../json/GridSetting.json */ 48544);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-bootstrap/modal */ 75470);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var _services_formularium_setup_terapi_setup_terapi_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../services/formularium/setup-terapi/setup-terapi.service */ 88815);
/* harmony import */ var _services_formularium_setup_terapi_generik_setup_terapi_generik_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../services/formularium/setup-terapi-generik/setup-terapi-generik.service */ 62808);
/* harmony import */ var _services_formularium_setup_generik_setup_generik_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../services/formularium/setup-generik/setup-generik.service */ 64169);
/* harmony import */ var _services_formularium_setup_formularium_setup_formularium_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../services/formularium/setup-formularium/setup-formularium.service */ 43795);
/* harmony import */ var _services_formularium_setup_jenis_formularium_setup_jenis_formularium_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../services/formularium/setup-jenis-formularium/setup-jenis-formularium.service */ 30722);
/* harmony import */ var _services_formularium_setup_sediaan_obat_setup_sediaan_obat_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../services/formularium/setup-sediaan-obat/setup-sediaan-obat.service */ 95044);
/* harmony import */ var _services_formularium_setup_restriksi_obat_setup_restriksi_obat_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../services/formularium/setup-restriksi-obat/setup-restriksi-obat.service */ 65712);
/* harmony import */ var _services_formularium_setup_peresepan_maksimal_setup_peresepan_maksimal_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../services/formularium/setup-peresepan-maksimal/setup-peresepan-maksimal.service */ 55337);
/* harmony import */ var _services_formularium_setup_parameter_maksimal_setup_parameter_maksimal_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../services/formularium/setup-parameter-maksimal/setup-parameter-maksimal.service */ 56846);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _syncfusion_ej2_angular_navigations__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @syncfusion/ej2-angular-navigations */ 10804);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/common */ 61116);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../shared/components/atoms/form/atm-label/atm-label.component */ 73391);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 34594);
/* harmony import */ var _shared_components_molecules_form_mol_input_textarea_mol_input_textarea_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-textarea/mol-input-textarea.component */ 93989);
/* harmony import */ var _shared_components_molecules_form_mol_datepicker_syncfusion_mol_datepicker_syncfusion_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-datepicker-syncfusion/mol-datepicker-syncfusion.component */ 30151);
























const _c0 = ["modalTambahTerapi"];
const _c1 = ["modalTambahTerapiGenerik"];
const _c2 = ["modalTambahFormularium"];
const _c3 = ["modalSetupGenerik"];
const _c4 = ["modalSetupTerapi"];
const _c5 = ["modalSetupSediaan"];
const _c6 = ["modalSetupRestriksi"];
const _c7 = ["modalSetupPeresepanMaksimal"];
function SetupFormulariumComponent_ng_template_15_i_3_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](0, "i", 30);
    }
}
function SetupFormulariumComponent_ng_template_15_Template(rf, ctx) {
    if (rf & 1) {
        const _r22 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "a", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_15_Template_a_click_2_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r22); const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r21.handleSubTerapi(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](3, SetupFormulariumComponent_ng_template_15_i_3_Template, 1, 0, "i", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const data_r19 = ctx.$implicit;
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", data_r19.id_terapi_parent == null);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtextInterpolate2"](" ", data_r19.kode_terapi, " ", data_r19.nama_terapi, " ");
    }
}
function SetupFormulariumComponent_ng_template_59_mol_input_text_11_Template(rf, ctx) {
    if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](0, "mol-input-text", 47);
    }
    if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("inputFieldState", "detail")("label", "Parent Terapi");
    }
}
function SetupFormulariumComponent_ng_template_59_Template(rf, ctx) {
    if (rf & 1) {
        const _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "h5", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](2, "Tambah Terapi");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "button", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_59_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r25); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r24.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](4, "i", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "form", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](10, "div", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](11, SetupFormulariumComponent_ng_template_59_mol_input_text_11_Template, 1, 2, "mol-input-text", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](12, "mol-input-text", 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](13, "mol-input-text", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](14, "mol-input-text", 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](15, "div", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](16, "button", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_59_Template_button_click_16_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r25); const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r26.handleSimpanTerapi(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](17, "Simpan Terapi");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("formGroup", ctx_r6.FormInputDataTerapi);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", !ctx_r6.hideParentTarif);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "Kode Terapi")("IsFormControlInvalid", ctx_r6.kode_terapi.invalid)("ValidatorsCaption", "Kode Terapi Tidak Boleh Kosong")("inputFieldState", ctx_r6.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "No Terapi")("IsFormControlInvalid", ctx_r6.no_terapi.invalid)("ValidatorsCaption", "No Terapi Tidak Boleh Kosong")("inputFieldState", ctx_r6.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "Nama Terapi")("IsFormControlInvalid", ctx_r6.nama_terapi.invalid)("ValidatorsCaption", "Nama Terapi Outlet Tidak Boleh Kosong")("inputFieldState", ctx_r6.inputFieldState);
    }
}
function SetupFormulariumComponent_ng_template_61_Template(rf, ctx) {
    if (rf & 1) {
        const _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "h5", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](2, "Tambah Terapi Generik");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "button", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_61_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r29); const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r28.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](4, "i", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "form", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](10, "mol-input-text", 48);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](12, "atm-label", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](13, "div", 51);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](14, "ejs-dropdownlist", 52, 53);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipe"](16, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](17, "div", 54);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](18, "button", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_61_Template_button_click_18_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r29); const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r30.handleSetupGenerik(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](19, "Setup");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](20, "div", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](21, "button", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_61_Template_button_click_21_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r29); const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r31.handleSimpanTerapiGenerik(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](22, "Simpan Terapi Generik");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("formGroup", ctx_r8.FormInputDataTerapiGenerik);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "No")("inputFieldState", ctx_r8.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("LabelCaption", "Nama Generik");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipeBind1"](16, 7, ctx_r8.setupGenerikService.dataSource))("fields", ctx_r8.MaritalGenerikDropdownField)("allowFiltering", true);
    }
}
function SetupFormulariumComponent_ng_template_63_Template(rf, ctx) {
    if (rf & 1) {
        const _r37 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "h5", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](2, "Tambah formularium");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "button", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_63_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r37); const ctx_r36 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r36.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](4, "i", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "form", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](10, "div", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](12, "div", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](13, "atm-label", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](14, "div", 55);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](15, "ejs-dropdownlist", 56, 57);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipe"](17, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](18, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](19, "div", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](20, "atm-label", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](21, "div", 58);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](22, "ejs-dropdownlist", 59, 60);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipe"](24, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](25, "div", 54);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](26, "button", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_63_Template_button_click_26_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r37); const ctx_r38 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r38.handleSetupSediaan(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](27, "Setup");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](28, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](29, "div", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](30, "atm-label", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](31, "div", 58);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](32, "ejs-dropdownlist", 61, 62);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipe"](34, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](35, "div", 54);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](36, "button", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_63_Template_button_click_36_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r37); const ctx_r39 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r39.handleSetupRestriksi(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](37, "Setup");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](38, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](39, "div", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](40, "atm-label", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](41, "div", 58);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](42, "ejs-dropdownlist", 63, 64);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipe"](44, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](45, "div", 54);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](46, "button", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_63_Template_button_click_46_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r37); const ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r40.handleSetupPeresepanMaksimal(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](47, "Setup");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](48, "mol-input-textarea", 65);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](49, "mol-datepicker-syncfusion", 66);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](50, "mol-datepicker-syncfusion", 67);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](51, "div", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](52, "button", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_63_Template_button_click_52_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r37); const ctx_r41 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r41.handleSimpanFormularium(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](53, "Simpan Formularium");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("formGroup", ctx_r10.FormInputDataFormularium);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("LabelCaption", "Jenis");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipeBind1"](17, 22, ctx_r10.setupJenisFormulariumService.dataSource))("fields", ctx_r10.MaritalJenisFormulariumDropdownField)("allowFiltering", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("LabelCaption", "Sediaan");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipeBind1"](24, 24, ctx_r10.setupSediaanObatService.dataSource))("fields", ctx_r10.MaritalSediaanObatDropdownField)("allowFiltering", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("LabelCaption", "Restriksi");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipeBind1"](34, 26, ctx_r10.setupRestriksiObatService.dataSource))("fields", ctx_r10.MaritalRestriksiObatDropdownField)("allowFiltering", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("LabelCaption", "Peresepan Max");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipeBind1"](44, 28, ctx_r10.setupPeresepanMaksimalService.dataSource))("fields", ctx_r10.MaritalPeresepanMaksimalDropdownField)("allowFiltering", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "Keterangan");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "Tgl Berlaku")("format", "dd MMMM yyyy");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "Tgl Berakhir")("format", "dd MMMM yyyy");
    }
}
function SetupFormulariumComponent_ng_template_65_Template(rf, ctx) {
    if (rf & 1) {
        const _r43 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "h5", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](2, "Setup Generik");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "button", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_65_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r43); const ctx_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); ctx_r42.modalRef.hide(); return ctx_r42.handleTambahTerapiGenerik(false); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](4, "i", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "form", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "div", 68);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](9, "mol-input-text", 69);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](10, "mol-input-text", 70);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](11, "mol-input-text", 71);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](12, "div", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](13, "button", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_65_Template_button_click_13_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r43); const ctx_r44 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r44.handleSimpanGenerik(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](14, "Simpan Generk");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("formGroup", ctx_r12.FormInputDataGenerik);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "No Generik")("IsFormControlInvalid", ctx_r12.no_generik.invalid)("ValidatorsCaption", "No Generik Tidak Boleh Kosong")("inputFieldState", ctx_r12.inputFieldState)("disabled", ctx_r12.inputFieldState === "edit");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "Nama Generik")("IsFormControlInvalid", ctx_r12.nama_generik.invalid)("ValidatorsCaption", "Nama Generik Tidak Boleh Kosong")("inputFieldState", ctx_r12.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "Alias")("inputFieldState", ctx_r12.inputFieldState);
    }
}
function SetupFormulariumComponent_ng_template_67_Template(rf, ctx) {
    if (rf & 1) {
        const _r46 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "h5", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](2, "Setup Sediaan");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "button", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_67_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r46); const ctx_r45 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); ctx_r45.modalRef.hide(); return ctx_r45.handleTambahFormularium(false); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](4, "i", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "form", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "div", 68);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](9, "mol-input-textarea", 72);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](10, "div", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "button", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_67_Template_button_click_11_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r46); const ctx_r47 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r47.handleSimpanSediaan(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](12, "Simpan Sediaan");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("formGroup", ctx_r14.FormInputDataSediaan);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "sediaan_obat");
    }
}
function SetupFormulariumComponent_ng_template_69_Template(rf, ctx) {
    if (rf & 1) {
        const _r49 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "h5", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](2, "Setup Restriksi");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "button", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_69_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r49); const ctx_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); ctx_r48.modalRef.hide(); return ctx_r48.handleTambahFormularium(false); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](4, "i", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "form", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "div", 68);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](9, "mol-input-textarea", 73);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](10, "div", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "button", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_69_Template_button_click_11_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r49); const ctx_r50 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r50.handleSimpanRestriksi(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](12, "Simpan Restrisi");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("formGroup", ctx_r16.FormInputDataRestriksi);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "restriksi_obat");
    }
}
function SetupFormulariumComponent_ng_template_71_Template(rf, ctx) {
    if (rf & 1) {
        const _r53 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "h5", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](2, "Setup Peresepan Maksimal");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "button", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_71_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r53); const ctx_r52 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); ctx_r52.modalRef.hide(); return ctx_r52.handleTambahFormularium(false); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](4, "i", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "form", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "div", 68);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](9, "mol-input-text", 74);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](10, "mol-input-text", 75);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](12, "div", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](13, "atm-label", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](14, "div", 55);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](15, "ejs-dropdownlist", 76, 77);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipe"](17, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](18, "div", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](19, "button", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_ng_template_71_Template_button_click_19_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r53); const ctx_r54 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](); return ctx_r54.handleSimpanPeresepanMaksimal(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](20, "Simpan Peresepan Maksimal");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("formGroup", ctx_r18.FormInputDataPeresepanMaksimal);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "Peresepan Maksimal")("IsFormControlInvalid", ctx_r18.peresepan_maksimal.invalid)("ValidatorsCaption", "Peresepan Maksimal Tidak Boleh Kosong")("inputFieldState", ctx_r18.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("label", "Nilai")("inputFieldState", ctx_r18.inputFieldState);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("LabelCaption", "Parameter");
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipeBind1"](17, 11, ctx_r18.setupParameterMaksimalService.dataSource))("fields", ctx_r18.MaritalParameterMaksimalDropdownField)("allowFiltering", true);
    }
}
let SetupFormulariumComponent = /*@__PURE__*/ (() => {
    class SetupFormulariumComponent {
        constructor(modalService, formBuilder, utilityService, setupTerapiService, setupTerapiGenerikService, setupGenerikService, setupFormulariumService, setupJenisFormulariumService, setupSediaanObatService, setupRestriksiObatService, setupPeresepanMaksimalService, setupParameterMaksimalService) {
            this.modalService = modalService;
            this.formBuilder = formBuilder;
            this.utilityService = utilityService;
            this.setupTerapiService = setupTerapiService;
            this.setupTerapiGenerikService = setupTerapiGenerikService;
            this.setupGenerikService = setupGenerikService;
            this.setupFormulariumService = setupFormulariumService;
            this.setupJenisFormulariumService = setupJenisFormulariumService;
            this.setupSediaanObatService = setupSediaanObatService;
            this.setupRestriksiObatService = setupRestriksiObatService;
            this.setupPeresepanMaksimalService = setupPeresepanMaksimalService;
            this.setupParameterMaksimalService = setupParameterMaksimalService;
            this.MaritalGenerikDropdownField = { text: 'nama_generik', value: 'id_generik' };
            this.MaritalJenisFormulariumDropdownField = { text: 'jenis_formularium', value: 'id_jenis_formularium' };
            this.MaritalSediaanObatDropdownField = { text: 'sediaan_obat', value: 'id_sediaan_obat' };
            this.MaritalRestriksiObatDropdownField = { text: 'nama_restriksi', value: 'id_restriksi_obat' };
            this.MaritalPeresepanMaksimalDropdownField = { text: 'peresepan_maksimal', value: 'id_peresepan_maksimal' };
            this.MaritalParameterMaksimalDropdownField = { text: 'parameter_maksimal', value: 'id_parameter_maksimal' };
            this.GridSetting = /*#__PURE__*/ (_json_GridSetting_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_GridSetting_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_GridSetting_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
            this.hideParentTarif = true;
            this.allowMultiSelection = false;
            this.DataSourceGeneric = [];
            this.DataSourceSediaan = [];
            this.DataSourceRestreksi = [];
            this.DataSourceMax = [];
            this.DataSourceDagang = [];
        }
        ngOnInit() {
            this.wrapSettings = { wrapMode: 'Content' };
            this.FormInputDataTerapi = this.formBuilder.group({
                id_terapi: [0, []],
                id_terapi_parent: [null, []],
                parent_terapi: ['', []],
                no_terapi: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required]],
                kode_terapi: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required]],
                nama_terapi: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required]],
                level_rekursif_terapi: [1, [_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required]],
            });
            this.FormInputDataTerapiGenerik = this.formBuilder.group({
                id_terapi: [0, []],
                no_terapi_generik: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required]],
                id_generik: [0, []],
            });
            this.FormInputDataFormularium = this.formBuilder.group({
                id_formularium: [0, []],
                id_generik: [0, []],
                id_terapi: [0, []],
                id_jenis_formularium: [0, []],
                id_sediaan_obat: [0, []],
                id_restriksi_obat: [0, []],
                id_peresepan_maksimal: [0, []],
                keterangan: ['', []],
                tgl_berlaku: [null, []],
                tgl_berakhir: [null, []],
            });
            this.FormInputDataGenerik = this.formBuilder.group({
                id_generik: [0, []],
                no_generik: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required]],
                nama_generik: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required]],
                alias_generik: ['', []],
                is_active: [false, []]
            });
            this.FormInputDataSediaan = this.formBuilder.group({
                id_sediaan_obat: [0, []],
                sediaan_obat: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required]],
            });
            this.FormInputDataRestriksi = this.formBuilder.group({
                nama_restriksi: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required]],
            });
            this.FormInputDataPeresepanMaksimal = this.formBuilder.group({
                peresepan_maksimal: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required]],
                nilai_maksimal: [0, []],
                id_parameter_maksimal: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_19__.Validators.required]],
            });
            this.getAllTerapi();
            this.setupGenerikService.setDataSource();
            this.setupJenisFormulariumService.setDataSource();
            this.setupSediaanObatService.setDataSource();
            this.setupRestriksiObatService.setDataSource();
            this.setupPeresepanMaksimalService.setDataSource();
            this.setupParameterMaksimalService.setDataSource();
        }
        /* ====== METHOD TERAPI =========== */
        nodeSelected(e) {
            console.log(e);
            this.CurrentDataTerapi = e.nodeData;
            this.setupTerapiGenerikService.setDataSource(this.CurrentDataTerapi.id);
            this.setupFormulariumService.setDataSource(0);
        }
        ;
        getAllTerapi() {
            this.setupTerapiService.onGetAll().subscribe((result) => {
                this.field = { dataSource: result.data, id: 'id_terapi', parentID: 'id_terapi_parent', text: 'nama_terapi', hasChildren: 'is_parent' };
            });
        }
        handleSimpanTerapi() {
            this.setupTerapiService.onPostSave(this.FormInputDataTerapi.value).subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                    .then(() => {
                    this.FormInputDataTerapi.reset();
                    this.modalRef.hide();
                    this.getAllTerapi();
                });
            });
        }
        handleAddTerapi() {
            this.id_terapi_parent.setValue(null);
            this.parent_terapi.setValue('');
            this.level_rekursif_terapi.setValue(0);
            this.hideParentTarif = true;
            this.modalRef = this.modalService.show(this.modalTambahTerapi, Object.assign({}, { class: 'modal-lg' }));
        }
        handleSubTerapi() {
            this.id_terapi_parent.setValue(this.CurrentDataTerapi.id);
            this.parent_terapi.setValue(this.CurrentDataTerapi.text);
            this.level_rekursif_terapi.setValue(1);
            this.hideParentTarif = false;
            this.modalRef = this.modalService.show(this.modalTambahTerapi, Object.assign({}, { class: 'modal-lg' }));
        }
        handleSetupTerapi() {
            console.log('setup terapi');
            this.modalRef.hide();
            this.modalRef = this.modalService.show(this.modalSetupTerapi, Object.assign({}, { class: 'modal-lg' }));
        }
        /* ==== Method Generik ====== */
        handleTambahTerapiGenerik(reset) {
            this.id_terapi_g.setValue(this.CurrentDataTerapi.id);
            if (reset) {
                this.FormInputDataTerapiGenerik.reset();
            }
            this.modalRef = this.modalService.show(this.modalTambahTerapiGenerik, Object.assign({}, { class: 'modal-lg' }));
        }
        handleSimpanTerapiGenerik() {
            this.setupTerapiGenerikService.onPostSave(this.FormInputDataTerapiGenerik.value).subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                    .then(() => {
                    this.FormInputDataTerapiGenerik.reset();
                    this.modalRef.hide();
                    this.setupTerapiGenerikService.setDataSource(this.CurrentDataTerapi.id);
                });
            });
        }
        handleSelectedGeneric(args) {
            this.CurrentDataTerapiGenerik = args.data;
            console.log(this.CurrentDataTerapiGenerik);
            this.setupFormulariumService.setDataSource(this.CurrentDataTerapiGenerik.id_generik);
        }
        // ==== Method Formularium =======
        handleTambahFormularium(reset) {
            this.id_terapi_f.setValue(this.CurrentDataTerapi.id);
            this.id_generik_f.setValue(this.CurrentDataTerapiGenerik.id_generik);
            if (reset) {
                this.FormInputDataFormularium.reset();
            }
            this.modalRef = this.modalService.show(this.modalTambahFormularium, Object.assign({}, { class: 'modal-lg' }));
        }
        handleSimpanFormularium() {
            this.setupFormulariumService.onPostSave(this.FormInputDataFormularium.value).subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                    .then(() => {
                    this.FormInputDataFormularium.reset();
                    this.modalRef.hide();
                    this.setupFormulariumService.setDataSource(this.CurrentDataTerapiGenerik.id_generik);
                });
            });
        }
        //==============
        //++++++++ Setup Generik
        handleSetupGenerik() {
            this.modalRef.hide();
            this.modalRef = this.modalService.show(this.modalSetupGenerik, Object.assign({}, { class: 'modal-lg' }));
        }
        handleSimpanGenerik() {
            this.setupGenerikService.onPostSave(this.FormInputDataGenerik.value)
                .subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                    .then(() => {
                    this.setupGenerikService.setDataSource();
                    this.id_generik_g.setValue(result.data);
                    this.modalRef.hide();
                    this.modalRef = this.modalService.show(this.modalTambahTerapiGenerik, Object.assign({}, { class: 'modal-lg' }));
                });
            });
        }
        //++++++++ Setup Sediaan
        handleSetupSediaan() {
            this.modalRef.hide();
            this.modalRef = this.modalService.show(this.modalSetupSediaan, Object.assign({}, { class: 'modal-lg' }));
        }
        handleSimpanSediaan() {
            this.setupSediaanObatService.onPostSave(this.FormInputDataSediaan.value)
                .subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                    .then(() => {
                    this.setupSediaanObatService.setDataSource();
                    this.id_sediaan_obat_f.setValue(result.data);
                    this.modalRef.hide();
                    this.modalRef = this.modalService.show(this.modalTambahFormularium, Object.assign({}, { class: 'modal-lg' }));
                });
            });
        }
        //++++++++ Setup Restriksi
        handleSetupRestriksi() {
            this.modalRef.hide();
            this.modalRef = this.modalService.show(this.modalSetupRestriksi, Object.assign({}, { class: 'modal-lg' }));
        }
        handleSimpanRestriksi() {
            this.setupRestriksiObatService.onPostSave(this.FormInputDataRestriksi.value)
                .subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                    .then(() => {
                    this.setupRestriksiObatService.setDataSource();
                    this.id_restriksi_obat_f.setValue(result.data);
                    this.modalRef.hide();
                    this.modalRef = this.modalService.show(this.modalTambahFormularium, Object.assign({}, { class: 'modal-lg' }));
                });
            });
        }
        //++++++++ Setup Peresepan Maksimal
        handleSetupPeresepanMaksimal() {
            this.modalRef.hide();
            this.modalRef = this.modalService.show(this.modalSetupPeresepanMaksimal, Object.assign({}, { class: 'modal-lg' }));
        }
        handleSimpanPeresepanMaksimal() {
            this.setupPeresepanMaksimalService.onPostSave(this.FormInputDataPeresepanMaksimal.value)
                .subscribe((result) => {
                this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                    .then(() => {
                    this.setupPeresepanMaksimalService.setDataSource();
                    this.id_peresepan_maksimal_f.setValue(result.data);
                    this.modalRef.hide();
                    this.modalRef = this.modalService.show(this.modalTambahFormularium, Object.assign({}, { class: 'modal-lg' }));
                });
            });
        }
        handleSelectedSediaan(args) {
            console.log(args);
            this.DataSourceRestreksi = this.GridSetting.GridKeterangan.DataSource;
            this.DataSourceMax = this.GridSetting.GridPeresepan.DataSource;
            this.DataSourceDagang = this.GridSetting.GridItem.DataSource;
        }
        get parent_terapi() { return this.FormInputDataTerapi.get('parent_terapi'); }
        get id_terapi_parent() { return this.FormInputDataTerapi.get('id_terapi_parent'); }
        get kode_terapi() { return this.FormInputDataTerapi.get('kode_terapi'); }
        get no_terapi() { return this.FormInputDataTerapi.get('no_terapi'); }
        get nama_terapi() { return this.FormInputDataTerapi.get('nama_terapi'); }
        get level_rekursif_terapi() { return this.FormInputDataTerapi.get('level_rekursif_terapi'); }
        get id_terapi_g() { return this.FormInputDataTerapiGenerik.get('id_terapi'); }
        get id_generik_g() { return this.FormInputDataTerapiGenerik.get('id_generik'); }
        get no_terapi_generik() { return this.FormInputDataTerapiGenerik.get('no_terapi_generik'); }
        get id_formularium() { return this.FormInputDataFormularium.get('id_formularium'); }
        get id_generik_f() { return this.FormInputDataFormularium.get('id_generik'); }
        get id_terapi_f() { return this.FormInputDataFormularium.get('id_terapi'); }
        get id_jenis_formularium_f() { return this.FormInputDataFormularium.get('id_jenis_formularium'); }
        get id_sediaan_obat_f() { return this.FormInputDataFormularium.get('id_sediaan_obat'); }
        get id_restriksi_obat_f() { return this.FormInputDataFormularium.get('id_restriksi_obat'); }
        get id_peresepan_maksimal_f() { return this.FormInputDataFormularium.get('id_peresepan_maksimal'); }
        get keterangan() { return this.FormInputDataFormularium.get('keterangan'); }
        get tgl_berlaku() { return this.FormInputDataFormularium.get('tgl_berlaku'); }
        get tgl_berakhir() { return this.FormInputDataFormularium.get('tgl_berakhir'); }
        get no_generik() { return this.FormInputDataGenerik.get('no_generik'); }
        get nama_generik() { return this.FormInputDataGenerik.get('nama_generik'); }
        get nilai_maksimal() { return this.FormInputDataPeresepanMaksimal.get('nilai_maksimal'); }
        get id_parameter_maksimal() { return this.FormInputDataPeresepanMaksimal.get('id_parameter_maksimal'); }
        get peresepan_maksimal() { return this.FormInputDataPeresepanMaksimal.get('peresepan_maksimal'); }
    }
    SetupFormulariumComponent.ɵfac = function SetupFormulariumComponent_Factory(t) { return new (t || SetupFormulariumComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_1__.BsModalService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_2__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_formularium_setup_terapi_setup_terapi_service__WEBPACK_IMPORTED_MODULE_3__.SetupTerapiService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_formularium_setup_terapi_generik_setup_terapi_generik_service__WEBPACK_IMPORTED_MODULE_4__.SetupTerapiGenerikService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_formularium_setup_generik_setup_generik_service__WEBPACK_IMPORTED_MODULE_5__.SetupGenerikService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_formularium_setup_formularium_setup_formularium_service__WEBPACK_IMPORTED_MODULE_6__.SetupFormulariumService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_formularium_setup_jenis_formularium_setup_jenis_formularium_service__WEBPACK_IMPORTED_MODULE_7__.SetupJenisFormulariumService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_formularium_setup_sediaan_obat_setup_sediaan_obat_service__WEBPACK_IMPORTED_MODULE_8__.SetupSediaanObatService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_formularium_setup_restriksi_obat_setup_restriksi_obat_service__WEBPACK_IMPORTED_MODULE_9__.SetupRestriksiObatService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_formularium_setup_peresepan_maksimal_setup_peresepan_maksimal_service__WEBPACK_IMPORTED_MODULE_10__.SetupPeresepanMaksimalService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_services_formularium_setup_parameter_maksimal_setup_parameter_maksimal_service__WEBPACK_IMPORTED_MODULE_11__.SetupParameterMaksimalService)); };
    SetupFormulariumComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdefineComponent"]({ type: SetupFormulariumComponent, selectors: [["app-setup-formularium"]], viewQuery: function SetupFormulariumComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c0, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c1, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c2, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c3, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c4, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c5, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c6, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](_c7, 5);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.modalTambahTerapi = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.modalTambahTerapiGenerik = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.modalTambahFormularium = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.modalSetupGenerik = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.modalSetupTerapi = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.modalSetupSediaan = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.modalSetupRestriksi = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.modalSetupPeresepanMaksimal = _t.first);
            }
        }, decls: 73, vars: 23, consts: [[1, "row"], [1, "col-sm-3"], [1, "card"], [1, "card-header"], [1, "row", "justify-content-between"], [1, "col-md-7"], [1, "m-0"], [1, "col-auto"], [3, "click"], [1, "fas", "fa-plus-circle", "tambah", "text-primary"], [1, "card-body", "p-0"], ["id", "treeparent"], ["id", "treeelement", "e-nodeclick", "onClick", 3, "fields", "allowMultiSelection", "nodeSelected"], ["nodeTemplate", ""], [3, "grid-id", "grid-height", "grid-lines", "columns", "grid-DataSource", "row-selected"], ["gridDaftarOrder", ""], [1, "col-sm-6"], [1, "col-sm-12", "mb-3"], [3, "grid-id", "grid-height", "grid-lines", "columns", "grid-DataSource", "textWrapSettings", "row-selected"], [1, "col-sm-12"], [3, "grid-id", "grid-height", "grid-lines", "columns", "grid-DataSource", "textWrapSettings"], ["modalTambahTerapi", ""], ["modalTambahTerapiGenerik", ""], ["modalTambahFormularium", ""], ["modalSetupGenerik", ""], ["modalSetupSediaan", ""], ["modalSetupRestriksi", ""], ["modalSetupPeresepanMaksimal", ""], [1, "ejob"], ["class", "fas fa-plus-circle tambah_terapi text-primary ", 4, "ngIf"], [1, "fas", "fa-plus-circle", "tambah_terapi", "text-primary"], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body", "p-10"], [1, "row", "mx-0", "my-1"], [1, "col-lg-12", "col-md-12", "col-sm-12"], [1, "p-2", 3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "mb-2"], ["formControlName", "parent_terapi", 3, "inputFieldState", "label", 4, "ngIf"], ["formControlName", "kode_terapi", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState"], ["formControlName", "no_terapi", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState"], ["formControlName", "nama_terapi", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState"], [1, "modal-footer", "background-abu-muda"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], ["formControlName", "parent_terapi", 3, "inputFieldState", "label"], ["formControlName", "no_terapi_generik", 3, "label", "inputFieldState"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "LabelCaption"], [1, "col-lg-6", "col-md-8", "col-sm-8", "col-xs-8"], ["id", "marital", "formControlName", "id_generik", 3, "dataSource", "fields", "allowFiltering"], ["MaritalGenerikDropdown", ""], [1, "col-sm-2"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], ["id", "marital", "formControlName", "id_jenis_formularium", 3, "dataSource", "fields", "allowFiltering"], ["MaritalJenisFormulariumDropdown", ""], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6"], ["id", "marital", "formControlName", "id_sediaan_obat", 3, "dataSource", "fields", "allowFiltering"], ["MaritalSediaanObatDropdown", ""], ["id", "marital", "formControlName", "id_restriksi_obat", 3, "dataSource", "fields", "allowFiltering"], ["MaritalRestriksiObatDropdown", ""], ["id", "marital", "formControlName", "id_peresepan_maksimal", 3, "dataSource", "fields", "allowFiltering"], ["MaritalPeresepanMaksimalDropdown", ""], ["formControlName", "keterangan", 3, "label"], ["formControlName", "tgl_berlaku", 3, "label", "format"], ["formControlName", "tgl_berakhir", 3, "label", "format"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "mb-2"], ["formControlName", "no_generik", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState", "disabled"], ["formControlName", "nama_generik", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState"], ["formControlName", "alias_generik", 3, "label", "inputFieldState"], ["formControlName", "sediaan_obat", 3, "label"], ["formControlName", "nama_restriksi", 3, "label"], ["formControlName", "peresepan_maksimal", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState"], ["formControlName", "nilai", 3, "label", "inputFieldState"], ["id", "marital", "formControlName", "id_parameter_maksimal", 3, "dataSource", "fields", "allowFiltering"], ["MaritalParameterMaksimalDropdown", ""]], template: function SetupFormulariumComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "org-card-layout");
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](4, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "h5", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](8, "Terapi");
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "div", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](10, "a", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_Template_a_click_10_listener() { return ctx.handleAddTerapi(); });
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](11, "i", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](12, "div", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](13, "div", 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](14, "ejs-treeview", 12);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("nodeSelected", function SetupFormulariumComponent_Template_ejs_treeview_nodeSelected_14_listener($event) { return ctx.nodeSelected($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](15, SetupFormulariumComponent_ng_template_15_Template, 5, 3, "ng-template", null, 13, _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](17, "div", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](18, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](19, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](20, "div", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](21, "div", 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](22, "h5", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](23, "Generik");
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](24, "div", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](25, "a", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_Template_a_click_25_listener() { return ctx.handleTambahTerapiGenerik(true); });
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](26, "i", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](27, "div", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](28, "mol-grid", 14, 15);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("row-selected", function SetupFormulariumComponent_Template_mol_grid_row_selected_28_listener($event) { return ctx.handleSelectedGeneric($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipe"](30, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](31, "div", 16);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](32, "div", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](33, "div", 17);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](34, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](35, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](36, "div", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](37, "div", 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](38, "h5", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](39, "Formularium");
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](40, "div", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](41, "a", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("click", function SetupFormulariumComponent_Template_a_click_41_listener() { return ctx.handleTambahFormularium(true); });
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](42, "i", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](43, "div", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](44, "mol-grid", 18, 15);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("row-selected", function SetupFormulariumComponent_Template_mol_grid_row_selected_44_listener($event) { return ctx.handleSelectedSediaan($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipe"](46, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](47, "div", 19);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](48, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](49, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](50, "div", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](51, "div", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](52, "h5", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](53, "Nama Dagang");
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](54, "div", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](55, "i", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](56, "div", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](57, "mol-grid", 20, 15);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](59, SetupFormulariumComponent_ng_template_59_Template, 18, 14, "ng-template", null, 21, _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](61, SetupFormulariumComponent_ng_template_61_Template, 23, 9, "ng-template", null, 22, _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](63, SetupFormulariumComponent_ng_template_63_Template, 54, 30, "ng-template", null, 23, _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](65, SetupFormulariumComponent_ng_template_65_Template, 15, 12, "ng-template", null, 24, _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](67, SetupFormulariumComponent_ng_template_67_Template, 13, 2, "ng-template", null, 25, _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](69, SetupFormulariumComponent_ng_template_69_Template, 13, 2, "ng-template", null, 26, _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](71, SetupFormulariumComponent_ng_template_71_Template, 21, 13, "ng-template", null, 27, _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](14);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("fields", ctx.field)("allowMultiSelection", ctx.allowMultiSelection);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](14);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("grid-id", "GridDaftarOrder")("grid-height", "calc(100vh - 250px)")("grid-lines", "Both")("columns", ctx.GridSetting.GridGenerik.columns)("grid-DataSource", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipeBind1"](30, 19, ctx.setupTerapiGenerikService.dataSource));
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](16);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("grid-id", "GridDaftarOrder")("grid-height", "calc((100vh - 350px)/2)")("grid-lines", "Both")("columns", ctx.GridSetting.GridSediaan.columns)("grid-DataSource", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpipeBind1"](46, 21, ctx.setupFormulariumService.dataSource))("textWrapSettings", ctx.wrapSettings);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](13);
                _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("grid-id", "GridDaftarOrder")("grid-height", "calc((100vh - 350px)/2)")("grid-lines", "Both")("columns", ctx.GridSetting.GridItem.columns)("grid-DataSource", ctx.DataSourceDagang)("textWrapSettings", ctx.wrapSettings);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_12__.OrgCardLayoutComponent, _syncfusion_ej2_angular_navigations__WEBPACK_IMPORTED_MODULE_20__.TreeViewComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_13__.MolGridComponent, _angular_common__WEBPACK_IMPORTED_MODULE_21__.NgIf, _angular_forms__WEBPACK_IMPORTED_MODULE_19__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_19__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_14__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_19__.FormControlName, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_15__.AtmLabelComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_22__.DropDownListComponent, _shared_components_molecules_form_mol_input_textarea_mol_input_textarea_component__WEBPACK_IMPORTED_MODULE_16__.MolInputTextareaComponent, _shared_components_molecules_form_mol_datepicker_syncfusion_mol_datepicker_syncfusion_component__WEBPACK_IMPORTED_MODULE_17__.MolDatepickerSyncfusionComponent], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_21__.AsyncPipe], styles: ["#treeparent[_ngcontent-%COMP%]{\r\n    display: block;\r\n    max-width: 400px;\r\n    height: calc(100vh - 210px);\r\n    margin: auto;\r\n    overflow: auto;\r\n    border: 1px solid #dddddd;\r\n    border-radius: 3px;\r\n}\r\n\r\n#treeelement[_ngcontent-%COMP%]{\r\n    max-height: calc(100vh - 210px);\r\n    overflow: auto;\r\n}\r\n\r\n.tambah[_ngcontent-%COMP%]{\r\n    font-size: 23px;\r\n    margin-top: 1px;\r\n}\r\n\r\n.tambah_terapi[_ngcontent-%COMP%]{\r\n    font-size: 18px;\r\n    margin-top: 1px;\r\n}"] });
    return SetupFormulariumComponent;
})();


/***/ }),

/***/ 18797:
/*!*********************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/setup-formularium/setup-formularium/setup-generik/setup-generik.component.ts ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupGenerikComponent": () => (/* binding */ SetupGenerikComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/grid.config.json */ 60192);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var src_app_modules_Pharmacy_services_formularium_setup_generik_setup_generik_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/formularium/setup-generik/setup-generik.service */ 64169);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../shared/components/organism/tabs/org-tabs-component/org-tabs-component.component */ 70651);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../shared/components/organism/tabs/org-tabs-item-component/org-tabs-item-component.component */ 38511);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../shared/components/organism/tabs/org-tabs-label-component/org-tabs-label-component.component */ 11753);
/* harmony import */ var _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../shared/components/organism/tabs/org-tabs-body-component/org-tabs-body-component.component */ 38952);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);












const _c0 = ["OrgTabsRef"];
let SetupGenerikComponent = /*@__PURE__*/ (() => {
    class SetupGenerikComponent {
        constructor(formBuilder, utilityService, setupGenerikService) {
            this.formBuilder = formBuilder;
            this.utilityService = utilityService;
            this.setupGenerikService = setupGenerikService;
            this.setInitTabs = false;
            /**
             * Variable untuk menyimpan Configurasi Grid
             * @Json Config
            */
            this.GridConfig = /*#__PURE__*/ (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
            /**
             * Variable untuk menentukan component input
             * @val normal,edit,detail
            */
            this.inputFieldState = 'normal';
            /**
             * Variable untuk menentukan tap berada di posisi mana
             * @valur data | input
            */
            this.TabId = 'Data';
            this.GridData = null;
            this.GridDataEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
            this.FormInputData = this.formBuilder.group({
                id_generik: [0, []],
                no_generik: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.required]],
                nama_generik: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_9__.Validators.required]],
                alias_generik: ['', []],
                is_active: [false, []]
            });
        }
        ngOnInit() {
            this.GridDataToolbar = [
                { text: 'Add', tooltipText: 'Add', prefixIcon: 'fas fa-plus fa-sm', id: 'add' },
                { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
                { text: 'Detail', tooltipText: 'Detail', prefixIcon: 'fas fa-info-circle fa-sm', id: 'detail' },
                'Search'
            ];
            if (this.setInitForm == 'input') {
                this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            }
            this.GetAllData();
        }
        handleSelectedTabId(TabId) {
            this.TabId = TabId;
            if (TabId == 'Input') {
                this.setNewForm;
            }
            else {
                this.GetAllData;
            }
        }
        InitalizedGrid(component) {
            this.GridData = component;
        }
        handleSelectedRow(args) {
            this.SelectedData = args.data;
        }
        handleActionComplete($event) {
            console.log($event);
            if ($event.requestType == "save") {
                if ($event.data.is_active != $event.rowData.is_active) {
                    this.SetActive($event.data.is_active, $event.data.id_generik);
                }
            }
        }
        handleToolbarClick(args) {
            const item = args.item.id;
            switch (item) {
                case 'add':
                    this.setNewForm();
                    break;
                case 'edit':
                    this.setEditForm();
                    break;
                case 'detail':
                    this.setViewForm();
                    break;
                default:
                    break;
            }
        }
        handleClickCommandGrid(args) {
            console.log(args);
        }
        handleClickButtonNav(ButtonId) {
            switch (ButtonId) {
                case 'SaveAndNew':
                    this.SaveAndNew();
                    break;
                case 'Clear':
                    this.Clear();
                    break;
                case 'Cancel':
                    this.Cancel();
                    break;
                default:
                    break;
            }
        }
        /** untuk identifikasi keyboard down pada grid */
        handleLoadGrid(args) {
            document.getElementsByClassName('e-grid')[0].addEventListener('keydown', this.KeyDownHandler.bind(this));
        }
        /** method setting input new data */
        setNewForm() {
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.inputFieldState = 'normal';
            this.FormInputData.reset();
            this.StatusFormNew = true;
            this.ButtonNav = [
                { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
                { Id: 'Clear', Captions: 'Clear', Icons1: 'fa-redo-alt' },
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        ;
        /** method setting edit data */
        setEditForm() {
            this.inputFieldState = 'edit';
            this.SetFrom(this.SelectedData);
            this.StatusFormNew = false;
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.ButtonNav = [
                { Id: 'SaveAndNew', Captions: 'Save', Icons1: 'fa-save' },
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        ;
        /** method setting lihat data detail */
        setViewForm() {
            this.OrgTabsRef.onNavigateTabUsingTabId(1, 'Input');
            this.inputFieldState = 'detail';
            this.SetFrom(this.SelectedData);
            this.ButtonNav = [
                { Id: 'Cancel', Captions: 'Back', Icons1: 'fa-arrow-left' },
            ];
        }
        /** Method untuk mengkosongkan data yang ada di form*/
        ResetFrom() {
            this.FormInputData.reset();
        }
        /** Method Untuk Mereload Data Grid */
        GetAllData() {
            this.setupGenerikService.onGetAll()
                .subscribe((result) => {
                this.GridDatasource = result.data;
            });
        }
        AddDataGenerik() {
            console.log('Add');
        }
        /** Method Untuk Mengisikan data yang ada di form */
        SetFrom(Data) {
            this.FormInputData.reset();
            this.FormInputData.setValue(Data);
        }
        /** Method menyimpan | menubah data */
        SaveAndNew() {
            const Data = this.FormInputData.value;
            if (this.inputFieldState == 'normal') {
                this.setupGenerikService.onPostSave(Data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                        .then(() => {
                        this.ResetFrom();
                    });
                });
            }
            else {
                this.setupGenerikService.onPutEdit(Data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Ubah Data', result.message)
                        .then(() => {
                    });
                });
            }
        }
        /** Method untuk mengubah status aktif | Non Active
         * @param is_active,kode_generik
        */
        SetActive(is_active, id_generik) {
            let data = {
                id_generik: id_generik
            };
            console.log('data', data);
            console.log('is_active', is_active);
            if (is_active) {
                this.setupGenerikService.onPutToActive(data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Di Aktifkan', result.message)
                        .then(() => {
                    });
                });
            }
            else {
                this.setupGenerikService.onPutToDeActive(data)
                    .subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Di Non Aktifkan', result.message)
                        .then(() => {
                    });
                });
            }
        }
        Clear() {
            this.ResetFrom();
        }
        Cancel() {
            this.ResetFrom();
            this.OrgTabsRef.onNavigateTabUsingTabId(0, 'Data');
            this.GetAllData();
        }
        KeyDownHandler(event) {
            if (event.keyCode === 13) {
                console.log('Enter Has Been Pressed');
            }
            ;
            if (event.keyCode === 46) {
                console.log('Delete Key Has Been Pressed');
            }
            ;
            if (event.keyCode === 40) {
                console.log('Delete Key Has Been Pressed');
            }
        }
        get no_generik() { return this.FormInputData.get('no_generik'); }
        get nama_generik() { return this.FormInputData.get('nama_generik'); }
        get alias_generik() { return this.FormInputData.get('alias_generik'); }
    }
    SetupGenerikComponent.ɵfac = function SetupGenerikComponent_Factory(t) { return new (t || SetupGenerikComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_1__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_formularium_setup_generik_setup_generik_service__WEBPACK_IMPORTED_MODULE_2__.SetupGenerikService)); };
    SetupGenerikComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineComponent"]({ type: SetupGenerikComponent, selectors: [["app-setup-generik"]], viewQuery: function SetupGenerikComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_c0, 7);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.OrgTabsRef = _t.first);
            }
        }, inputs: { setInitForm: "setInitForm", setInitTabs: "setInitTabs" }, decls: 19, vars: 22, consts: [[3, "showHeader", "onGetSelectedTabId"], ["OrgTabsRef", ""], [3, "Id"], [3, "grid-height", "grid-DataSource", "grid-paging", "grid-editSettings", "grid-lines", "grid-toolbar", "columns", "row-selected", "toolbar-click", "load-grid", "initialized", "command-click", "action-complete"], ["GridData", ""], [1, "p-2", 3, "formGroup"], [1, "row", "mb-2"], [1, "col-lg-6", "col-md-6", "col-sm-6", "col-xs-6", "mb-2"], ["formControlName", "no_generik", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState", "disabled"], ["formControlName", "nama_generik", 3, "label", "IsFormControlInvalid", "ValidatorsCaption", "inputFieldState"], ["formControlName", "alias_generik", 3, "label", "inputFieldState"]], template: function SetupGenerikComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](0, "span");
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](1, "org-tabs", 0, 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("onGetSelectedTabId", function SetupGenerikComponent_Template_org_tabs_onGetSelectedTabId_1_listener($event) { return ctx.handleSelectedTabId($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](3, "org-tabs-item");
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](4, "org-tabs-label", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](5, "Data Generik");
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](6, "org-tabs-body");
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](7, "mol-grid", 3, 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("row-selected", function SetupGenerikComponent_Template_mol_grid_row_selected_7_listener($event) { return ctx.handleSelectedRow($event); })("toolbar-click", function SetupGenerikComponent_Template_mol_grid_toolbar_click_7_listener($event) { return ctx.handleToolbarClick($event); })("load-grid", function SetupGenerikComponent_Template_mol_grid_load_grid_7_listener($event) { return ctx.handleLoadGrid($event); })("initialized", function SetupGenerikComponent_Template_mol_grid_initialized_7_listener($event) { return ctx.InitalizedGrid($event); })("command-click", function SetupGenerikComponent_Template_mol_grid_command_click_7_listener($event) { return ctx.handleClickCommandGrid($event); })("action-complete", function SetupGenerikComponent_Template_mol_grid_action_complete_7_listener($event) { return ctx.handleActionComplete($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](9, "org-tabs-item");
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](10, "org-tabs-label", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](11, "Input Generik");
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](12, "org-tabs-body");
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](13, "form", 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](14, "div", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](15, "div", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](16, "mol-input-text", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](17, "mol-input-text", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](18, "mol-input-text", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("showHeader", ctx.setInitTabs);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("Id", "Data");
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("grid-height", 300)("grid-DataSource", ctx.GridDatasource)("grid-paging", false)("grid-editSettings", ctx.GridDataEditSettings)("grid-lines", "Both")("grid-toolbar", ctx.GridDataToolbar)("columns", ctx.GridConfig.GridColumns);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("Id", "Input");
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("formGroup", ctx.FormInputData);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("label", "No Generik")("IsFormControlInvalid", ctx.no_generik.invalid)("ValidatorsCaption", "No Generik Tidak Boleh Kosong")("inputFieldState", ctx.inputFieldState)("disabled", ctx.inputFieldState === "edit");
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("label", "Nama Generik")("IsFormControlInvalid", ctx.nama_generik.invalid)("ValidatorsCaption", "Nama Generik Tidak Boleh Kosong")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("label", "Alias")("inputFieldState", ctx.inputFieldState);
            }
        }, directives: [_shared_components_organism_tabs_org_tabs_component_org_tabs_component_component__WEBPACK_IMPORTED_MODULE_3__.OrgTabsComponentComponent, _shared_components_organism_tabs_org_tabs_item_component_org_tabs_item_component_component__WEBPACK_IMPORTED_MODULE_4__.OrgTabsItemComponentComponent, _shared_components_organism_tabs_org_tabs_label_component_org_tabs_label_component_component__WEBPACK_IMPORTED_MODULE_5__.OrgTabsLabelComponentComponent, _shared_components_organism_tabs_org_tabs_body_component_org_tabs_body_component_component__WEBPACK_IMPORTED_MODULE_6__.OrgTabsBodyComponentComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_7__.MolGridComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_9__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_9__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_8__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormControlName], styles: [""] });
    return SetupGenerikComponent;
})();


/***/ }),

/***/ 71024:
/*!******************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/transaksi-obat/input-resep-irja/input-resep-irja.component.ts ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_transaksi_billing_config_json__WEBPACK_IMPORTED_MODULE_5___namespace_cache;
var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
var _json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache;
var _json_GridResep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InputResepIrjaComponent": () => (/* binding */ InputResepIrjaComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! tslib */ 64762);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 70654);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @syncfusion/ej2-data */ 85776);
/* harmony import */ var _json_lookupitem_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./json/lookupitem.json */ 10954);
/* harmony import */ var _json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./json/lookuptemplateresep.json */ 27917);
/* harmony import */ var _json_GridResep_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./json/GridResep.json */ 47394);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! sweetalert2 */ 22501);
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _json_transaksi_billing_config_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./json/transaksi-billing.config.json */ 55885);
/* harmony import */ var _api_BILLING__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../api/BILLING */ 88044);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! moment */ 29609);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var src_app_modules_dashboard_dokter_services_resep_dokter_resep_dokter_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/modules/dashboard-dokter/services/resep-dokter/resep-dokter.service */ 67085);
/* harmony import */ var _services_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../services/setup-data/setup-label-pemakaian-obat/setup-label-pemakaian-obat.service */ 13527);
/* harmony import */ var _services_setup_data_setup_tambahan_aturan_pakai_setup_tambahan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../services/setup-data/setup-tambahan-aturan-pakai/setup-tambahan-aturan-pakai.service */ 11344);
/* harmony import */ var _services_setup_data_setup_satuan_aturan_pakai_setup_satuan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../services/setup-data/setup-satuan-aturan-pakai/setup-satuan-aturan-pakai.service */ 70917);
/* harmony import */ var _services_setup_data_setup_metode_racikan_setup_metode_racikan_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../services/setup-data/setup-metode-racikan/setup-metode-racikan.service */ 75521);
/* harmony import */ var _services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../services/setup-data/setup-outlet/setup-outlet.service */ 47862);
/* harmony import */ var src_app_modules_dashboard_dokter_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/modules/dashboard-dokter/services/daftar-pasien/daftar-pasien.service */ 60266);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/app/modules/shared/services/navigation.service */ 65740);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ngx-bootstrap/modal */ 75470);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @angular/router */ 29996);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @angular/common */ 61116);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../../shared/components/atoms/form/atm-label/atm-label.component */ 73391);
/* harmony import */ var _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @syncfusion/ej2-angular-dropdowns */ 34594);
/* harmony import */ var _shared_components_organism_loockUp_org_input_look_up_kode_org_input_look_up_kode_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../shared/components/organism/loockUp/org-input-look-up-kode/org-input-look-up-kode.component */ 9714);
/* harmony import */ var _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @syncfusion/ej2-angular-inputs */ 37696);
/* harmony import */ var _shared_components_organism_loockUp_org_look_up_hirarki_org_look_up_hirarki_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../../shared/components/organism/loockUp/org-look-up-hirarki/org-look-up-hirarki.component */ 10389);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 34903);
































const _c0 = ["LookupRacikan"];
const _c1 = ["LookupTemplateResep"];
const _c2 = ["GridResepRacikan"];
const _c3 = ["itemTemplate"];
const _c4 = ["modalTemplateResep"];
function InputResepIrjaComponent_div_24_Template(rf, ctx) {
    if (rf & 1) {
        const _r13 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](0, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](1, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](2, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](3, "label", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](4, "Nama Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](5, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](6, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](7, "div", 61);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](8, "ejs-dropdownlist", 62, 63);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("filtering", function InputResepIrjaComponent_div_24_Template_ejs_dropdownlist_filtering_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵrestoreView"](_r13); const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵnextContext"](); return ctx_r12.onFiltering($event); })("change", function InputResepIrjaComponent_div_24_Template_ejs_dropdownlist_change_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵrestoreView"](_r13); const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵnextContext"](); return ctx_r14.handleChangeObat($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](10, "div", 64);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](11, "span", 65);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](12);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx_r2.data)("fields", ctx_r2.fields)("placeholder", ctx_r2.text)("query", ctx_r2.query)("sortOrder", ctx_r2.sorting)("allowFiltering", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtextInterpolate1"](" ", ctx_r2.nama_satuan.value, " ");
    }
}
function InputResepIrjaComponent_div_25_Template(rf, ctx) {
    if (rf & 1) {
        const _r16 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](0, "div", 66);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](1, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](2, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](3, "label", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](4, "Nama Racikan Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](5, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](6, "div", 67);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](7, "input", 68);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("change", function InputResepIrjaComponent_div_25_Template_input_change_7_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵrestoreView"](_r16); const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵnextContext"](); return ctx_r15.handleChangeNamaRacikan(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](8, "button", 69);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("click", function InputResepIrjaComponent_div_25_Template_button_click_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵrestoreView"](_r16); const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵnextContext"](); return ctx_r17.handelClickRacikan($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](9, "i", 70);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
    }
}
function InputResepIrjaComponent_div_26_Template(rf, ctx) {
    if (rf & 1) {
        const _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](0, "div", 71);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](1, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](2, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](3, "label", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](4, "Kemasan Racikan");
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](5, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](6, "div", 67);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](7, "ejs-dropdownlist", 72, 73);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("change", function InputResepIrjaComponent_div_26_Template_ejs_dropdownlist_change_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵrestoreView"](_r20); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵnextContext"](); return ctx_r19.handleChangeMetodeRacikan($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵpipe"](9, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵpipeBind1"](9, 3, ctx_r4.setupMetodeRacikanService.dataSource))("fields", ctx_r4.DropdownMetodeRacikanFields)("allowFiltering", true);
    }
}
function InputResepIrjaComponent_div_41_Template(rf, ctx) {
    if (rf & 1) {
        const _r22 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](0, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](1, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](2, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](3, "label", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](4, "Satuan");
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](5, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](6, "ejs-combobox", 74);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("change", function InputResepIrjaComponent_div_41_Template_ejs_combobox_change_6_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵrestoreView"](_r22); const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵnextContext"](); return ctx_r21.handleChangeSatuanAturan($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx_r5.dataSourceSatuanAturanPakai)("fields", ctx_r5.DropdownsatuanPakaiFields);
    }
}
function InputResepIrjaComponent_ng_template_86_Template(rf, ctx) {
    if (rf & 1) {
        const _r24 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](0, "div", 75);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](1, "h5", 76);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](2, "Simpan Template Resep Dokter");
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](3, "button", 77);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("click", function InputResepIrjaComponent_ng_template_86_Template_button_click_3_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵrestoreView"](_r24); const ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵnextContext"](); return ctx_r23.modalRef.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](4, "i", 78);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](5, "div", 79);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](6, "div", 80);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](7, "div", 81);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](8, "h2");
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](9, "Apakah Dokter Ingin Menyimapan Resep Ini Sebagai Template Resep?");
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](10, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](11, "Template resep di gunakan untuk membuat resep dengan data resep yg sudah ada");
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](12, "div", 82);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](13, "div", 83);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](14, "div", 84);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](15, "label", 85);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](16, "strong");
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](17, "Nama Template Resep");
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](18, "div", 86);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](19, "input", 87);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](20, "div", 88);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](21, "button", 89);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("click", function InputResepIrjaComponent_ng_template_86_Template_button_click_21_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵrestoreView"](_r24); const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵnextContext"](); return ctx_r25.handleClickSimpanTemplateResepDokter(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](22, "Simpan Template Resep");
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](23, "button", 90);
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("click", function InputResepIrjaComponent_ng_template_86_Template_button_click_23_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵrestoreView"](_r24); const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵnextContext"](); return ctx_r26.handleClickAbaikan(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](24, "Tidak");
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
    }
}
let InputResepIrjaComponent = /*@__PURE__*/ (() => {
    class InputResepIrjaComponent {
        constructor(formBuilder, resepDokterService, setupLabelPemakaianObatService, setupTambahanAturanPakaiService, setupSatuanAturanPakaiService, setupMetodeRacikanService, setupOutletService, daftarPasienService, utilityService, navigationService, modalService, router, renderer, location) {
            this.formBuilder = formBuilder;
            this.resepDokterService = resepDokterService;
            this.setupLabelPemakaianObatService = setupLabelPemakaianObatService;
            this.setupTambahanAturanPakaiService = setupTambahanAturanPakaiService;
            this.setupSatuanAturanPakaiService = setupSatuanAturanPakaiService;
            this.setupMetodeRacikanService = setupMetodeRacikanService;
            this.setupOutletService = setupOutletService;
            this.daftarPasienService = daftarPasienService;
            this.utilityService = utilityService;
            this.navigationService = navigationService;
            this.modalService = modalService;
            this.router = router;
            this.renderer = renderer;
            this.location = location;
            this.API_TRANS_BILLING = _api_BILLING__WEBPACK_IMPORTED_MODULE_6__.API_BILLING;
            this.Config = /*#__PURE__*/ (_json_transaksi_billing_config_json__WEBPACK_IMPORTED_MODULE_5___namespace_cache || (_json_transaksi_billing_config_json__WEBPACK_IMPORTED_MODULE_5___namespace_cache = __webpack_require__.t(_json_transaksi_billing_config_json__WEBPACK_IMPORTED_MODULE_5__, 2)));
            this.UrlLookupDaftarPasien = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.ADMISI_PASIEN_IRJA;
            this.urlRacikan = '';
            this.urlTemplateResep = '';
            this.GridLookUpItem = /*#__PURE__*/ (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(_json_lookupitem_json__WEBPACK_IMPORTED_MODULE_1__, 2)));
            this.GridlookUpTemplateResep = /*#__PURE__*/ (_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(_json_lookuptemplateresep_json__WEBPACK_IMPORTED_MODULE_2__, 2)));
            this.DropdownLabelFields = { text: "nama_label_pemakaian_obat", value: "id_label_pemakaian_obat" };
            this.DropdownAturanFields = { text: "tambahan_aturan_pakai", value: "id_tambahan_aturan_pakai" };
            this.DropdownsatuanPakaiFields = { text: "satuan_aturan_pakai", value: "id_satuan_aturan_pakai" };
            this.SetupOutletDropdownField = { text: 'nama_outlet', value: 'id_outlet' };
            this.FormAddObatState = "input";
            // ** Satuan 
            this.SatuanObat = "-";
            this.DropdownObatFields = { text: 'nama_obat', value: 'id_item' };
            this.DropdownMetodeRacikanFields = { text: 'metode_racikan', value: 'id_metode_racikan' };
            this.NamaObatDatasource = [];
            // ** Waktu Pakai
            this.WaktuPakai = [];
            // ** Grid Daftar Obat Properties
            this.GridDaftarObatEditSettings = { allowAdding: true, allowDeleting: true, allowEditing: true };
            this.GridDaftarObatDataSource = [];
            this.GridDaftarObatColumns = /*#__PURE__*/ (_json_GridResep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache || (_json_GridResep_json__WEBPACK_IMPORTED_MODULE_3___namespace_cache = __webpack_require__.t(_json_GridResep_json__WEBPACK_IMPORTED_MODULE_3__, 2)));
            this.GridDetailResepRacikanDatasource = [];
            this.GridResepRacikanDatasource = [];
            this.dataSourceLabelPemakaian = [];
            this.dataSourceTambahanAturanPakai = [];
            this.dataSourceSatuanAturanPakai = [];
            this.counter = 0;
            this.counterRacikan = 0;
            this.dataScourceGridChild = [];
            // SERVER SIDE 
            this.IsUserLogin = JSON.parse(localStorage.getItem('UserData'));
            this.data = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.DataManager({
                headers: [
                    {
                        Authorization: "Bearer " + this.IsUserLogin.token
                    }
                ],
                url: src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_OBAT_PARAMS_DROPDOWNLIST,
                adaptor: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.ODataV4Adaptor,
                crossDomain: true,
            });
            this.fields = { text: 'nama_obat', value: 'id_item' };
            this.query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where('nama_obat', 'contains', '', true);
            this.text = "Select a Obat";
            this.sorting = 'Ascending';
            this.onFiltering = (e) => {
                // load overall data when search key empty.
                if (e.text === '') {
                    e.updateData(this.data);
                }
                else {
                    //   let query: Query = new Query().from('Obat').select(['nama_obat', 'id_item','kandungan_obat','nama_satuan']).take(10);
                    // change the type of filtering
                    //   query = (e.text !== '') ? query.where('nama_obat', 'contains', e.text, true) : query;
                    let query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where('nama_obat', 'contains', e.text, true);
                    e.updateData(this.data, query);
                }
            };
            //=====================
            this.dataChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.DataManager({
                headers: [
                    {
                        Authorization: "Bearer " + this.IsUserLogin.token
                    }
                ],
                url: src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_OBAT_PARAMS_DROPDOWNLIST,
                adaptor: new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.ODataV4Adaptor,
                crossDomain: true,
            });
            this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where('nama_obat', 'contains', '', true);
            this.ButtonNav = [
                { Id: "Kembali", Icons1: "fa-chevron-left", Captions: "Kembali" },
                { Id: "Template", Icons1: "fas fa-tags fa-sm", Captions: "Template Resep" },
                { Id: "Reset", Icons1: "fas fa-undo fa-sm", Captions: "Reset" },
                { Id: "Simpan", Icons1: "fas fa-save fa-sm", Captions: "Simpan" },
            ];
            this.Data = [];
            this.newdetail = [];
            this.baru = 0;
            this.nama_resep = '';
        }
        get width() { return window.innerWidth; }
        ;
        ngOnInit() {
            this.currentTanggal = moment__WEBPACK_IMPORTED_MODULE_7___default()().format();
            this.FormAddObat = this.formBuilder.group({
                counter: [0, []],
                is_racikan: [false, []],
                no_urut: [0, []],
                set_racikan_id: [null, []],
                id_metode_racikan: [null, []],
                metode_racikan: ['', []],
                id_item: [null, []],
                nama_racikan: ['', []],
                nama_obat: ['', []],
                qty_resep: ['', []],
                nama_satuan: ['-', []],
                label: ['', []],
                ket_label: ['', []],
                id_label_pemakaian_obat: [null, []],
                label_pemakaian_obat: ['', []],
                id_satuan_aturan_pakai: [null, []],
                satuan_aturan_pakai: [null, []],
                aturan: ['', []],
                ket_aturan: ['', []],
                id_tambahan_aturan_pakai: [null, []],
                label_tambahan_aturan_pakai_obat: ['', []]
            });
            this.GridDaftarObatToolbar = [
                { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'fas fa-edit fa-sm', id: 'edit' },
                { text: 'Delete', tooltipText: 'Delete', prefixIcon: 'fas fa-trash-alt fa-sm', id: 'delete' },
                'Search'
            ];
            let currentQtyResep = this.currentQtyResep;
            let currentIdItem = this.currentIdItem;
            let SelectedDataRacikanObat = this.SelectedDataRacikanObat;
            this.resepDokterService.dataSelectRacikan.next(SelectedDataRacikanObat);
            this.itemsParams = {
                create: () => {
                    if (SelectedDataRacikanObat) {
                        this.queryChild = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat')
                            .select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan'])
                            .take(10).where('nama_obat', 'contains', SelectedDataRacikanObat.nama_obat, true);
                    }
                    this.itemsElem = document.createElement('input');
                    return this.itemsElem;
                },
                read: () => {
                    return this.itemsObj.text;
                },
                destroy: () => {
                    this.itemsObj.destroy();
                },
                write: () => {
                    this.itemsObj = new _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_24__.DropDownList({
                        dataSource: this.dataChild,
                        fields: this.fields,
                        query: this.queryChild,
                        enabled: true,
                        placeholder: 'Select a obat',
                        // floatLabelType: 'Never',
                        allowFiltering: true,
                        popupWidth: '55rem',
                        filtering: function (e) {
                            if (e.text === '') {
                                e.updateData(this.data);
                            }
                            else {
                                let query = new _syncfusion_ej2_data__WEBPACK_IMPORTED_MODULE_23__.Query().from('Obat').select(['nama_obat', 'id_item', 'kandungan_obat', 'nama_satuan']).take(10).where('nama_obat', 'contains', e.text, true);
                                e.updateData(this.data, query);
                            }
                        }.bind(this),
                        change: function (args) {
                            this.setFormGrif(args, currentQtyResep, currentIdItem, SelectedDataRacikanObat);
                            currentIdItem = args.itemData.id_item;
                            console.log(args.itemData.id_item);
                        }.bind(this),
                    });
                    this.itemsObj.appendTo(this.itemsElem);
                    if (SelectedDataRacikanObat) {
                        // this.itemsObj.dataSource = this.data;
                        // console.log('set value',SelectedDataRacikanObat);
                        // console.log('query',this.query);
                        setTimeout(() => {
                            this.itemsObj.value = SelectedDataRacikanObat.id_item;
                        }, 500);
                    }
                }
            };
            let counterRacikan = this.counterRacikan;
            let dataSourceChild = this.dataScourceGridChild;
            this.resepDokterService.dataSourceChildGrid.next(dataSourceChild);
            let nav = 'add';
            this.ChildGrid = {
                dataSource: this.dataScourceGridChild,
                queryString: "counter",
                rowHeight: 30,
                allowResizing: true,
                allowTextWrap: true,
                textWrapSettings: { wrapMode: 'Both' },
                toolbar: ['Add', 'Edit', 'Delete', 'Update', 'Cancel'],
                editSettings: { allowEditing: true, allowAdding: true, allowDeleting: true },
                columns: [
                    { field: "counter", headerText: 'c', width: 100, visible: false },
                    { field: "no_urut", headerText: 'ID Obat', visible: false },
                    { field: "nama_obat", headerText: 'Nama Obat', editType: 'dropdownedit', edit: this.itemsParams, width: 200 },
                    { field: "nama_satuan", headerText: 'Satuan', textAlign: 'Right', width: 80, allowEditing: false },
                    { field: "id_item", headerText: 'id', width: 100, visible: false },
                    { field: "komposisi", headerText: 'kps', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2', allowEditing: false },
                    { field: "seper", headerText: '1/', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                    { field: "kandungan", headerText: 'Kandungan', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                    { field: "qty_resep", headerText: 'qty', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2', visible: false },
                    { field: "qty_racikan", headerText: 'QTY', headerTextAlign: 'Center', textAlign: 'Right', width: 100, format: 'N2' },
                    { field: "keterangan", headerText: 'Keterangan', headerTextAlign: 'Center', textAlign: 'Left', width: 100 },
                ],
                rowSelected(args) {
                    SelectedDataRacikanObat = args.data;
                    // console.log('row selected',SelectedDataRacikanObat)
                },
                actionBegin(args) {
                    console.log('begin', args);
                    if (args.requestType === 'add') {
                        const counter = 'counter';
                        args.data[counter] = this.parentDetails.parentKeyFieldValue;
                        args.data['qty_resep'] = this.parentDetails.parentRowData.qty_resep;
                        args.data['counterRacikan'] = counterRacikan++;
                        currentQtyResep = this.parentDetails.parentRowData.qty_resep;
                        SelectedDataRacikanObat = null;
                    }
                    // if (args.requestType === 'beginEdit'){
                    //     SelectedDataRacikanObat = args.rowData;
                    // }
                },
                actionComplete(args) {
                    if (args.requestType === 'save') {
                        if (args.action === 'add') {
                            args.data.id_item = currentIdItem;
                            dataSourceChild.push(args.data);
                        }
                        if (args.action === 'edit') {
                            args.data.id_item = currentIdItem;
                            let index = dataSourceChild.map((item) => { return item.counterRacikan; }).indexOf(args.data.counterRacikan);
                            dataSourceChild[index] = args.data;
                        }
                    }
                    if (args.requestType === "delete") {
                        let index = dataSourceChild.map((item) => { return item.counterRacikan; }).indexOf(args.data[0].counterRacikan);
                        dataSourceChild.splice(index, 1);
                    }
                }
            };
            this.setupLabelPemakaianObatService.onGetAll().subscribe((result) => {
                this.dataSourceLabelPemakaian = result.data;
            });
            this.setupTambahanAturanPakaiService.onGetAll().subscribe((result) => {
                this.dataSourceTambahanAturanPakai = result.data;
            });
            this.setupSatuanAturanPakaiService.onGetAll().subscribe((result) => {
                this.dataSourceSatuanAturanPakai = result.data;
            });
            this.setupMetodeRacikanService.setDataSource();
            // this.resepDokterService.setDataObat([]);
            this.setupOutletService.setDataSource();
            //   this.urlTemplateResep = this.urlTemplateResep+'/'+this.daftarPasienService.ActivePasien.value.id_dokter;
            //   this.urlRacikan = this.urlRacikan + '/' + this.daftarPasienService.ActivePasien.value.id_dokter + '/J';
        }
        onLoad(args) {
        }
        setFormGrif(args, currentQtyResep, id_item, SelectedDataRacikanObat) {
            // console.log('function setgrid',SelectedDataRacikanObat);
            if (SelectedDataRacikanObat) {
                document.getElementsByName("nama_satuan")[0].value = SelectedDataRacikanObat.nama_satuan;
                document.getElementsByName("komposisi")[0].value = SelectedDataRacikanObat.komposisi;
                document.getElementsByName("seper")[0].value = SelectedDataRacikanObat.seper;
                document.getElementsByName("kandungan")[0].value = SelectedDataRacikanObat.kandungan;
                document.getElementsByName("qty_racikan")[0].value = SelectedDataRacikanObat.qty_racikan;
            }
            else {
                document.getElementsByName("nama_satuan")[0].value = args.itemData.nama_satuan;
                document.getElementsByName("komposisi")[0].value = args.itemData.kandungan_obat;
                document.getElementsByName("seper")[0].value = '1';
                document.getElementsByName("kandungan")[0].value = args.itemData.kandungan_obat;
                document.getElementsByName("qty_racikan")[0].value = currentQtyResep.toString();
            }
            let seper = document.getElementsByName("seper")[0];
            if (seper) {
                seper.addEventListener('click', (event) => {
                    seper.select();
                });
                seper.addEventListener('keyup', (event) => {
                    let komposisi = parseInt(document.getElementsByName("komposisi")[0].value);
                    let seper = parseInt(document.getElementsByName("seper")[0].value);
                    let hasil = komposisi / seper;
                    document.getElementsByName("kandungan")[0].value = hasil.toString();
                    let butuh = currentQtyResep * hasil;
                    let qty = butuh / komposisi;
                    document.getElementsByName("qty_racikan")[0].value = qty.toString();
                });
                this.setInputFilter(seper, function (value) {
                    return /^\d*$/.test(value);
                });
            }
            let kandungan = document.getElementsByName("kandungan")[0];
            if (kandungan) {
                kandungan.addEventListener('click', (event) => {
                    kandungan.select();
                });
                kandungan.addEventListener('keyup', (event) => {
                    let kandungan = parseInt(document.getElementsByName("kandungan")[0].value);
                    let komposisi = parseInt(document.getElementsByName("komposisi")[0].value);
                    let butuh = currentQtyResep * kandungan;
                    console.log(butuh);
                    let qty = butuh / komposisi;
                    document.getElementsByName("qty_racikan")[0].value = qty.toString();
                    document.getElementsByName("seper")[0].value = '1';
                });
                this.setInputFilter(kandungan, function (value) {
                    return /^\d*$/.test(value);
                });
            }
            let qty_racikan = document.getElementsByName("qty_racikan")[0];
            if (qty_racikan) {
                qty_racikan.addEventListener('click', (event) => {
                    qty_racikan.select();
                });
                this.setInputFilter(qty_racikan, function (value) {
                    return /^\d*$/.test(value);
                });
            }
        }
        setInputFilter(textbox, inputFilter) {
            ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function (event) {
                textbox.addEventListener(event, function () {
                    if (inputFilter(this.value)) {
                        this.oldValue = this.value;
                        this.oldSelectionStart = this.selectionStart;
                        this.oldSelectionEnd = this.selectionEnd;
                    }
                    else if (Object.prototype.hasOwnProperty.call(this, 'oldValue')) {
                        this.value = this.oldValue;
                        if (this.oldSelectionStart !== null &&
                            this.oldSelectionEnd !== null) {
                            this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                        }
                    }
                    else {
                        this.value = "";
                    }
                });
            });
        }
        rowDataBound(args) {
            var is_racikan = args.data.is_racikan;
            if (!is_racikan) {
                //here hide which parent row has no child records
                args.row.querySelector('td').innerHTML = " ";
                args.row.querySelector('td').className = "e-customizedExpandcell";
            }
            else {
                // args.row.classList.add('is-racikan');
            }
        }
        onDataBound() {
            this.GridResepRacikan.detailRowModule.expandAll();
        }
        handleSelectedLookupPasien(args) {
            this.idDokter = args.id_dokter;
            this.idPasien = args.id_pasien;
            this.idRegister = args.id_register;
            this.idPerson = args.id_person;
            this.no_register = args.no_register;
            this.urlTemplateResep = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_TEMPLATE_RESEP + '/' + args.id_dokter;
            this.urlRacikan = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RESEP_DOKTER.RESEP_DOKTER_IRJA.GET_RACIKAN + '/' + args.id_dokter + '/J';
        }
        handleChangeOutlet(args) {
            this.idOutlet = args.value;
        }
        // ** Dropdown Nama Obat onchange method
        handleChangeObat(args) {
            this.nama_satuan.setValue(args.itemData.nama_satuan);
            this.nama_obat.setValue(args.itemData.nama_obat);
        }
        handleChangeLabel(args) {
            if (typeof args.value === 'number' && (args.value % 1) === 0) {
                this.label_pemakaian_obat.setValue('');
                this.id_label_pemakaian_obat.setValue(args.value);
                this.ket_label.setValue(args.itemData.nama_label_pemakaian_obat);
            }
            else {
                this.label_pemakaian_obat.setValue(args.value);
                this.id_label_pemakaian_obat.setValue(1);
                this.ket_label.setValue(args.itemData.nama_label_pemakaian_obat);
            }
        }
        handleChangeAturan(args) {
            if (typeof args.value === 'number' && (args.value % 1) === 0) {
                this.label_tambahan_aturan_pakai_obat.setValue('');
                this.id_tambahan_aturan_pakai.setValue(args.value);
                this.ket_aturan.setValue(args.itemData.tambahan_aturan_pakai);
            }
            else {
                this.label_tambahan_aturan_pakai_obat.setValue(args.value);
                this.id_tambahan_aturan_pakai.setValue(1);
                this.ket_aturan.setValue(args.itemData.tambahan_aturan_pakai);
            }
        }
        handleChangeSatuanAturan(args) {
            this.satuan_aturan_pakai.setValue(args.itemData.satuan_aturan_pakai);
        }
        handleChangeNamaRacikan() {
            this.set_racikan_id.setValue(null);
        }
        handelClickRacikan() {
            if (this.idRegister) {
                this.LookupRacikan.onOpenModal();
            }
            else {
                this.utilityService.onShowingCustomAlert('warning', 'Isi Data Pasien Terlebih Dahulu', '');
            }
        }
        handelClickTemplateResep() {
            if (this.idRegister) {
                this.LookupTemplateResep.onOpenModal();
            }
            else {
                this.utilityService.onShowingCustomAlert('warning', 'Isi Data Pasien Terlebih Dahulu', '');
            }
        }
        handleChangeMetodeRacikan(args) {
            this.metode_racikan.setValue(args.itemData.metode_racikan);
        }
        heandleSelectedRacikan(args) {
            this.counter++;
            args.counter = this.counter;
            args.is_racikan = true;
            args.is_racikan = true;
            args.no_urut = 0;
            args.id_item = null;
            args.nama_satuan = null;
            args.label = null;
            args.nama_racikan = args.nama_obat;
            args.label = args.ket_label;
            args.aturan = args.ket_aturan;
            this.resepDokterService.addDetail(args);
            let detail;
            detail = this.GridResepRacikan.childGrid.dataSource;
            args.details.forEach(element => {
                let counterRacikan = this.counterRacikan++;
                element.counter = this.counter;
                element.counterRacikan = counterRacikan;
                detail.push(element);
            });
            console.log(detail);
            this.resepDokterService.dataSourceChildGrid.next(detail);
        }
        heandleSelectedTemplateResep(args) {
            let detail;
            detail = this.GridResepRacikan.childGrid.dataSource;
            args.details.forEach(element => {
                this.counter++;
                element.counter = this.counter;
                if (element.is_racikan) {
                    element.nama_racikan = element.nama_obat;
                }
                else {
                    element.nama_racikan = '';
                }
                if (element.id_label_pemakaian_obat == 1) {
                    element.label = element.ket_label;
                }
                else {
                    element.label = element.id_label_pemakaian_obat;
                }
                if (element.id_tambahan_aturan_pakai == 1) {
                    element.aturan = element.ket_aturan;
                }
                else {
                    element.aturan = element.id_tambahan_aturan_pakai;
                }
                this.resepDokterService.addDetail(element);
                element.racikans.forEach(racikan => {
                    let counterRacikan = this.counterRacikan++;
                    racikan.counter = this.counter;
                    racikan.counterRacikan = counterRacikan;
                    detail.push(racikan);
                });
            });
            this.resepDokterService.dataSourceChildGrid.next(detail);
            this.onSetTemplateResep();
        }
        handleAddObat(FormAddObat) {
            this.counter++;
            FormAddObat.counter = this.counter;
            if (FormAddObat.is_racikan) {
                FormAddObat.nama_obat = FormAddObat.nama_racikan;
            }
            else {
                FormAddObat.id_metode_racikan = null;
                FormAddObat.metode_racikan = null;
            }
            this.resepDokterService.addDetail(FormAddObat);
            this.onResetFormObat();
        }
        onResetFormObat() {
            this.FormAddObat.reset();
            this.is_racikan.setValue(false);
        }
        // ** Dropdown Waktu Pakai onchange method
        onChangeWaktuPakai(waktu) {
            // ** Cek element yg di checklist
            const element = document.getElementById('waktuPakai' + waktu);
            // ** Get index number di variable WaktuPakai
            const index = this.WaktuPakai.indexOf(waktu);
            // ** Jika element di checklist maka....
            if (element.checked) {
                this.WaktuPakai.push(waktu);
            }
            else {
                this.WaktuPakai.splice(index, 1);
            }
            ;
            // ** Isikan value waktu_pakai di FormAddObat
            // this.waktu_pakai.setValue(this.WaktuPakai.join());
        }
        // ** Update Data Obat method
        onUpdateDataObat(FormAddObat) {
            this.resepDokterService.editDetail(this.currentIndex, FormAddObat);
            this.onResetFormObat();
            this.GridResepRacikan.refresh();
            this.FormAddObatState = "input";
        }
        // ** Reset Form Add Obat 
        onResetFormDataObat() {
            this.FormAddObat.reset();
            this.SatuanObat = "";
        }
        // ** Grid Daftar Obat method
        onInitalizedGrid(component) {
            this.gridDaftarObat = component;
        }
        // ** Grid Daftar Obat method
        onToolbarClick(args) {
            switch (args.item.id) {
                case "edit":
                    // this.FormAddObat.setValue(this.SelectedDataObat);
                    this.onEditData();
                    this.FormAddObatState = "edit";
                    break;
                case "delete":
                    this.resepDokterService.removeDataDetail(this.currentIndex);
                    this.GridResepRacikan.refresh();
                    break;
                default:
                    break;
            }
            ;
        }
        onEditData() {
            let data = this.SelectedDataObat;
            this.FormAddObat.setValue({
                counter: data.counter,
                no_urut: data.no_urut,
                is_racikan: data.is_racikan,
                set_racikan_id: data.set_racikan_id,
                id_metode_racikan: data.id_metode_racikan,
                metode_racikan: data.metode_racikan,
                id_item: data.id_item,
                nama_obat: data.nama_obat,
                qty_resep: data.qty_resep,
                nama_satuan: data.nama_satuan,
                label: data.label,
                ket_label: data.ket_label,
                id_label_pemakaian_obat: data.id_label_pemakaian_obat,
                label_pemakaian_obat: data.label_pemakaian_obat,
                aturan: data.aturan,
                ket_aturan: data.ket_aturan,
                id_tambahan_aturan_pakai: data.id_tambahan_aturan_pakai,
                label_tambahan_aturan_pakai_obat: data.label_tambahan_aturan_pakai_obat,
                nama_racikan: data.nama_racikan,
                id_satuan_aturan_pakai: data.id_satuan_aturan_pakai,
                satuan_aturan_pakai: data.satuan_aturan_pakai,
            });
        }
        onActionComplete(args) {
            //   let dataSourceParent: any = this.GridResepRacikan.dataSource;
            //   this.resepDokterService.dataSourceParentGrid.next(dataSourceParent);
            //   console.log("Parent", this.GridResepRacikan.dataSource);
            //   console.log("Children", this.GridResepRacikan.childGrid.dataSource);
        }
        // ** Grid Daftar Obat method
        onRowSelected(args) {
            this.currentIndex = args.rowIndex;
            this.SelectedDataObat = args.data;
        }
        //================= SIMPAN PARENT ================
        onClickButtonNav(args) {
            switch (args) {
                case "Template":
                    this.handelClickTemplateResep();
                case "Reset":
                    this.resepDokterService.reset();
                    this.isGetFromTemplate = false;
                    break;
                case "Simpan":
                    this.onGetGridResepDatasource();
                    break;
                case "Kembali":
                    this.location.back();
                    break;
                default:
                    break;
            }
        }
        onSetTemplateResep() {
            this.isGetFromTemplate = true;
        }
        onGetGridResepDatasource() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_25__.__awaiter)(this, void 0, void 0, function* () {
                this.dataHeader = {
                    id_dokter: this.idDokter,
                    id_register: this.idRegister,
                    id_outlet: this.idOutlet,
                    id_person: this.idPerson,
                    jenis_rawat: 'J',
                    nama_template: '',
                    tanggal_resep: this.currentTanggal
                };
                let detail = yield this.resepDokterService.dataDetail;
                this.newdetail = detail.filter((item) => {
                    return item.is_racikan && !item.set_racikan_id;
                });
                this.baru = 0;
                if (!this.isGetFromTemplate) {
                    this.modalRef = this.modalService.show(this.modalTemplateResep, Object.assign({}, { class: 'modal-lg' }));
                }
                else {
                    this.methodConfirmSetRacikan(0);
                }
            });
        }
        handleClickSimpanTemplateResepDokter() {
            let nama_resep = document.getElementsByName("nama_resep")[0].value;
            this.dataHeader.nama_template = nama_resep;
            this.modalRef.hide();
            this.methodConfirmSetRacikan(1);
        }
        handleClickAbaikan() {
            this.modalRef.hide();
            this.methodConfirmSetRacikan(0);
        }
        methodConfirmSetRacikan(simpan_template) {
            if (this.newdetail.length > 0) {
                sweetalert2__WEBPACK_IMPORTED_MODULE_4___default().fire({
                    title: 'Apakah Anda Ingin Menyimapan Racikan Baru ke dalam Setting Racikan dokter?',
                    text: "Racikan akan bisa di gunakan lagi untuk template",
                    icon: 'info',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Iya, Saya Yakin',
                    cancelButtonText: 'Tidak',
                    focusCancel: true,
                }).then((result) => {
                    if (result.isConfirmed) {
                        this.baru = 1;
                    }
                    else {
                        this.baru = 0;
                    }
                    this.methodInsert(this.dataHeader, simpan_template, this.baru);
                });
            }
            else {
                this.methodInsert(this.dataHeader, simpan_template, 0);
            }
        }
        methodInsert(Data, is_simpan_template, is_simpan_racikan) {
            this.resepDokterService.Insert(Data, is_simpan_template, is_simpan_racikan)
                .subscribe((result) => {
                if (result.responseResult) {
                    this.resepDokterService.generadeNoAntrian(this.no_register).subscribe((result) => {
                        if (result.responseResult) {
                            this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                                .then(() => {
                                this.resepDokterService.reset();
                                this.isGetFromTemplate = false;
                                this.location.back();
                            });
                        }
                    });
                }
            });
            // this.location.back();
        }
        //================================================
        get is_racikan() { return this.FormAddObat.get('is_racikan'); }
        ;
        get set_racikan_id() { return this.FormAddObat.get('set_racikan_id'); }
        ;
        get id_metode_racikan() { return this.FormAddObat.get('id_metode_racikan'); }
        ;
        get metode_racikan() { return this.FormAddObat.get('metode_racikan'); }
        ;
        get id_item() { return this.FormAddObat.get('id_item'); }
        ;
        get nama_obat() { return this.FormAddObat.get('nama_obat'); }
        ;
        get qty_resep() { return this.FormAddObat.get('qty_resep'); }
        get nama_satuan() { return this.FormAddObat.get('nama_satuan'); }
        get label() { return this.FormAddObat.get('label'); }
        get ket_label() { return this.FormAddObat.get('ket_label'); }
        get id_label_pemakaian_obat() { return this.FormAddObat.get('id_label_pemakaian_obat'); }
        get label_pemakaian_obat() { return this.FormAddObat.get('label_pemakaian_obat'); }
        get aturan() { return this.FormAddObat.get('aturan'); }
        get ket_aturan() { return this.FormAddObat.get('ket_aturan'); }
        get id_tambahan_aturan_pakai() { return this.FormAddObat.get('id_tambahan_aturan_pakai'); }
        get label_tambahan_aturan_pakai_obat() { return this.FormAddObat.get('label_tambahan_aturan_pakai_obat'); }
        get nama_racikan() { return this.FormAddObat.get('nama_racikan'); }
        get satuan_aturan_pakai() { return this.FormAddObat.get('satuan_aturan_pakai'); }
        ;
        ngOnDestroy() {
            this.resepDokterService.reset();
        }
    }
    InputResepIrjaComponent.ɵfac = function InputResepIrjaComponent_Factory(t) { return new (t || InputResepIrjaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_26__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵdirectiveInject"](src_app_modules_dashboard_dokter_services_resep_dokter_resep_dokter_service__WEBPACK_IMPORTED_MODULE_8__.ResepDokterService), _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵdirectiveInject"](_services_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_service__WEBPACK_IMPORTED_MODULE_9__.SetupLabelPemakaianObatService), _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵdirectiveInject"](_services_setup_data_setup_tambahan_aturan_pakai_setup_tambahan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_10__.SetupTambahanAturanPakaiService), _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵdirectiveInject"](_services_setup_data_setup_satuan_aturan_pakai_setup_satuan_aturan_pakai_service__WEBPACK_IMPORTED_MODULE_11__.SetupSatuanAturanPakaiService), _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵdirectiveInject"](_services_setup_data_setup_metode_racikan_setup_metode_racikan_service__WEBPACK_IMPORTED_MODULE_12__.SetupMetodeRacikanService), _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵdirectiveInject"](_services_setup_data_setup_outlet_setup_outlet_service__WEBPACK_IMPORTED_MODULE_13__.SetupOutletService), _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵdirectiveInject"](src_app_modules_dashboard_dokter_services_daftar_pasien_daftar_pasien_service__WEBPACK_IMPORTED_MODULE_14__.DaftarPasienService), _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_15__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵdirectiveInject"](src_app_modules_shared_services_navigation_service__WEBPACK_IMPORTED_MODULE_16__.NavigationService), _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_17__.BsModalService), _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_27__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_22__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_28__.Location)); };
    InputResepIrjaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵdefineComponent"]({ type: InputResepIrjaComponent, selectors: [["app-input-resep-irja"]], viewQuery: function InputResepIrjaComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵviewQuery"](_c0, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵviewQuery"](_c1, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵviewQuery"](_c2, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵviewQuery"](_c3, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵviewQuery"](_c4, 5);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵloadQuery"]()) && (ctx.LookupRacikan = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵloadQuery"]()) && (ctx.LookupTemplateResep = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵloadQuery"]()) && (ctx.GridResepRacikan = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵloadQuery"]()) && (ctx.itemTemplate = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵloadQuery"]()) && (ctx.modalTemplateResep = _t.first);
            }
        }, decls: 88, vars: 83, consts: [[3, "ButtonNav", "onClickButtonNav"], [3, "formGroup"], [1, "card"], [1, "card-body", "p-2"], [1, "row"], [1, "col-sm-5"], [1, "row", "mb-2"], [1, "col-lg-4", "col-md-4", "col-sm-4", "col-xs-4"], [3, "LabelCaption"], [1, "col-lg-8", "col-md-8", "col-sm-8", "col-xs-8"], ["id", "marital", 3, "dataSource", "fields", "allowFiltering", "change"], ["MaritalOutletDropdown", ""], [1, "col-sm-7"], [3, "modal-title", "idKode", "idTitle", "label", "lookup-url", "filter-lookup", "columns", "onGetSelectedData"], ["LookupPasien", ""], [1, "row", "pt-2", "mb-2"], [1, "col-lg-1", "col-md-1", "col-sm-1", "col-xs-1"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], ["for", "DropdownObat", 1, "form-label"], ["type", "checkbox", "formControlName", "is_racikan", 1, "form-check-input"], ["class", "col-lg-4 col-md-4 col-sm-4 col-xs-4", 4, "ngIf"], ["class", "col-lg-3 col-md-3 col-sm-3 col-xs-3", 4, "ngIf"], ["class", "col-lg-2 col-md-2 col-sm-2 col-xs-2", 4, "ngIf"], [1, "col-lg-1", "col-md-1", "col-sm-1", "col-xs-1", "pe-1"], ["for", "NumericQty", 1, "form-label"], ["id", "NumericQty", "formControlName", "qty_resep", 3, "format", "showSpinButton", "showClearButton", "ste"], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2", "pe-1"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "pe-1"], ["id", "DropdownLabelPemakaian", "formControlName", "label", "popupWidth", "30rem", 3, "allowFiltering", "dataSource", "fields", "change"], ["class", "col-lg-1 col-md-1 col-sm-1 col-xs-1 pe-1", 4, "ngIf"], ["id", "DropdownTambahanAturanPakai", "formControlName", "aturan", "popupWidth", "25rem", 3, "allowFiltering", "dataSource", "fields", "change"], [1, "col-lg-1", "col-md-1", "col-sm-1", "col-xs-1", "ps-4"], [1, "row", "align-content-center", "h-100", "mb-2"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12", "px-0", 3, "hidden"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", 3, "disabled", "click"], [1, "fas", "fa-plus-circle", "fa-sm"], [3, "hidden"], ["type", "button", 1, "btn", "btn-warning", "btn-sm", 3, "disabled", "click"], [1, "fas", "fa-edit", "fa-sm"], [3, "lookup-url", "columns", "columnsChild", "filter-lookup", "queryString", "modal-title", "onGetSelectedData"], ["LookupRacikan", ""], [3, "lookup-url", "columns", "columnsChild", "filter-lookup", "modal-title", "queryString", "onGetSelectedData"], ["LookupTemplateResep", ""], [1, "col-lg-12", "col-md-12", "col-xs-12", "col-sm-12"], [1, "card-body", "p-0"], ["height", "calc(100vh - 27rem)", "gridLines", "Both", "rowHeight", "30", 3, "dataSource", "childGrid", "toolbar", "allowResizing", "toolbarClick", "load", "rowDataBound", "dataBound", "rowSelected", "actionComplete"], ["GridResepRacikan", ""], ["field", "no_urut", "headerText", "no_urut", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "is_racikan", "headerText", "is_racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "set_racikan_id", "headerText", "set_racikan_id", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_metode_racikan", "headerText", "id_metode_racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_item", "headerText", "id_item", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_label_pemakaian_obat", "headerText", "id_label_pemakaian_obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "id_tambahan_aturan_pakai", "headerText", "id_tambahan_aturan_pakai", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_obat", "headerText", "Nama Obat", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "nama_satuan", "headerText", "Satuan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing", "width"], ["field", "metode_racikan", "headerText", "Racikan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing", "width"], ["field", "qty_resep", "headerText", "Qty", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing", "width"], ["field", "ket_label", "headerText", "Pemakaian", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["field", "ket_aturan", "headerText", "Aturan", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing"], ["modalTemplateResep", ""], [1, "col-lg-10", "col-md-10", "col-sm-10", "col-xs-10", "pe-0"], ["id", "DropdownObat", "formControlName", "id_item", "popupWidth", "55rem", 3, "allowFiltering", "dataSource", "fields", "placeholder", "query", "sortOrder", "filtering", "change"], ["Drop", ""], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2", "px-0"], ["id", "basic-addon1", 1, "input-group-text", "bg-primary", "text-white"], [1, "col-lg-3", "col-md-3", "col-sm-3", "col-xs-3"], [1, "input-group"], ["type", "text", "formControlName", "nama_racikan", 1, "form-control", "form-select-sm", 3, "change"], ["id", "btnInputGroup", "type", "button", 1, "btn", "btn-primary", 2, "padding", ".1rem .8rem", "background-color", "#00afff; border: 0", 3, "click"], [1, "fas", "fa-search"], [1, "col-lg-2", "col-md-2", "col-sm-2", "col-xs-2"], ["formControlName", "id_metode_racikan", 3, "dataSource", "fields", "allowFiltering", "change"], ["MolDropdown", ""], ["id", "DropdownLabelPemakaian", "formControlName", "id_satuan_aturan_pakai", "popupWidth", "30rem", 3, "allowFiltering", "dataSource", "fields", "change"], [1, "modal-header", "px-2", "py-1", "background-biru-muda", "text-white"], [1, "modal-title", "pull-left"], ["type", "button", "aria-label", "Close", 1, "btn", "pull-right", "text-white", 3, "click"], [1, "fas", "fa-window-close"], [1, "modal-body", "p-10"], [1, "row", "mx-0", "my-1"], [1, "col-lg-12", "col-md-12", "col-sm-12", 2, "text-align", "center"], [1, "col-lg-12", "col-md-12", "col-sm-12"], [1, "mb-2", "row"], [1, "col-sm-4"], ["for", "nama_resep"], [1, "col-sm-8"], ["type", "text", "name", "nama_resep", 1, "form-control", "form-control-sm"], [1, "modal-footer", "background-abu-muda"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], ["type", "button", 1, "btn", "btn-danger", 3, "click"]], template: function InputResepIrjaComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("onClickButtonNav", function InputResepIrjaComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](1, "form", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](2, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](3, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](4, "div", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](5, "div", 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](6, "div", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](7, "div", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](8, "atm-label", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](9, "div", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](10, "ejs-dropdownlist", 10, 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("change", function InputResepIrjaComponent_Template_ejs_dropdownlist_change_10_listener($event) { return ctx.handleChangeOutlet($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵpipe"](12, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](13, "div", 12);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](14, "org-input-look-up-kode", 13, 14);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("onGetSelectedData", function InputResepIrjaComponent_Template_org_input_look_up_kode_onGetSelectedData_14_listener($event) { return ctx.handleSelectedLookupPasien($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](16, "div", 15);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](17, "div", 16);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](18, "div", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](19, "div", 17);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](20, "label", 18);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](21, "Racik");
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](22, "div", 17);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](23, "input", 19);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtemplate"](24, InputResepIrjaComponent_div_24_Template, 13, 8, "div", 20);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtemplate"](25, InputResepIrjaComponent_div_25_Template, 10, 0, "div", 21);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtemplate"](26, InputResepIrjaComponent_div_26_Template, 10, 5, "div", 22);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](27, "div", 23);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](28, "div", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](29, "div", 17);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](30, "label", 24);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](31, "Qty");
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](32, "div", 17);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](33, "ejs-numerictextbox", 25);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](34, "div", 26);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](35, "div", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](36, "div", 17);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](37, "label", 24);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](38, "Label Obat");
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](39, "div", 27);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](40, "ejs-combobox", 28);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("change", function InputResepIrjaComponent_Template_ejs_combobox_change_40_listener($event) { return ctx.handleChangeLabel($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtemplate"](41, InputResepIrjaComponent_div_41_Template, 7, 3, "div", 29);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](42, "div", 26);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](43, "div", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](44, "div", 17);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](45, "label", 24);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](46, "Aturan Tambahan");
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](47, "div", 27);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](48, "ejs-combobox", 30);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("change", function InputResepIrjaComponent_Template_ejs_combobox_change_48_listener($event) { return ctx.handleChangeAturan($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](49, "div", 31);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](50, "div", 32);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](51, "div", 33);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](52, "button", 34);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("click", function InputResepIrjaComponent_Template_button_click_52_listener() { return ctx.handleAddObat(ctx.FormAddObat.value); });
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](53, "i", 35);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](54, "span", 36);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](55, "\u00A0Obat");
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](56, "div", 33);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](57, "button", 37);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("click", function InputResepIrjaComponent_Template_button_click_57_listener() { return ctx.onUpdateDataObat(ctx.FormAddObat.value); });
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](58, "i", 38);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](59, "span", 36);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtext"](60, "\u00A0Edit");
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](61, "org-look-up-hirarki", 39, 40);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("onGetSelectedData", function InputResepIrjaComponent_Template_org_look_up_hirarki_onGetSelectedData_61_listener($event) { return ctx.heandleSelectedRacikan($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](63, "org-look-up-hirarki", 41, 42);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("onGetSelectedData", function InputResepIrjaComponent_Template_org_look_up_hirarki_onGetSelectedData_63_listener($event) { return ctx.heandleSelectedTemplateResep($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](65, "div", 15);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](66, "div", 43);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](67, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](68, "div", 44);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](69, "ejs-grid", 45, 46);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵlistener"]("toolbarClick", function InputResepIrjaComponent_Template_ejs_grid_toolbarClick_69_listener($event) { return ctx.onToolbarClick($event); })("load", function InputResepIrjaComponent_Template_ejs_grid_load_69_listener($event) { return ctx.onLoad($event); })("rowDataBound", function InputResepIrjaComponent_Template_ejs_grid_rowDataBound_69_listener($event) { return ctx.rowDataBound($event); })("dataBound", function InputResepIrjaComponent_Template_ejs_grid_dataBound_69_listener() { return ctx.onDataBound(); })("rowSelected", function InputResepIrjaComponent_Template_ejs_grid_rowSelected_69_listener($event) { return ctx.onRowSelected($event); })("actionComplete", function InputResepIrjaComponent_Template_ejs_grid_actionComplete_69_listener($event) { return ctx.onActionComplete($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵpipe"](71, "async");
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementStart"](72, "e-columns");
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](73, "e-column", 47);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](74, "e-column", 48);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](75, "e-column", 49);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](76, "e-column", 50);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](77, "e-column", 51);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](78, "e-column", 52);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](79, "e-column", 53);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](80, "e-column", 54);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](81, "e-column", 55);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](82, "e-column", 56);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](83, "e-column", 57);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](84, "e-column", 58);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelement"](85, "e-column", 59);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtemplate"](86, InputResepIrjaComponent_ng_template_86_Template, 25, 0, "ng-template", null, 60, _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵtemplateRefExtractor"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("formGroup", ctx.FormAddObat);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](7);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("LabelCaption", "Depo Farmasi");
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵpipeBind1"](12, 79, ctx.setupOutletService.dataSource))("fields", ctx.SetupOutletDropdownField)("allowFiltering", true);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](4);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("modal-title", "Daftar Pasien")("idKode", "no_rekam_medis")("idTitle", "nama_pasien")("label", "Pasien")("lookup-url", ctx.UrlLookupDaftarPasien)("filter-lookup", ctx.Config.LookupPasien.filter)("columns", ctx.Config.LookupPasien.columns);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](10);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("ngIf", !ctx.is_racikan.value);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("ngIf", ctx.is_racikan.value);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("ngIf", ctx.is_racikan.value);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](7);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("format", "N0")("showSpinButton", false)("showClearButton", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](7);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx.dataSourceLabelPemakaian)("fields", ctx.DropdownLabelFields);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("ngIf", !ctx.is_racikan.value);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](7);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("allowFiltering", true)("dataSource", ctx.dataSourceTambahanAturanPakai)("fields", ctx.DropdownAturanFields);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵclassMap"](ctx.width >= 1023 && ctx.width <= 1200 ? "pt-1" : "pt-4");
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("hidden", ctx.FormAddObatState != "input");
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("disabled", ctx.FormAddObat.invalid);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("hidden", ctx.width >= 1023 && ctx.width <= 1200);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("hidden", ctx.FormAddObatState == "input");
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("disabled", ctx.FormAddObat.invalid);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("hidden", ctx.width >= 1023 && ctx.width <= 1200);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("lookup-url", ctx.urlRacikan)("columns", ctx.GridLookUpItem.columns)("columnsChild", ctx.GridLookUpItem.columnsChild)("filter-lookup", ctx.GridLookUpItem.filter)("queryString", "set_racikan_id")("modal-title", "Data Racikan Dokter");
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("lookup-url", ctx.urlTemplateResep)("columns", ctx.GridlookUpTemplateResep.columns)("columnsChild", ctx.GridlookUpTemplateResep.columnsChild)("filter-lookup", ctx.GridlookUpTemplateResep.filter)("modal-title", "Data Template Resep Dokter")("queryString", "resep_id");
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](6);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("dataSource", _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵpipeBind1"](71, 81, ctx.resepDokterService.dataDetail$))("childGrid", ctx.ChildGrid)("toolbar", ctx.GridDaftarObatToolbar)("allowResizing", true);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](4);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("visible", false)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("visible", false)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("visible", false)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("visible", false)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("visible", false)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("visible", false)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("visible", false)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("visible", true)("allowEditing", false)("width", 100);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("visible", true)("allowEditing", false)("width", 100);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 60);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("visible", true)("allowEditing", false);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_22__["ɵɵproperty"]("visible", true)("allowEditing", false);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_18__.OrgCardLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_26__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_26__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_26__.FormGroupDirective, _shared_components_atoms_form_atm_label_atm_label_component__WEBPACK_IMPORTED_MODULE_19__.AtmLabelComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_29__.DropDownListComponent, _shared_components_organism_loockUp_org_input_look_up_kode_org_input_look_up_kode_component__WEBPACK_IMPORTED_MODULE_20__.OrgInputLookUpKodeComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_26__.CheckboxControlValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_26__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_26__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_28__.NgIf, _syncfusion_ej2_angular_inputs__WEBPACK_IMPORTED_MODULE_30__.NumericTextBoxComponent, _syncfusion_ej2_angular_dropdowns__WEBPACK_IMPORTED_MODULE_29__.ComboBoxComponent, _shared_components_organism_loockUp_org_look_up_hirarki_org_look_up_hirarki_component__WEBPACK_IMPORTED_MODULE_21__.OrgLookUpHirarkiComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_31__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_31__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_31__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_31__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_31__.AggregateColumnDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_26__.DefaultValueAccessor], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_28__.AsyncPipe], styles: ["#basic-addon1[_ngcontent-%COMP%] {\r\n    height: 32px;\r\n    padding-left: 12px;\r\n    width: 100%;\r\n    border-top-left-radius: 0;\r\n    border-bottom-left-radius: 0;\r\n    border: 0;\r\n  }\r\n  \r\n  #DropdownObat[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%] {\r\n    border-top-right-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n  }\r\n  \r\n  #NumericQty[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%]    > input[_ngcontent-%COMP%] {\r\n    text-align: right;\r\n    padding-right: 5px;\r\n  }\r\n  \r\n  div.head[_ngcontent-%COMP%] {\r\n    font-size: 13px !important;\r\n    font-weight: 500 !important;\r\n  }\r\n  \r\n  .is-racikan[_ngcontent-%COMP%] {\r\n    background-color: #f3e6f3;\r\n  }\r\n  \r\n  .e-toolbar[_ngcontent-%COMP%]   .e-toolbar-item[_ngcontent-%COMP%]   .e-tbar-btn.e-btn[_ngcontent-%COMP%]   .e-icons.e-btn-icon[_ngcontent-%COMP%] {\r\n    min-height: 14px !important;\r\n  }\r\n  \r\n  th.e-headercell[_ngcontent-%COMP%] {\r\n    background-color: rgba(0, 0, 0, 0.03);\r\n    color: black;\r\n    border: 1px solid rgba(0, 0, 0, 0.125);\r\n    padding: 5px !important;\r\n    height: 30px !important;\r\n  }\r\n  \r\n  span.e-headertext[_ngcontent-%COMP%] {\r\n    font-size: 13px !important;\r\n  }\r\n  \r\n  td.e-rowcell[_ngcontent-%COMP%] {\r\n    padding: 5px !important;\r\n  }\r\n  \r\n  .e-grid[_ngcontent-%COMP%]   .e-detailheadercell[_ngcontent-%COMP%], td.e-detailcell.e-lastrowcell[_ngcontent-%COMP%] {\r\n    background-color: var(--biru-muda) !important;\r\n  }\r\n  \r\n  div.e-gridcontent[_ngcontent-%COMP%]   tr.e-detailrow[_ngcontent-%COMP%]   td.e-detailcell[_ngcontent-%COMP%]   div.e-headercontent[_ngcontent-%COMP%]   th.e-headercell[_ngcontent-%COMP%] {\r\n    background-color: var(--biru-muda) !important;\r\n  }"] });
    return InputResepIrjaComponent;
})();


/***/ }),

/***/ 50037:
/*!************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/transaksi-obat/transaksi-obat-irda/transaksi-obat-irda.component.ts ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_LookupGridRuangan_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
var _json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
var _json_gridResep_config_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TransaksiObatIrdaComponent": () => (/* binding */ TransaksiObatIrdaComponent)
/* harmony export */ });
/* harmony import */ var _json_LookupGridRuangan_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/LookupGridRuangan.json */ 9523);
/* harmony import */ var _json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./json/gridPasien.config.json */ 75149);
/* harmony import */ var _json_gridResep_config_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./json/gridResep.config.json */ 12074);
/* harmony import */ var src_app_api_BILLING__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/api/BILLING */ 88044);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var src_app_modules_dashboard_dokter_services_resep_dokter_irda_resep_dokter_irda_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/modules/dashboard-dokter/services/resep-dokter-irda/resep-dokter-irda.service */ 91468);
/* harmony import */ var _services_transaksi_obat_transaksi_obat_irda_transaksi_obat_irda_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../services/transaksi-obat/transaksi-obat-irda/transaksi-obat-irda.service */ 18542);
/* harmony import */ var src_app_modules_PIS_services_IRNA_admisi_pasien_rawat_inap_admisi_pasien_rawat_inap_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/modules/PIS/services/IRNA/admisi-pasien-rawat-inap/admisi-pasien-rawat-inap.service */ 87958);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/common */ 61116);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 34903);
/* harmony import */ var _shared_components_molecules_form_mol_input_numeric_mol_input_numeric_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-numeric/mol-input-numeric.component */ 13864);
















const _c0 = ["LookupKodeRuangan"];
const _c1 = ["GridDetailResep"];
const _c2 = ["GridPasien"];
function TransaksiObatIrdaComponent_span_15_Template(rf, ctx) {
    if (rf & 1) {
        const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "mol-grid", 2, 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("row-selected", function TransaksiObatIrdaComponent_span_15_Template_mol_grid_row_selected_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r5); const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r4.handleSelectedRowResep($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpipe"](3, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("grid-height", "calc(100vh - 20rem)")("grid-DataSource", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpipeBind1"](3, 5, ctx_r1.transaksiObatIrdaService.dataResep))("grid-paging", false)("grid-lines", "Both")("columns", ctx_r1.GridConfigResep.GridColumns);
    }
}
const _c3 = function () { return { wrapMode: "Both" }; };
function TransaksiObatIrdaComponent_span_16_Template(rf, ctx) {
    if (rf & 1) {
        const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "button", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function TransaksiObatIrdaComponent_span_16_Template_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r8); const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r7.handelClickLihatresep(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](2, "i", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](3, " Daftar Resep");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "button", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function TransaksiObatIrdaComponent_span_16_Template_button_click_4_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r8); const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r9.handleClickSimpan(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](5, "i", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](6, " Simpan Transaksi Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "ejs-grid", 18, 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("rowDataBound", function TransaksiObatIrdaComponent_span_16_Template_ejs_grid_rowDataBound_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r8); const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r10.rowDataBound($event); })("dataBound", function TransaksiObatIrdaComponent_span_16_Template_ejs_grid_dataBound_7_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r8); const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r11.onDataBound(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](10, "e-column", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](11, "e-column", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](12, "e-column", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](13, "e-column", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](15, "div", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](16, "div", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](17, "mol-input-numeric", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("dataSource", ctx_r2.DataSourceDetailResep)("childGrid", ctx_r2.childGrid)("allowTextWrap", true)("textWrapSettings", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction0"](22, _c3));
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("visible", true)("allowEditing", false)("valueAccessor", ctx_r2.keterangan);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 130)("valueAccessor", ctx_r2.quantity);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 130);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 130)("valueAccessor", ctx_r2.hargajual);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "Total Bayar Resep")("isFooter", true)("inputFieldState", "detail")("inputFieldState", ctx_r2.inputFieldState);
    }
}
let TransaksiObatIrdaComponent = /*@__PURE__*/ (() => {
    class TransaksiObatIrdaComponent {
        constructor(formBuilder, resepDokterIrdaService, transaksiObatIrdaService, admisiPasienRawatInapService, utilityService) {
            this.formBuilder = formBuilder;
            this.resepDokterIrdaService = resepDokterIrdaService;
            this.transaksiObatIrdaService = transaksiObatIrdaService;
            this.admisiPasienRawatInapService = admisiPasienRawatInapService;
            this.utilityService = utilityService;
            this.urlRuangan = src_app_api_BILLING__WEBPACK_IMPORTED_MODULE_3__.API_BILLING.SETUP_DATA.SETUP_POLI.GET_ALL_POLI_FOR_LOOKUP_RAWAT_INAP;
            this.LookupGridRuangan = /*#__PURE__*/ (_json_LookupGridRuangan_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_LookupGridRuangan_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_LookupGridRuangan_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
            this.GridConfig = /*#__PURE__*/ (_json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (_json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(_json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1__, 2)));
            this.GridConfigResep = /*#__PURE__*/ (_json_gridResep_config_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (_json_gridResep_config_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(_json_gridResep_config_json__WEBPACK_IMPORTED_MODULE_2__, 2)));
            this.DataSourcePasien = [];
            this.DataSourceResep = [];
            this.DataSourceDetailResep = [];
            this.DataSourceDetailResepRacikan = [];
            this.inputFieldState = 'detail';
            this.handleClickResep = false;
            this.currentResepId = null;
            this.currentRegisterId = 1;
            this.keterangan = (field, data1) => {
                return data1['nama_obat'] + ', ' +
                    data1['ket_label'] + ', ' +
                    data1['ket_aturan'];
            };
            this.quantity = (field, data1) => {
                return data1['qty_harian'] + ' ' + data1['nama_satuan'];
            };
            this.hargajual = (field, data1) => {
                return (!data1['is_racikan']) ? data1['harga_jual_apotek'] * data1['qty_harian'] : data1['harga_jual_apotek'];
            };
        }
        ngOnInit() {
            this.formInput = this.formBuilder.group({
                nama_pasien: ['', []],
                umur: ['', []],
                bed: ['', []],
                dokter: ['', []],
                nomor_rm: ['', []],
                nomor_registrasi: ['', []],
                total_bayar_resep: [0, []]
            });
            this.childGrid = {
                dataSource: this.DataSourceDetailResepRacikan,
                queryString: "resep_detail_id",
                rowHeight: 30,
                allowResizing: true,
                allowTextWrap: true,
                textWrapSettings: { wrapMode: 'Both' },
                columns: [
                    { "field": "nama_obat", "headerText": "Nama Obat" },
                    { "field": "qty_racikan", "headerText": "Qty", "width": 50 },
                    { "field": "harga_jual_apotek", "headerText": "Harga", "textAlign": "Right", "format": "N2", "width": 70 },
                    { "field": "total_harga", "headerText": "Total Harga", "textAlign": "Right", "format": "N2", "width": 70 }
                ]
            };
            this.set(1);
            this.refreshGridPasien();
        }
        refreshGridPasien() {
            this.transaksiObatIrdaService.onGetPasienIrda([]).subscribe((result) => {
                this.DataSourcePasien = result.data;
                this.GridPasien.Grid.refresh();
            });
        }
        set(id_register) {
            this.resepDokterIrdaService.onGetByIdRegisterToTrans(id_register).subscribe((result) => {
                this.transaksiObatIrdaService.setResep(result.data);
                console.log(result.data);
            });
        }
        handleSelectedRow(args) {
            console.log(args);
            this.currentRegisterId = args.data.id_register;
            this.formInput.setValue({
                nama_pasien: args.data.nama_pasien,
                umur: args.data.umur,
                bed: '',
                dokter: args.data.nama_dokter,
                nomor_rm: args.data.no_rekam_medis,
                nomor_registrasi: args.data.no_register,
                total_bayar_resep: 0,
            });
            this.resepDokterIrdaService.onGetByIdRegisterToTrans(this.currentRegisterId).subscribe((result) => {
                this.transaksiObatIrdaService.setResep(result.data);
            });
            this.handleClickResep = false;
        }
        handleSelectedRowResep(args) {
            this.handleClickResep = true;
            this.onLoadDetailData(args.data.resep_id);
            this.currentResepId = args.data.resep_id;
        }
        rowDataBound(args) {
            var is_racikan = args.data.is_racikan;
            if (!is_racikan) {
                //here hide which parent row has no child records
                args.row.querySelector('td').innerHTML = " ";
                args.row.querySelector('td').className = "e-customizedExpandcell";
            }
            else {
                // args.row.classList.add('is-racikan');
            }
        }
        onDataBound() {
            this.GridDetailResep.detailRowModule.expandAll();
        }
        onLoadDetailData(id) {
            this.resepDokterIrdaService.onGetById(id).subscribe((result) => {
                this.DataSourceDetailResep = result.data.details;
                this.GridDetailResep.refresh();
                this.mapingRacikan(result.data.details);
                let tot = 0;
                this.DataSourceDetailResep.map((item) => {
                    console.log();
                    tot += item['is_racikan'] ? item['harga_jual_apotek'] : item['qty_harian'] * item['harga_jual_apotek'];
                    this.total_bayar_resep.setValue(tot);
                });
            });
        }
        mapingRacikan(details) {
            this.DataSourceDetailResepRacikan = [];
            details.map((item) => {
                item.racikans.map((e) => {
                    return e.total_harga = e.qty_racikan * e.harga_jual_apotek;
                });
                this.DataSourceDetailResepRacikan.push(...item.racikans);
            });
            this.childGrid = {
                dataSource: this.DataSourceDetailResepRacikan,
                queryString: "resep_detail_id",
                rowHeight: 30,
                allowResizing: true,
                allowTextWrap: true,
                textWrapSettings: { wrapMode: 'Both' },
                columns: [
                    { "field": "nama_obat", "headerText": "Nama Obat" },
                    { "field": "qty_racikan", "headerText": "Qty", "width": 50 },
                    { "field": "harga_jual_apotek", "headerText": "Harga", "textAlign": "Right", "format": "N2", "width": 70 },
                    { "field": "total_harga", "headerText": "Total Harga", "textAlign": "Right", "format": "N2", "width": 70 }
                ]
            };
        }
        handelClickLihatresep() {
            this.handleClickResep = false;
        }
        handleClickSimpan() {
            this.transaksiObatIrdaService.Insert(this.currentResepId).subscribe((result) => {
                this.handleClickResep = false;
                this.resepDokterIrdaService.onGetByIdRegisterToTrans(this.currentRegisterId).subscribe((result) => {
                    this.utilityService.onShowingCustomAlert('success', 'Berhasil Tambah Data Baru', result.message)
                        .then(() => {
                        this.transaksiObatIrdaService.setResep(result.data);
                        this.refreshGridPasien();
                    });
                });
            });
        }
        get total_bayar_resep() { return this.formInput.get('total_bayar_resep'); }
    }
    TransaksiObatIrdaComponent.ɵfac = function TransaksiObatIrdaComponent_Factory(t) { return new (t || TransaksiObatIrdaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](src_app_modules_dashboard_dokter_services_resep_dokter_irda_resep_dokter_irda_service__WEBPACK_IMPORTED_MODULE_4__.ResepDokterIrdaService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_services_transaksi_obat_transaksi_obat_irda_transaksi_obat_irda_service__WEBPACK_IMPORTED_MODULE_5__.TransaksiObatIrdaService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](src_app_modules_PIS_services_IRNA_admisi_pasien_rawat_inap_admisi_pasien_rawat_inap_service__WEBPACK_IMPORTED_MODULE_6__.AdmisiPasienRawatInapService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_7__.UtilityService)); };
    TransaksiObatIrdaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({ type: TransaksiObatIrdaComponent, selectors: [["app-transaksi-obat-irda"]], viewQuery: function TransaksiObatIrdaComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c0, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c1, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c2, 5);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx.LookupKodeRuangan = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx.GridDetailResep = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx.GridPasien = _t.first);
            }
        }, decls: 17, vars: 18, consts: [[1, "row"], [1, "col-sm-4"], [3, "grid-height", "grid-DataSource", "grid-paging", "grid-lines", "columns", "row-selected"], ["GridPasien", ""], [1, "col-sm-8"], [3, "formGroup"], [1, "col-sm-6"], ["formControlName", "nomor_rm", 3, "label", "inputFieldState"], ["formControlName", "nama_pasien", 3, "label", "inputFieldState"], ["formControlName", "umur", 3, "label", "inputFieldState"], ["formControlName", "dokter", 3, "label", "inputFieldState"], ["formControlName", "nomor_registrasi", 3, "label", "inputFieldState"], [4, "ngIf"], ["GridResep", ""], ["type", "button", 1, "app-btn-master", "me-5", "btn", "btn-sm", "btn-primary-outline", 3, "click"], [1, "fas", "fa-arrow-left"], ["type", "button", 1, "app-btn-master", "btn", "btn-sm", "btn-primary", 3, "click"], [1, "fas", "fa-save"], ["height", "calc(100vh - 24rem)", "gridLines", "Both", "rowHeight", "30", 3, "dataSource", "childGrid", "allowTextWrap", "textWrapSettings", "rowDataBound", "dataBound"], ["GridDetailResep", ""], ["field", "rute_pemberian_obat", "headerText", "Resep", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing", "valueAccessor"], ["field", "qty_harian", "headerText", "Qty", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", 3, "visible", "allowEditing", "width", "valueAccessor"], ["field", "harga_jual_apotek", "headerText", "Harga", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing", "width"], ["field", "harga_jual_apotek", "headerText", "Total Harga", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing", "width", "valueAccessor"], [1, "row", "pe-2"], [1, "col-sm-5"], [1, "col-sm-7"], ["formControlName", "total_bayar_resep", 3, "label", "isFooter", "inputFieldState"]], template: function TransaksiObatIrdaComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "org-card-layout");
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "div", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "mol-grid", 2, 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("row-selected", function TransaksiObatIrdaComponent_Template_mol_grid_row_selected_3_listener($event) { return ctx.handleSelectedRow($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "div", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "form", 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "div", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](8, "div", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](9, "mol-input-text", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](10, "mol-input-text", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](11, "mol-input-text", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](12, "div", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](13, "mol-input-text", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](14, "mol-input-text", 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](15, TransaksiObatIrdaComponent_span_15_Template, 4, 7, "span", 12);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](16, TransaksiObatIrdaComponent_span_16_Template, 18, 23, "span", 12);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("grid-height", "calc(100vh - 13rem)")("grid-DataSource", ctx.DataSourcePasien)("grid-paging", false)("grid-lines", "Both")("columns", ctx.GridConfig.GridColumns);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("formGroup", ctx.formInput);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "No Rm")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "Pasien")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "Umur")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "Dokter")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "No Reg")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", !ctx.handleClickResep);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.handleClickResep);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_8__.OrgCardLayoutComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_9__.MolGridComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_10__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_14__.NgIf, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_15__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_15__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_15__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_15__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_15__.AggregateColumnDirective, _shared_components_molecules_form_mol_input_numeric_mol_input_numeric_component__WEBPACK_IMPORTED_MODULE_11__.MolInputNumericComponent], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_14__.AsyncPipe], styles: ["#basic-addon1[_ngcontent-%COMP%] {\r\n    height: 32px;\r\n    padding-left: 12px;\r\n    width: 100%;\r\n    border-top-left-radius: 0;\r\n    border-bottom-left-radius: 0;\r\n    border: 0;\r\n  }\r\n  \r\n  #DropdownObat[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%] {\r\n    border-top-right-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n  }\r\n  \r\n  #NumericQty[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%]    > input[_ngcontent-%COMP%] {\r\n    text-align: right;\r\n    padding-right: 5px;\r\n  }\r\n  \r\n  div.head[_ngcontent-%COMP%] {\r\n    font-size: 13px !important;\r\n    font-weight: 500 !important;\r\n  }\r\n  \r\n  .is-racikan[_ngcontent-%COMP%]{\r\n    background-color: #f3e6f3;\r\n  }\r\n  \r\n  .form_paragraf[_ngcontent-%COMP%]{\r\n    display: inline-block!important;\r\n  }\r\n  \r\n  .form-label[_ngcontent-%COMP%] {\r\n  margin-bottom: 0px;\r\n}\r\n  \r\n  #basic-addon1[_ngcontent-%COMP%] {\r\n  height: 32px;\r\n  padding-left: 12px;\r\n  width: 100%;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  border: 0;\r\n}\r\n  \r\n  .e-toolbar[_ngcontent-%COMP%]   .e-toolbar-item[_ngcontent-%COMP%]   .e-tbar-btn.e-btn[_ngcontent-%COMP%]   .e-icons.e-btn-icon[_ngcontent-%COMP%] {\r\n  min-height: 14px !important;\r\n}\r\n  \r\n  th.e-headercell[_ngcontent-%COMP%] {\r\n  background-color: rgba(0, 0, 0, 0.03);\r\n  color: black;\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  padding: 5px !important;\r\n  height: 30px !important;\r\n}\r\n  \r\n  span.e-headertext[_ngcontent-%COMP%] {\r\n  font-size: 13px !important;\r\n}\r\n  \r\n  td.e-rowcell[_ngcontent-%COMP%] {\r\n  padding: 5px !important;\r\n}\r\n  \r\n  .e-grid[_ngcontent-%COMP%]   .e-detailheadercell[_ngcontent-%COMP%], td.e-detailcell.e-lastrowcell[_ngcontent-%COMP%] {\r\n  background-color: var(--biru-muda) !important;\r\n}\r\n  \r\n  div.e-gridcontent[_ngcontent-%COMP%]   tr.e-detailrow[_ngcontent-%COMP%]   td.e-detailcell[_ngcontent-%COMP%]   div.e-headercontent[_ngcontent-%COMP%]   th.e-headercell[_ngcontent-%COMP%] {\r\n  background-color: var(--biru-muda) !important;\r\n}"] });
    return TransaksiObatIrdaComponent;
})();


/***/ }),

/***/ 86160:
/*!************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/transaksi-obat/transaksi-obat-irja/transaksi-obat-irja.component.ts ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TransaksiObatIrjaComponent": () => (/* binding */ TransaksiObatIrjaComponent)
/* harmony export */ });
/* harmony import */ var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/grid.config.json */ 36914);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_dashboard_dokter_services_resep_dokter_resep_dokter_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/dashboard-dokter/services/resep-dokter/resep-dokter.service */ 67085);
/* harmony import */ var _services_transaksi_obat_transaksi_obat_irja_transaksi_obat_irja_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../services/transaksi-obat/transaksi-obat-irja/transaksi-obat-irja.service */ 11431);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ 29996);
/* harmony import */ var src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/encryption.service */ 18757);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var src_app_helpers_utility_utility_helper_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/helpers/utility/utility-helper.service */ 27232);
/* harmony import */ var src_app_modules_PIS_services_IRJA_pendaftaran_pasien_baru_pendaftaran_pasien_baru_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/modules/PIS/services/IRJA/pendaftaran-pasien-baru/pendaftaran-pasien-baru.service */ 93762);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 34903);
/* harmony import */ var _shared_components_molecules_form_mol_input_numeric_mol_input_numeric_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-numeric/mol-input-numeric.component */ 13864);














const _c0 = ["LookupRacikan"];
const _c1 = ["GridResepRacikan"];
const _c2 = ["itemTemplate"];
const _c3 = ["modalTambahanHariResep"];
const _c4 = function () { return { wrapMode: "Both" }; };
let TransaksiObatIrjaComponent = /*@__PURE__*/ (() => {
    class TransaksiObatIrjaComponent {
        constructor(resepDokterService, transaksiObatIrjaService, router, encryptionService, activatedRoute, utilityService, utilityHelperService, pendaftaranPasienBaruService, formBuilder) {
            this.resepDokterService = resepDokterService;
            this.transaksiObatIrjaService = transaksiObatIrjaService;
            this.router = router;
            this.encryptionService = encryptionService;
            this.activatedRoute = activatedRoute;
            this.utilityService = utilityService;
            this.utilityHelperService = utilityHelperService;
            this.pendaftaranPasienBaruService = pendaftaranPasienBaruService;
            this.formBuilder = formBuilder;
            this.ButtonNav = [
                { Id: 'kembali', Captions: 'Kembali', Icons1: 'fa-arrow-left fa-sm' },
                { Id: 'simpan', Captions: 'Simpan Penjualan Resep', Icons1: 'fa-save fa-sm' },
            ];
            this.GridConfig = /*#__PURE__*/ (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
            this.inputFieldState = 'detail';
            this.keterangan = (field, data1) => {
                return data1['nama_obat'] + ', ' +
                    data1['ket_label'] + ', ' +
                    data1['ket_aturan'];
            };
            this.quantity = (field, data1) => {
                return data1['qty_resep'] + ' ' + data1['nama_satuan'];
            };
            this.totalharga = (field, data1) => {
                return (data1['is_racikan']) ? data1['harga_jual_apotek'] : data1['qty_resep'] * data1['harga_jual_apotek'];
            };
            this.dataSourceChild = [];
            this.dataSource = [];
            this.dataHeader = [];
        }
        ngOnInit() {
            this.formInput = this.formBuilder.group({
                outlet: ['', []],
                pasien: ['', []],
                poli: ['', []],
                dokter: ['', []],
                umur: ['', []],
                total_bayar_resep: [0, []]
            });
            this.childGrid = {
                dataSource: this.dataSourceChild,
                queryString: "resep_detail_id",
                rowHeight: 30,
                allowResizing: true,
                allowTextWrap: true,
                textWrapSettings: { wrapMode: 'Both' },
                columns: [
                    { "field": "nama_obat", "headerText": "Nama Obat" },
                    { "field": "qty_racikan", "headerText": "Qty", "width": 50 },
                    { "field": "harga_jual_apotek", "headerText": "Harga", "textAlign": "Right", "format": "N2", "width": 70 },
                    { "field": "total_harga", "headerText": "Total Harga", "textAlign": "Right", "format": "N2", "width": 70 }
                ]
            };
        }
        ngAfterViewInit() {
            let id = this.encryptionService.decrypt(this.activatedRoute.snapshot.params["id"]);
            console.log(id);
            this.onLoadDetailData(id);
        }
        onLoadDetailData(id) {
            this.resepDokterService.onGetById(id).subscribe((result) => {
                this.dataHeader = result.data;
                console.log('header', this.dataHeader);
                this.dataSource = result.data.details;
                this.GridResepRacikan.refresh();
                this.mapingRacikan(result.data.details);
                //    let umur = this.utilityHelperService.getAge(result.data.tgl_lahir);
                this.formInput.setValue({
                    outlet: result.data.nama_outlet,
                    poli: result.data.nama_poli,
                    pasien: result.data.nama_pasien,
                    dokter: result.data.nama_dokter,
                    umur: result.data.tgl_lahir,
                    total_bayar_resep: 0
                });
                this.pendaftaranPasienBaruService.onGetLinkFotoPerson(this.dataHeader.id_person, false)
                    .subscribe((result) => {
                    this.imageSrc = result.data;
                });
            });
        }
        mapingRacikan(details) {
            this.dataSourceChild = [];
            details.map((item) => {
                item.racikans.map((e) => {
                    return e.total_harga = e.qty_racikan * e.harga_jual_apotek;
                });
                this.dataSourceChild.push(...item.racikans);
            });
            this.childGrid = {
                dataSource: this.dataSourceChild,
                queryString: "resep_detail_id",
                rowHeight: 30,
                allowResizing: true,
                allowTextWrap: true,
                textWrapSettings: { wrapMode: 'Both' },
                columns: [
                    { "field": "nama_obat", "headerText": "Nama Obat" },
                    { "field": "qty_racikan", "headerText": "Qty", "width": 50 },
                    { "field": "harga_jual_apotek", "headerText": "Harga", "textAlign": "Right", "format": "N2", "width": 70 },
                    { "field": "total_harga", "headerText": "Total Harga", "textAlign": "Right", "format": "N2", "width": 70 }
                ]
            };
        }
        rowDataBound(args) {
            var is_racikan = args.data.is_racikan;
            if (!is_racikan) {
                //here hide which parent row has no child records
                args.row.querySelector('td').innerHTML = " ";
                args.row.querySelector('td').className = "e-customizedExpandcell";
            }
            else {
                // args.row.classList.add('is-racikan');
            }
        }
        onDataBound() {
            this.GridResepRacikan.detailRowModule.expandAll();
        }
        handleSelected(args) {
            // this.total_bayar_resep.setValue(0);
            let tot = 0;
            this.GridResepRacikan.getSelectedRecords().map((item) => {
                let har = item['is_racikan'] ? item['harga_jual_apotek'] : item['qty_resep'] * item['harga_jual_apotek'];
                tot += har;
                this.total_bayar_resep.setValue(tot);
            });
        }
        onClickButtonNav(args) {
            switch (args) {
                case "kembali":
                    this.router.navigateByUrl('dashboard/Pharmacy/antrian-farmasi');
                    break;
                case "simpan":
                    let Data = this.dataHeader;
                    Data.details = this.GridResepRacikan.getSelectedRecords();
                    this.transaksiObatIrjaService.Insert(Data).subscribe((result) => {
                        this.utilityService.onShowingCustomAlert('success', 'Data Berhasil Tersimpan', result.message)
                            .then(() => {
                            this.router.navigateByUrl('dashboard/Pharmacy/antrian-farmasi');
                        });
                    });
                    break;
                default:
                    break;
            }
        }
        get total_bayar_resep() { return this.formInput.get('total_bayar_resep'); }
    }
    TransaksiObatIrjaComponent.ɵfac = function TransaksiObatIrjaComponent_Factory(t) { return new (t || TransaksiObatIrjaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](src_app_modules_dashboard_dokter_services_resep_dokter_resep_dokter_service__WEBPACK_IMPORTED_MODULE_1__.ResepDokterService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_services_transaksi_obat_transaksi_obat_irja_transaksi_obat_irja_service__WEBPACK_IMPORTED_MODULE_2__.TransaksiObatIrjaService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_11__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_3__.EncryptionService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_11__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_4__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](src_app_helpers_utility_utility_helper_service__WEBPACK_IMPORTED_MODULE_5__.UtilityHelperService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](src_app_modules_PIS_services_IRJA_pendaftaran_pasien_baru_pendaftaran_pasien_baru_service__WEBPACK_IMPORTED_MODULE_6__.PendaftaranPasienBaruService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder)); };
    TransaksiObatIrjaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineComponent"]({ type: TransaksiObatIrjaComponent, selectors: [["app-transaksi-obat-irja"]], viewQuery: function TransaksiObatIrjaComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_c0, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_c1, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_c2, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵviewQuery"](_c3, 5);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.LookupRacikan = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.GridResepRacikan = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.itemTemplate = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵloadQuery"]()) && (ctx.modalTambahanHariResep = _t.first);
            }
        }, decls: 27, vars: 42, consts: [[3, "ButtonNav", "onClickButtonNav"], [3, "formGroup"], [1, "row"], [1, "col-sm-4"], [1, "row", "mb-3"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], [1, "img-thumbnail", 2, "width", "120px", "max-width", "120px", "height", "150px", "max-height", "150px", 3, "src"], ["formControlName", "outlet", 3, "label", "inputFieldState"], ["formControlName", "poli", 3, "label", "inputFieldState"], ["formControlName", "dokter", 3, "label", "inputFieldState"], ["formControlName", "pasien", 3, "label", "inputFieldState"], ["formControlName", "umur", 3, "label", "inputFieldState"], [1, "col-sm-8"], [1, "card"], [1, "card-body", "p-0"], ["height", "calc(100vh - 20rem)", "gridLines", "Both", "rowHeight", "30", 3, "dataSource", "childGrid", "allowTextWrap", "textWrapSettings", "rowDataBound", "dataBound", "rowSelected", "rowDeselected"], ["GridResepRacikan", ""], [3, "width", "field", "visible", "type", "textAlign", "headerTextAlign"], ["field", "rute_pemberian_obat", "headerText", "Resep", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing", "valueAccessor"], ["field", "qty_resep", "headerText", "Qty", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", 3, "visible", "allowEditing", "width", "valueAccessor"], ["field", "harga_jual_apotek", "headerText", "Harga", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing", "width"], ["field", "harga_jual_apotek", "headerText", "Total", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing", "width", "valueAccessor"], [1, "row", "pe-2"], [1, "col-sm-5"], [1, "col-sm-7"], ["formControlName", "total_bayar_resep", 3, "label", "isFooter", "inputFieldState"]], template: function TransaksiObatIrjaComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("onClickButtonNav", function TransaksiObatIrjaComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](1, "form", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](2, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](3, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](4, "div", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](5, "div", 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](6, "img", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](7, "mol-input-text", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](8, "mol-input-text", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](9, "mol-input-text", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](10, "mol-input-text", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](11, "mol-input-text", 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](12, "div", 12);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](13, "div", 13);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](14, "div", 14);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](15, "ejs-grid", 15, 16);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("rowDataBound", function TransaksiObatIrjaComponent_Template_ejs_grid_rowDataBound_15_listener($event) { return ctx.rowDataBound($event); })("dataBound", function TransaksiObatIrjaComponent_Template_ejs_grid_dataBound_15_listener() { return ctx.onDataBound(); })("rowSelected", function TransaksiObatIrjaComponent_Template_ejs_grid_rowSelected_15_listener($event) { return ctx.handleSelected($event); })("rowDeselected", function TransaksiObatIrjaComponent_Template_ejs_grid_rowDeselected_15_listener($event) { return ctx.handleSelected($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](17, "e-columns");
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](18, "e-column", 17);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](19, "e-column", 18);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](20, "e-column", 19);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](21, "e-column", 20);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](22, "e-column", 21);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](23, "div", 22);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](24, "div", 23);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](25, "div", 24);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](26, "mol-input-numeric", 25);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("formGroup", ctx.formInput);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](5);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("src", ctx.imageSrc ? ctx.imageSrc : "../../../../../../assets/image/pendaftaran-ulang-pasien/blank.png", _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵsanitizeUrl"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("label", "Outlet")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("label", "Poli")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("label", "Dokter")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("label", "Pasien")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("label", "Umur")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](4);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("dataSource", ctx.dataSource)("childGrid", ctx.childGrid)("allowTextWrap", true)("textWrapSettings", _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵpureFunction0"](41, _c4));
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("width", 50)("field", "Checkbox")("visible", true)("type", "checkbox")("textAlign", "Center")("headerTextAlign", "Center");
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("visible", true)("allowEditing", false)("valueAccessor", ctx.keterangan);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 120)("valueAccessor", ctx.quantity);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 120);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 130)("valueAccessor", ctx.totalharga);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](4);
                _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("label", "Total Bayar Resep")("isFooter", true)("inputFieldState", "detail")("inputFieldState", ctx.inputFieldState);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_7__.OrgCardLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_8__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_13__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_13__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_13__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_13__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_13__.AggregateColumnDirective, _shared_components_molecules_form_mol_input_numeric_mol_input_numeric_component__WEBPACK_IMPORTED_MODULE_9__.MolInputNumericComponent], styles: ["#basic-addon1[_ngcontent-%COMP%] {\r\n  height: 32px;\r\n  padding-left: 12px;\r\n  width: 100%;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  border: 0;\r\n}\r\n\r\n#DropdownObat[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%] {\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n}\r\n\r\n#NumericQty[_ngcontent-%COMP%]    > span[_ngcontent-%COMP%]    > input[_ngcontent-%COMP%] {\r\n  text-align: right;\r\n  padding-right: 5px;\r\n}\r\n\r\ndiv.head[_ngcontent-%COMP%] {\r\n  font-size: 13px !important;\r\n  font-weight: 500 !important;\r\n}\r\n\r\n.is-racikan[_ngcontent-%COMP%]{\r\n  background-color: #f3e6f3;\r\n}\r\n\r\n.form_paragraf[_ngcontent-%COMP%]{\r\n  display: inline-block!important;\r\n}\r\n\r\n.form-label[_ngcontent-%COMP%] {\r\nmargin-bottom: 0px;\r\n}\r\n\r\n#basic-addon1[_ngcontent-%COMP%] {\r\nheight: 32px;\r\npadding-left: 12px;\r\nwidth: 100%;\r\nborder-top-left-radius: 0;\r\nborder-bottom-left-radius: 0;\r\nborder: 0;\r\n}\r\n\r\n.e-toolbar[_ngcontent-%COMP%]   .e-toolbar-item[_ngcontent-%COMP%]   .e-tbar-btn.e-btn[_ngcontent-%COMP%]   .e-icons.e-btn-icon[_ngcontent-%COMP%] {\r\nmin-height: 14px !important;\r\n}\r\n\r\nth.e-headercell[_ngcontent-%COMP%] {\r\nbackground-color: rgba(0, 0, 0, 0.03);\r\ncolor: black;\r\nborder: 1px solid rgba(0, 0, 0, 0.125);\r\npadding: 5px !important;\r\nheight: 30px !important;\r\n}\r\n\r\nspan.e-headertext[_ngcontent-%COMP%] {\r\nfont-size: 13px !important;\r\n}\r\n\r\ntd.e-rowcell[_ngcontent-%COMP%] {\r\npadding: 5px !important;\r\n}\r\n\r\n.e-grid[_ngcontent-%COMP%]   .e-detailheadercell[_ngcontent-%COMP%], td.e-detailcell.e-lastrowcell[_ngcontent-%COMP%] {\r\nbackground-color: var(--biru-muda) !important;\r\n}\r\n\r\ndiv.e-gridcontent\r\ntr.e-detailrow\r\ntd.e-detailcell\r\ndiv.e-headercontent\r\nth.e-headercell[_ngcontent-%COMP%] {\r\nbackground-color: var(--biru-muda) !important;\r\n}"] });
    return TransaksiObatIrjaComponent;
})();


/***/ }),

/***/ 65912:
/*!************************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/transaksi-obat/transaksi-obat-irja/view-resep-irja/view-resep-irja.component.ts ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ViewResepIrjaComponent": () => (/* binding */ ViewResepIrjaComponent)
/* harmony export */ });
/* harmony import */ var _json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../json/grid.config.json */ 36914);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_dashboard_dokter_services_resep_dokter_resep_dokter_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/dashboard-dokter/services/resep-dokter/resep-dokter.service */ 67085);
/* harmony import */ var src_app_modules_Pharmacy_services_transaksi_obat_transaksi_obat_irja_transaksi_obat_irja_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/Pharmacy/services/transaksi-obat/transaksi-obat-irja/transaksi-obat-irja.service */ 11431);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ 29996);
/* harmony import */ var src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/modules/shared/services/encryption.service */ 18757);
/* harmony import */ var src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/modules/shared/services/utility.service */ 35228);
/* harmony import */ var src_app_helpers_utility_utility_helper_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/helpers/utility/utility-helper.service */ 27232);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 34903);
/* harmony import */ var _shared_components_molecules_form_mol_input_numeric_mol_input_numeric_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../shared/components/molecules/form/mol-input-numeric/mol-input-numeric.component */ 13864);













const _c0 = ["LookupRacikan"];
const _c1 = ["GridResepRacikan"];
const _c2 = ["itemTemplate"];
const _c3 = ["modalTambahanHariResep"];
const _c4 = function () { return { wrapMode: "Both" }; };
let ViewResepIrjaComponent = /*@__PURE__*/ (() => {
    class ViewResepIrjaComponent {
        constructor(resepDokterService, transaksiObatIrjaService, router, encryptionService, activatedRoute, utilityService, utilityHelperService, formBuilder) {
            this.resepDokterService = resepDokterService;
            this.transaksiObatIrjaService = transaksiObatIrjaService;
            this.router = router;
            this.encryptionService = encryptionService;
            this.activatedRoute = activatedRoute;
            this.utilityService = utilityService;
            this.utilityHelperService = utilityHelperService;
            this.formBuilder = formBuilder;
            this.ButtonNav = [
                { Id: 'kembali', Captions: 'Kembali', Icons1: 'fa-arrow-left fa-sm' },
                // { Id: 'simpan', Captions: 'Simpan Penjualan Resep', Icons1: 'fa-save fa-sm' },
            ];
            this.GridConfig = /*#__PURE__*/ (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_grid_config_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
            this.inputFieldState = 'detail';
            this.keterangan = (field, data1) => {
                return data1['nama_obat'] + ', ' +
                    data1['ket_label'] + ', ' +
                    data1['ket_aturan'];
            };
            this.quantity = (field, data1) => {
                return data1['qty_resep'] + ' ' + data1['nama_satuan'];
            };
            this.totalharga = (field, data1) => {
                return (data1['is_racikan']) ? data1['harga_jual_apotek'] : data1['qty_resep'] * data1['harga_jual_apotek'];
            };
            this.dataSourceChild = [];
            this.dataSource = [];
            this.dataHeader = [];
        }
        ngOnInit() {
            this.formInput = this.formBuilder.group({
                pasien: ['', []],
                poli: ['', []],
                dokter: ['', []],
                umur: ['', []],
                total_bayar_resep: [0, []]
            });
            this.childGrid = {
                dataSource: this.dataSourceChild,
                queryString: "resep_detail_id",
                rowHeight: 30,
                allowResizing: true,
                allowTextWrap: true,
                textWrapSettings: { wrapMode: 'Both' },
                columns: this.GridConfig.columnsChild
            };
        }
        ngAfterViewInit() {
            let id = this.encryptionService.decrypt(this.activatedRoute.snapshot.params["id"]);
            console.log(id);
            this.onLoadDetailData(id);
        }
        onLoadDetailData(id) {
            this.resepDokterService.onGetById(id).subscribe((result) => {
                this.dataHeader = result.data;
                this.dataSource = result.data.details;
                this.GridResepRacikan.refresh();
                this.mapingRacikan(result.data.details);
                //    let umur = this.utilityHelperService.getAge(result.data.tgl_lahir);
                this.formInput.setValue({
                    poli: result.data.nama_poli,
                    pasien: result.data.nama_pasien,
                    dokter: result.data.nama_dokter,
                    umur: result.data.tgl_lahir,
                    total_bayar_resep: 0
                });
                this.imageSrc = result.data.nama_foto;
            });
        }
        mapingRacikan(details) {
            this.dataSourceChild = [];
            details.map((item) => {
                this.dataSourceChild.push(...item.racikans);
            });
            this.childGrid = {
                dataSource: this.dataSourceChild,
                queryString: "resep_detail_id",
                rowHeight: 30,
                allowResizing: true,
                allowTextWrap: true,
                textWrapSettings: { wrapMode: 'Both' },
                columns: this.GridConfig.columnsChild
            };
        }
        rowDataBound(args) {
            var is_racikan = args.data.is_racikan;
            if (!is_racikan) {
                //here hide which parent row has no child records
                args.row.querySelector('td').innerHTML = " ";
                args.row.querySelector('td').className = "e-customizedExpandcell";
            }
            else {
                // args.row.classList.add('is-racikan');
            }
        }
        onDataBound() {
            this.GridResepRacikan.detailRowModule.expandAll();
        }
        handleSelected(args) {
            // this.total_bayar_resep.setValue(0);
            let tot = 0;
            this.GridResepRacikan.getSelectedRecords().map((item) => {
                let har = item['is_racikan'] ? item['harga_jual_apotek'] : item['qty_resep'] * item['harga_jual_apotek'];
                tot += har;
                this.total_bayar_resep.setValue(tot);
            });
        }
        onClickButtonNav(args) {
            switch (args) {
                case "kembali":
                    this.router.navigateByUrl('dashboard/Pharmacy/antrian-farmasi');
                    break;
                case "simpan":
                    let Data = this.dataHeader;
                    Data.details = this.GridResepRacikan.getSelectedRecords();
                    this.transaksiObatIrjaService.Insert(Data).subscribe((result) => {
                        this.utilityService.onShowingCustomAlert('success', 'Data Berhasil Tersimpan', result.message)
                            .then(() => {
                            this.router.navigateByUrl('dashboard/Pharmacy/antrian-farmasi');
                        });
                    });
                    break;
                default:
                    break;
            }
        }
        get total_bayar_resep() { return this.formInput.get('total_bayar_resep'); }
    }
    ViewResepIrjaComponent.ɵfac = function ViewResepIrjaComponent_Factory(t) { return new (t || ViewResepIrjaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](src_app_modules_dashboard_dokter_services_resep_dokter_resep_dokter_service__WEBPACK_IMPORTED_MODULE_1__.ResepDokterService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](src_app_modules_Pharmacy_services_transaksi_obat_transaksi_obat_irja_transaksi_obat_irja_service__WEBPACK_IMPORTED_MODULE_2__.TransaksiObatIrjaService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_10__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](src_app_modules_shared_services_encryption_service__WEBPACK_IMPORTED_MODULE_3__.EncryptionService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_10__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](src_app_modules_shared_services_utility_service__WEBPACK_IMPORTED_MODULE_4__.UtilityService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](src_app_helpers_utility_utility_helper_service__WEBPACK_IMPORTED_MODULE_5__.UtilityHelperService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormBuilder)); };
    ViewResepIrjaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineComponent"]({ type: ViewResepIrjaComponent, selectors: [["app-view-resep-irja"]], viewQuery: function ViewResepIrjaComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵviewQuery"](_c0, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵviewQuery"](_c1, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵviewQuery"](_c2, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵviewQuery"](_c3, 5);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵloadQuery"]()) && (ctx.LookupRacikan = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵloadQuery"]()) && (ctx.GridResepRacikan = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵloadQuery"]()) && (ctx.itemTemplate = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵloadQuery"]()) && (ctx.modalTambahanHariResep = _t.first);
            }
        }, decls: 25, vars: 34, consts: [[3, "ButtonNav", "onClickButtonNav"], [3, "formGroup"], [1, "row"], [1, "col-sm-4"], [1, "row", "mb-3"], [1, "col-lg-12", "col-md-12", "col-sm-12", "col-xs-12"], [1, "img-thumbnail", 2, "width", "120px", "max-width", "120px", "height", "150px", "max-height", "150px", 3, "src"], ["formControlName", "poli", 3, "label", "inputFieldState"], ["formControlName", "dokter", 3, "label", "inputFieldState"], ["formControlName", "pasien", 3, "label", "inputFieldState"], ["formControlName", "umur", 3, "label", "inputFieldState"], [1, "col-sm-8"], [1, "card"], [1, "card-body", "p-0"], ["height", "calc(100vh - 20rem)", "gridLines", "Both", "rowHeight", "30", 3, "dataSource", "childGrid", "allowTextWrap", "textWrapSettings", "rowDataBound", "dataBound", "rowSelected", "rowDeselected"], ["GridResepRacikan", ""], ["field", "rute_pemberian_obat", "headerText", "Resep", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing", "valueAccessor"], ["field", "qty_resep", "headerText", "Qty", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", 3, "visible", "allowEditing", "width", "valueAccessor"], ["field", "harga_jual_apotek", "headerText", "Harga", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing", "width"], ["field", "harga_jual_apotek", "headerText", "Total", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing", "width", "valueAccessor"], [1, "row", "pe-2"], [1, "col-sm-5"], [1, "col-sm-7"], ["formControlName", "total_bayar_resep", 3, "label", "isFooter", "inputFieldState"]], template: function ViewResepIrjaComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "org-card-layout", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("onClickButtonNav", function ViewResepIrjaComponent_Template_org_card_layout_onClickButtonNav_0_listener($event) { return ctx.onClickButtonNav($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](1, "form", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](2, "div", 2);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](3, "div", 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](4, "div", 4);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](5, "div", 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](6, "img", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](7, "mol-input-text", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](8, "mol-input-text", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](9, "mol-input-text", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](10, "mol-input-text", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](11, "div", 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](12, "div", 12);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](13, "div", 13);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](14, "ejs-grid", 14, 15);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("rowDataBound", function ViewResepIrjaComponent_Template_ejs_grid_rowDataBound_14_listener($event) { return ctx.rowDataBound($event); })("dataBound", function ViewResepIrjaComponent_Template_ejs_grid_dataBound_14_listener() { return ctx.onDataBound(); })("rowSelected", function ViewResepIrjaComponent_Template_ejs_grid_rowSelected_14_listener($event) { return ctx.handleSelected($event); })("rowDeselected", function ViewResepIrjaComponent_Template_ejs_grid_rowDeselected_14_listener($event) { return ctx.handleSelected($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](16, "e-columns");
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](17, "e-column", 16);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](18, "e-column", 17);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](19, "e-column", 18);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](20, "e-column", 19);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](21, "div", 20);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](22, "div", 21);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](23, "div", 22);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](24, "mol-input-numeric", 23);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ButtonNav", ctx.ButtonNav);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("formGroup", ctx.formInput);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](5);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("src", ctx.imageSrc ? ctx.imageSrc : "../../../../../../assets/image/pendaftaran-ulang-pasien/blank.png", _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵsanitizeUrl"]);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("label", "Poli")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("label", "Dokter")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("label", "Pasien")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("label", "Umur")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](4);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("dataSource", ctx.dataSource)("childGrid", ctx.childGrid)("allowTextWrap", true)("textWrapSettings", _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵpureFunction0"](33, _c4));
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("visible", true)("allowEditing", false)("valueAccessor", ctx.keterangan);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 120)("valueAccessor", ctx.quantity);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 120);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 130)("valueAccessor", ctx.totalharga);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](4);
                _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("label", "Total Bayar Resep")("isFooter", true)("inputFieldState", "detail")("inputFieldState", ctx.inputFieldState);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_6__.OrgCardLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_7__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormControlName, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_12__.AggregateColumnDirective, _shared_components_molecules_form_mol_input_numeric_mol_input_numeric_component__WEBPACK_IMPORTED_MODULE_8__.MolInputNumericComponent], styles: [""] });
    return ViewResepIrjaComponent;
})();


/***/ }),

/***/ 82266:
/*!************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/transaksi-obat/transaksi-obat-irna/transaksi-obat-irna.component.ts ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var _json_LookupGridRuangan_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache;
var _json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache;
var _json_gridResep_config_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache;
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TransaksiObatIrnaComponent": () => (/* binding */ TransaksiObatIrnaComponent)
/* harmony export */ });
/* harmony import */ var _json_LookupGridRuangan_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json/LookupGridRuangan.json */ 12369);
/* harmony import */ var _json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./json/gridPasien.config.json */ 40951);
/* harmony import */ var _json_gridResep_config_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./json/gridResep.config.json */ 49504);
/* harmony import */ var src_app_api_BILLING__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/api/BILLING */ 88044);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var src_app_modules_dashboard_dokter_services_resep_dokter_irna_resep_dokter_irna_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/modules/dashboard-dokter/services/resep-dokter-irna/resep-dokter-irna.service */ 1009);
/* harmony import */ var _services_transaksi_obat_transaksi_obat_irna_transaksi_obat_irna_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../services/transaksi-obat/transaksi-obat-irna/transaksi-obat-irna.service */ 33840);
/* harmony import */ var src_app_modules_PIS_services_IRNA_admisi_pasien_rawat_inap_admisi_pasien_rawat_inap_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/modules/PIS/services/IRNA/admisi-pasien-rawat-inap/admisi-pasien-rawat-inap.service */ 87958);
/* harmony import */ var _shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../shared/components/organism/card/card-layout/card-layout.component */ 66908);
/* harmony import */ var _shared_components_organism_loockUp_org_input_look_up_kode_org_input_look_up_kode_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../shared/components/organism/loockUp/org-input-look-up-kode/org-input-look-up-kode.component */ 9714);
/* harmony import */ var _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../shared/components/molecules/grid/grid/grid.component */ 39456);
/* harmony import */ var _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-text/mol-input-text.component */ 31998);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/common */ 61116);
/* harmony import */ var _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @syncfusion/ej2-angular-grids */ 34903);
/* harmony import */ var _shared_components_molecules_form_mol_input_numeric_mol_input_numeric_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../shared/components/molecules/form/mol-input-numeric/mol-input-numeric.component */ 13864);
















const _c0 = ["LookupKodeRuangan"];
const _c1 = ["GridDetailResep"];
const _c2 = ["GridPasien"];
function TransaksiObatIrnaComponent_span_18_Template(rf, ctx) {
    if (rf & 1) {
        const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "mol-grid", 4, 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("row-selected", function TransaksiObatIrnaComponent_span_18_Template_mol_grid_row_selected_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r6); const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r5.handleSelectedRowResep($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpipe"](3, "async");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("grid-height", "calc(100vh - 20rem)")("grid-DataSource", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpipeBind1"](3, 5, ctx_r2.transaksiObatIrnaService.dataResep))("grid-paging", false)("grid-lines", "Both")("columns", ctx_r2.GridConfigResep.GridColumns);
    }
}
const _c3 = function () { return { wrapMode: "Both" }; };
function TransaksiObatIrnaComponent_span_19_Template(rf, ctx) {
    if (rf & 1) {
        const _r9 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "button", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function TransaksiObatIrnaComponent_span_19_Template_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r9); const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r8.handelClickLihatresep(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](2, "i", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](3, " Lihat Resep");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "button", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function TransaksiObatIrnaComponent_span_19_Template_button_click_4_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r9); const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r10.handleClickSimpan(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](5, "i", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](6, " Simpan Transaksi Obat");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "ejs-grid", 21, 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("rowDataBound", function TransaksiObatIrnaComponent_span_19_Template_ejs_grid_rowDataBound_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r9); const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r11.rowDataBound($event); })("dataBound", function TransaksiObatIrnaComponent_span_19_Template_ejs_grid_dataBound_7_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r9); const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r12.onDataBound(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "e-columns");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](10, "e-column", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](11, "e-column", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](12, "e-column", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](13, "e-column", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](15, "div", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](16, "div", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](17, "mol-input-numeric", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
        const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("dataSource", ctx_r3.DataSourceDetailResep)("childGrid", ctx_r3.childGrid)("allowTextWrap", true)("textWrapSettings", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction0"](22, _c3));
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("visible", true)("allowEditing", false)("valueAccessor", ctx_r3.keterangan);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 130)("valueAccessor", ctx_r3.quantity);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 130);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("visible", true)("allowEditing", true)("width", 130)("valueAccessor", ctx_r3.hargajual);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "Total Bayar Resep")("isFooter", true)("inputFieldState", "detail")("inputFieldState", ctx_r3.inputFieldState);
    }
}
let TransaksiObatIrnaComponent = /*@__PURE__*/ (() => {
    class TransaksiObatIrnaComponent {
        constructor(formBuilder, resepDokterIrnaService, transaksiObatIrnaService, admisiPasienRawatInapService
        // public setupPoliService: SetupPoliService
        ) {
            this.formBuilder = formBuilder;
            this.resepDokterIrnaService = resepDokterIrnaService;
            this.transaksiObatIrnaService = transaksiObatIrnaService;
            this.admisiPasienRawatInapService = admisiPasienRawatInapService;
            this.urlRuangan = src_app_api_BILLING__WEBPACK_IMPORTED_MODULE_3__.API_BILLING.SETUP_DATA.SETUP_POLI.GET_ALL_POLI_FOR_LOOKUP_RAWAT_INAP;
            this.LookupGridRuangan = /*#__PURE__*/ (_json_LookupGridRuangan_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_json_LookupGridRuangan_json__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_json_LookupGridRuangan_json__WEBPACK_IMPORTED_MODULE_0__, 2)));
            this.GridConfig = /*#__PURE__*/ (_json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (_json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(_json_gridPasien_config_json__WEBPACK_IMPORTED_MODULE_1__, 2)));
            this.GridConfigResep = /*#__PURE__*/ (_json_gridResep_config_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache || (_json_gridResep_config_json__WEBPACK_IMPORTED_MODULE_2___namespace_cache = __webpack_require__.t(_json_gridResep_config_json__WEBPACK_IMPORTED_MODULE_2__, 2)));
            this.DataSourcePasien = [];
            this.DataSourceResep = [];
            this.DataSourceDetailResep = [];
            this.DataSourceDetailResepRacikan = [];
            this.inputFieldState = 'detail';
            this.handleClickResep = false;
            this.currentResepId = null;
            this.currentRegisterId = 1;
            this.keterangan = (field, data1) => {
                return data1['nama_obat'] + ', ' +
                    data1['ket_label'] + ', ' +
                    data1['ket_aturan'];
            };
            this.quantity = (field, data1) => {
                return data1['qty_harian'] + ' ' + data1['nama_satuan'];
            };
            this.hargajual = (field, data1) => {
                return data1['harga_jual_apotek'] * data1['qty_harian'];
            };
        }
        ngOnInit() {
            this.formInput = this.formBuilder.group({
                nama_pasien: ['', []],
                umur: ['', []],
                poli: ['', []],
                bed: ['', []],
                dokter: ['', []],
                nomor_rm: ['', []],
                nomor_registrasi: ['', []],
                total_bayar_resep: [0, []]
            });
            this.childGrid = {
                dataSource: this.DataSourceDetailResepRacikan,
                queryString: "resep_detail_id",
                rowHeight: 30,
                allowResizing: true,
                allowTextWrap: true,
                textWrapSettings: { wrapMode: 'Both' },
                columns: this.GridConfigResep.columnsChild
            };
            this.set(1);
        }
        heandleSelectedRuangan(args) {
            console.log(args);
            this.admisiPasienRawatInapService.onGetPasienByPoli(args.id_poli).subscribe((result) => {
                this.DataSourcePasien = result.data;
                this.GridPasien.Grid.refresh();
            });
            this.handleClickResep = false;
        }
        set(id_register) {
            this.resepDokterIrnaService.onGetByIdRegisterToTrans(id_register).subscribe((result) => {
                this.transaksiObatIrnaService.setResep(result.data);
                console.log(result.data);
            });
        }
        handleSelectedRow(args) {
            console.log(args);
            this.currentRegisterId = args.data.id_register;
            this.formInput.setValue({
                nama_pasien: args.data.nama_pasien,
                umur: args.data.usia,
                poli: args.data.nama_poli,
                bed: args.data.bed_no + ' - ' + args.data.bed_no,
                dokter: args.data.nama_dokter,
                nomor_rm: args.data.no_rekam_medis,
                nomor_registrasi: args.data.no_register,
                total_bayar_resep: 0,
            });
            this.resepDokterIrnaService.onGetByIdRegisterToTrans(this.currentRegisterId).subscribe((result) => {
                this.transaksiObatIrnaService.setResep(result.data);
            });
        }
        handleSelectedRowResep(args) {
            this.handleClickResep = true;
            this.onLoadDetailData(args.data.resep_id);
            this.currentResepId = args.data.resep_id;
        }
        rowDataBound(args) {
            var is_racikan = args.data.is_racikan;
            if (!is_racikan) {
                //here hide which parent row has no child records
                args.row.querySelector('td').innerHTML = " ";
                args.row.querySelector('td').className = "e-customizedExpandcell";
            }
            else {
                // args.row.classList.add('is-racikan');
            }
        }
        onDataBound() {
            this.GridDetailResep.detailRowModule.expandAll();
        }
        onLoadDetailData(id) {
            this.resepDokterIrnaService.onGetById(id).subscribe((result) => {
                this.DataSourceDetailResep = result.data.details;
                this.GridDetailResep.refresh();
                this.mapingRacikan(result.data.details);
                let tot = 0;
                this.DataSourceDetailResep.map((item) => {
                    let har = item['is_racikan'] ? item['harga_jual_apotek'] : item['qty_resep'] * item['harga_jual_apotek'];
                    tot += har;
                    this.total_bayar_resep.setValue(tot);
                });
            });
        }
        mapingRacikan(details) {
            this.DataSourceDetailResepRacikan = [];
            details.map((item) => {
                this.DataSourceDetailResepRacikan.push(...item.racikans);
            });
            this.childGrid = {
                dataSource: this.DataSourceDetailResepRacikan,
                queryString: "resep_detail_id",
                rowHeight: 30,
                allowResizing: true,
                allowTextWrap: true,
                textWrapSettings: { wrapMode: 'Both' },
                columns: this.GridConfigResep.columnsChild
            };
        }
        handelClickLihatresep() {
            this.handleClickResep = false;
        }
        handleClickSimpan() {
            this.transaksiObatIrnaService.Insert(this.currentResepId).subscribe((result) => {
                this.handleClickResep = false;
                this.resepDokterIrnaService.onGetByIdRegisterToTrans(this.currentRegisterId).subscribe((result) => {
                    this.transaksiObatIrnaService.setResep(result.data);
                });
            });
        }
        get total_bayar_resep() { return this.formInput.get('total_bayar_resep'); }
    }
    TransaksiObatIrnaComponent.ɵfac = function TransaksiObatIrnaComponent_Factory(t) { return new (t || TransaksiObatIrnaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](src_app_modules_dashboard_dokter_services_resep_dokter_irna_resep_dokter_irna_service__WEBPACK_IMPORTED_MODULE_4__.ResepDokterIrnaService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_services_transaksi_obat_transaksi_obat_irna_transaksi_obat_irna_service__WEBPACK_IMPORTED_MODULE_5__.TransaksiObatIrnaService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](src_app_modules_PIS_services_IRNA_admisi_pasien_rawat_inap_admisi_pasien_rawat_inap_service__WEBPACK_IMPORTED_MODULE_6__.AdmisiPasienRawatInapService)); };
    TransaksiObatIrnaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({ type: TransaksiObatIrnaComponent, selectors: [["app-transaksi-obat-irna"]], viewQuery: function TransaksiObatIrnaComponent_Query(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c0, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c1, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c2, 5);
            }
            if (rf & 2) {
                let _t;
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx.LookupKodeRuangan = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx.GridDetailResep = _t.first);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx.GridPasien = _t.first);
            }
        }, decls: 20, vars: 27, consts: [[1, "row"], [1, "col-sm-4"], [3, "lookup-url", "idKode", "modal-title", "idTitle", "columns", "filter-lookup", "label", "onGetSelectedData"], ["LookupKodeRuangan", ""], [3, "grid-height", "grid-DataSource", "grid-paging", "grid-lines", "columns", "row-selected"], ["GridPasien", ""], [1, "col-sm-8"], [3, "formGroup"], [1, "col-sm-6"], ["formControlName", "nama_pasien", 3, "label", "inputFieldState"], ["formControlName", "umur", 3, "label", "inputFieldState"], ["formControlName", "bed", 3, "label", "inputFieldState"], ["formControlName", "dokter", 3, "label", "inputFieldState"], ["formControlName", "nomor_rm", 3, "label", "inputFieldState"], ["formControlName", "nomor_registrasi", 3, "label", "inputFieldState"], [4, "ngIf"], ["GridResep", ""], ["type", "button", 1, "app-btn-master", "me-5", "btn", "btn-sm", "btn-primary-outline", 3, "click"], [1, "fas", "fa-arrow-left"], ["type", "button", 1, "app-btn-master", "btn", "btn-sm", "btn-primary", 3, "click"], [1, "fas", "fa-save"], ["height", "calc(100vh - 23rem)", "gridLines", "Both", "rowHeight", "30", 3, "dataSource", "childGrid", "allowTextWrap", "textWrapSettings", "rowDataBound", "dataBound"], ["GridDetailResep", ""], ["field", "rute_pemberian_obat", "headerText", "Resep", "editType", "defaultEdit", "textAlign", "left", "headerTextAlign", "center", 3, "visible", "allowEditing", "valueAccessor"], ["field", "qty_harian", "headerText", "Qty", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", 3, "visible", "allowEditing", "width", "valueAccessor"], ["field", "harga_jual_apotek", "headerText", "Harga", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing", "width"], ["field", "harga_jual_apotek", "headerText", "Total Harga", "editType", "defaultEdit", "textAlign", "right", "headerTextAlign", "center", "format", "N2", 3, "visible", "allowEditing", "width", "valueAccessor"], [1, "row", "pe-2"], [1, "col-sm-5"], [1, "col-sm-7"], ["formControlName", "total_bayar_resep", 3, "label", "isFooter", "inputFieldState"]], template: function TransaksiObatIrnaComponent_Template(rf, ctx) {
            if (rf & 1) {
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "org-card-layout");
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "div", 1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "org-input-look-up-kode", 2, 3);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("onGetSelectedData", function TransaksiObatIrnaComponent_Template_org_input_look_up_kode_onGetSelectedData_3_listener($event) { return ctx.heandleSelectedRuangan($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "mol-grid", 4, 5);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("row-selected", function TransaksiObatIrnaComponent_Template_mol_grid_row_selected_5_listener($event) { return ctx.handleSelectedRow($event); });
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "div", 6);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](8, "form", 7);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "div", 0);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "div", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](11, "mol-input-text", 9);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](12, "mol-input-text", 10);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](13, "mol-input-text", 11);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "div", 8);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](15, "mol-input-text", 12);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](16, "mol-input-text", 13);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](17, "mol-input-text", 14);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](18, TransaksiObatIrnaComponent_span_18_Template, 4, 7, "span", 15);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](19, TransaksiObatIrnaComponent_span_19_Template, 18, 23, "span", 15);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
            }
            if (rf & 2) {
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("lookup-url", ctx.urlRuangan)("idKode", "kode_poli")("modal-title", "Data Ruangan")("idTitle", "nama_poli")("columns", ctx.LookupGridRuangan.columns)("filter-lookup", ctx.LookupGridRuangan.filter)("label", "Ruangan");
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("grid-height", "calc(100vh - 16rem)")("grid-DataSource", ctx.DataSourcePasien)("grid-paging", false)("grid-lines", "Both")("columns", ctx.GridConfig.GridColumns);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("formGroup", ctx.formInput);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "Pasien")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "Umur")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "Bed")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "Dokter")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "No Rm")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", "No Reg")("inputFieldState", ctx.inputFieldState);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", !ctx.handleClickResep);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
                _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.handleClickResep);
            }
        }, directives: [_shared_components_organism_card_card_layout_card_layout_component__WEBPACK_IMPORTED_MODULE_7__.OrgCardLayoutComponent, _shared_components_organism_loockUp_org_input_look_up_kode_org_input_look_up_kode_component__WEBPACK_IMPORTED_MODULE_8__.OrgInputLookUpKodeComponent, _shared_components_molecules_grid_grid_grid_component__WEBPACK_IMPORTED_MODULE_9__.MolGridComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormGroupDirective, _shared_components_molecules_form_mol_input_text_mol_input_text_component__WEBPACK_IMPORTED_MODULE_10__.MolInputTextComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_14__.NgIf, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_15__.GridComponent, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_15__.ColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_15__.AggregateColumnsDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_15__.ColumnDirective, _syncfusion_ej2_angular_grids__WEBPACK_IMPORTED_MODULE_15__.AggregateColumnDirective, _shared_components_molecules_form_mol_input_numeric_mol_input_numeric_component__WEBPACK_IMPORTED_MODULE_11__.MolInputNumericComponent], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_14__.AsyncPipe], styles: [""] });
    return TransaksiObatIrnaComponent;
})();


/***/ }),

/***/ 60769:
/*!*************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pharmacy-routing.module.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PharmacyRoutingModule": () => (/* binding */ PharmacyRoutingModule)
/* harmony export */ });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @angular/router */ 29996);
/* harmony import */ var _pages_Antrian_antrian_farmasi_antrian_farmasi_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pages/Antrian/antrian-farmasi/antrian-farmasi.component */ 76985);
/* harmony import */ var _pages_refund_obat_refund_obat_irda_daftar_refund_obat_irda_daftar_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irda-daftar/refund-obat-irda-daftar.component */ 90554);
/* harmony import */ var _pages_refund_obat_refund_obat_irda_detail_refund_obat_irda_detail_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irda-detail/refund-obat-irda-detail.component */ 27286);
/* harmony import */ var _pages_refund_obat_refund_obat_irda_refund_obat_irda_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irda/refund-obat-irda.component */ 68425);
/* harmony import */ var _pages_refund_obat_refund_obat_irja_daftar_refund_obat_irja_daftar_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irja-daftar/refund-obat-irja-daftar.component */ 18175);
/* harmony import */ var _pages_refund_obat_refund_obat_irja_detail_refund_obat_irja_detail_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irja-detail/refund-obat-irja-detail.component */ 37032);
/* harmony import */ var _pages_refund_obat_refund_obat_irja_refund_obat_irja_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irja/refund-obat-irja.component */ 74865);
/* harmony import */ var _pages_refund_obat_refund_obat_irna_daftar_refund_obat_irna_daftar_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irna-daftar/refund-obat-irna-daftar.component */ 83043);
/* harmony import */ var _pages_refund_obat_refund_obat_irna_detail_refund_obat_irna_detail_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irna-detail/refund-obat-irna-detail.component */ 83033);
/* harmony import */ var _pages_refund_obat_refund_obat_irna_refund_obat_irna_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irna/refund-obat-irna.component */ 56059);
/* harmony import */ var _pages_resep_racikan_resep_racikan_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./pages/resep-racikan/resep-racikan.component */ 17788);
/* harmony import */ var _pages_setup_data_setup_cara_pakai_obat_setup_cara_pakai_obat_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./pages/setup-data/setup-cara-pakai-obat/setup-cara-pakai-obat.component */ 42661);
/* harmony import */ var _pages_setup_data_setup_grup_obat_setup_grup_obat_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./pages/setup-data/setup-grup-obat/setup-grup-obat.component */ 32973);
/* harmony import */ var _pages_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./pages/setup-data/setup-label-pemakaian-obat/setup-label-pemakaian-obat.component */ 29012);
/* harmony import */ var _pages_setup_data_setup_outlet_setup_outlet_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./pages/setup-data/setup-outlet/setup-outlet.component */ 49357);
/* harmony import */ var _pages_setup_data_setup_rute_pemberian_obat_setup_rute_pemberian_obat_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./pages/setup-data/setup-rute-pemberian-obat/setup-rute-pemberian-obat.component */ 30939);
/* harmony import */ var _pages_setup_data_setup_tipe_outlet_setup_tipe_outlet_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./pages/setup-data/setup-tipe-outlet/setup-tipe-outlet.component */ 72854);
/* harmony import */ var _pages_setup_formularium_setup_formularium_setup_formularium_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./pages/setup-formularium/setup-formularium/setup-formularium.component */ 78947);
/* harmony import */ var _pages_transaksi_obat_input_resep_irja_input_resep_irja_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./pages/transaksi-obat/input-resep-irja/input-resep-irja.component */ 71024);
/* harmony import */ var _pages_transaksi_obat_transaksi_obat_irda_transaksi_obat_irda_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./pages/transaksi-obat/transaksi-obat-irda/transaksi-obat-irda.component */ 50037);
/* harmony import */ var _pages_transaksi_obat_transaksi_obat_irja_transaksi_obat_irja_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./pages/transaksi-obat/transaksi-obat-irja/transaksi-obat-irja.component */ 86160);
/* harmony import */ var _pages_transaksi_obat_transaksi_obat_irja_view_resep_irja_view_resep_irja_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./pages/transaksi-obat/transaksi-obat-irja/view-resep-irja/view-resep-irja.component */ 65912);
/* harmony import */ var _pages_transaksi_obat_transaksi_obat_irna_transaksi_obat_irna_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./pages/transaksi-obat/transaksi-obat-irna/transaksi-obat-irna.component */ 82266);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/core */ 35366);


























const pharmacyRoutes = [
    { path: "", component: null, data: { title: "Pharmacy" } },
    { path: "antrian-farmasi", component: _pages_Antrian_antrian_farmasi_antrian_farmasi_component__WEBPACK_IMPORTED_MODULE_0__.AntrianFarmasiComponent, data: { title: "Antrian Pharmacy" } },
    { path: "setup-formularium", component: _pages_setup_formularium_setup_formularium_setup_formularium_component__WEBPACK_IMPORTED_MODULE_17__.SetupFormulariumComponent, data: { title: "Setup Formularium" } },
    { path: "resep-racikan", component: _pages_resep_racikan_resep_racikan_component__WEBPACK_IMPORTED_MODULE_10__.ResepRacikanComponent, data: { title: "Resep Racikan" } },
    {
        path: "setup-data", component: null, data: { title: "Setup Data" },
        children: [
            { path: "setup-tipe-outlet", component: _pages_setup_data_setup_tipe_outlet_setup_tipe_outlet_component__WEBPACK_IMPORTED_MODULE_16__.SetupTipeOutletComponent, data: { title: "Setup Tipe Outlet" } },
            { path: "setup-outlet", component: _pages_setup_data_setup_outlet_setup_outlet_component__WEBPACK_IMPORTED_MODULE_14__.SetupOutletComponent, data: { title: "Setup Outlet" } },
            { path: "setup-grup-obat", component: _pages_setup_data_setup_grup_obat_setup_grup_obat_component__WEBPACK_IMPORTED_MODULE_12__.SetupGrupObatComponent, data: { title: "Setup Grup Obat" } },
            { path: "setup-cara-pakai-obat", component: _pages_setup_data_setup_cara_pakai_obat_setup_cara_pakai_obat_component__WEBPACK_IMPORTED_MODULE_11__.SetupCaraPakaiObatComponent, data: { title: "Setup Cara Pakai Obat" } },
            { path: "setup-rute-pemberian-obat", component: _pages_setup_data_setup_rute_pemberian_obat_setup_rute_pemberian_obat_component__WEBPACK_IMPORTED_MODULE_15__.SetupRutePemberianObatComponent, data: { title: "Setup rute Pemberian Obat" } },
            { path: "setup-label-pemakaian-obat", component: _pages_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_component__WEBPACK_IMPORTED_MODULE_13__.SetupLabelPemakaianObatComponent, data: { title: "Setup Label Pemakaian Obat" } },
        ]
    },
    {
        path: "transaksi-obat", component: null, data: { title: "Transaksi Obat" },
        children: [
            { path: "view-obat-irja/:id/:key", component: _pages_transaksi_obat_transaksi_obat_irja_view_resep_irja_view_resep_irja_component__WEBPACK_IMPORTED_MODULE_21__.ViewResepIrjaComponent, data: { title: "View Resep Rawat Jalan" } },
            { path: "transaksi-obat-irja/:id/:key", component: _pages_transaksi_obat_transaksi_obat_irja_transaksi_obat_irja_component__WEBPACK_IMPORTED_MODULE_20__.TransaksiObatIrjaComponent, data: { title: "Transaksi Obat Rawat Jalan" } },
            { path: "transaksi-obat-irna", component: _pages_transaksi_obat_transaksi_obat_irna_transaksi_obat_irna_component__WEBPACK_IMPORTED_MODULE_22__.TransaksiObatIrnaComponent, data: { title: "Transaksi Obat Rawat Inap" } },
            { path: "transaksi-obat-irda", component: _pages_transaksi_obat_transaksi_obat_irda_transaksi_obat_irda_component__WEBPACK_IMPORTED_MODULE_19__.TransaksiObatIrdaComponent, data: { title: "Transaksi Obat Rawat Darurat" } },
            { path: "input-resep-irja", component: _pages_transaksi_obat_input_resep_irja_input_resep_irja_component__WEBPACK_IMPORTED_MODULE_18__.InputResepIrjaComponent, data: { title: "Input Resep Irja" } },
        ]
    },
    {
        path: "refund-obat", component: null, data: { title: "Refund Obat" },
        children: [
            { path: "refund-obat-irja", component: _pages_refund_obat_refund_obat_irja_refund_obat_irja_component__WEBPACK_IMPORTED_MODULE_6__.RefundObatIrjaComponent, data: { title: "Input Retur Penjualan Obat Rawat Jalan" } },
            { path: "refund-obat-irja-daftar", component: _pages_refund_obat_refund_obat_irja_daftar_refund_obat_irja_daftar_component__WEBPACK_IMPORTED_MODULE_4__.RefundObatIrjaDaftarComponent, data: { title: "Daftar Retur Penjualan Obat Rawat Jalan" } },
            { path: "refund-obat-irja-detail/:id/:key", component: _pages_refund_obat_refund_obat_irja_detail_refund_obat_irja_detail_component__WEBPACK_IMPORTED_MODULE_5__.RefundObatIrjaDetailComponent, data: { title: "Detail Retur Penjualan Obat Rawat Jalan" } },
            { path: "refund-obat-irda", component: _pages_refund_obat_refund_obat_irda_refund_obat_irda_component__WEBPACK_IMPORTED_MODULE_3__.RefundObatIrdaComponent, data: { title: "Input Retur Penjualan Obat Rawat Darurat" } },
            { path: "refund-obat-irda-daftar", component: _pages_refund_obat_refund_obat_irda_daftar_refund_obat_irda_daftar_component__WEBPACK_IMPORTED_MODULE_1__.RefundObatIrdaDaftarComponent, data: { title: "Daftar Retur Penjualan Obat Rawat Darurat" } },
            { path: "refund-obat-irda-detail/:id/:key", component: _pages_refund_obat_refund_obat_irda_detail_refund_obat_irda_detail_component__WEBPACK_IMPORTED_MODULE_2__.RefundObatIrdaDetailComponent, data: { title: "Detail Retur Penjualan Obat Rawat Darurat" } },
            { path: "refund-obat-irna", component: _pages_refund_obat_refund_obat_irna_refund_obat_irna_component__WEBPACK_IMPORTED_MODULE_9__.RefundObatIrnaComponent, data: { title: "Input Retur Penjualan Obat Rawat Inap" } },
            { path: "refund-obat-irna-daftar", component: _pages_refund_obat_refund_obat_irna_daftar_refund_obat_irna_daftar_component__WEBPACK_IMPORTED_MODULE_7__.RefundObatIrnaDaftarComponent, data: { title: "Daftar Retur Penjualan Obat Rawat Inap" } },
            { path: "refund-obat-irna-detail/:id/:key", component: _pages_refund_obat_refund_obat_irna_detail_refund_obat_irna_detail_component__WEBPACK_IMPORTED_MODULE_8__.RefundObatIrnaDetailComponent, data: { title: "Detail Retur Penjualan Obat Rawat Inap" } },
        ]
    },
];
let PharmacyRoutingModule = /*@__PURE__*/ (() => {
    class PharmacyRoutingModule {
    }
    PharmacyRoutingModule.ɵfac = function PharmacyRoutingModule_Factory(t) { return new (t || PharmacyRoutingModule)(); };
    PharmacyRoutingModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵdefineNgModule"]({ type: PharmacyRoutingModule });
    PharmacyRoutingModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵdefineInjector"]({ imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_24__.RouterModule.forChild(pharmacyRoutes)], _angular_router__WEBPACK_IMPORTED_MODULE_24__.RouterModule] });
    return PharmacyRoutingModule;
})();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵsetNgModuleScope"](PharmacyRoutingModule, { imports: [_angular_router__WEBPACK_IMPORTED_MODULE_24__.RouterModule], exports: [_angular_router__WEBPACK_IMPORTED_MODULE_24__.RouterModule] }); })();


/***/ }),

/***/ 12452:
/*!*****************************************************!*\
  !*** ./src/app/modules/Pharmacy/pharmacy.module.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PharmacyModule": () => (/* binding */ PharmacyModule)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @angular/common */ 61116);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @angular/forms */ 31041);
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shared/shared.module */ 94887);
/* harmony import */ var _pages_Antrian_antrian_farmasi_antrian_farmasi_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pages/Antrian/antrian-farmasi/antrian-farmasi.component */ 76985);
/* harmony import */ var _pharmacy_routing_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pharmacy-routing.module */ 60769);
/* harmony import */ var _pages_setup_formularium_setup_formularium_setup_formularium_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/setup-formularium/setup-formularium/setup-formularium.component */ 78947);
/* harmony import */ var _pages_resep_racikan_resep_racikan_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/resep-racikan/resep-racikan.component */ 17788);
/* harmony import */ var _pages_setup_data_setup_tipe_outlet_setup_tipe_outlet_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pages/setup-data/setup-tipe-outlet/setup-tipe-outlet.component */ 72854);
/* harmony import */ var _pages_setup_data_setup_outlet_setup_outlet_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pages/setup-data/setup-outlet/setup-outlet.component */ 49357);
/* harmony import */ var _pages_setup_data_setup_grup_obat_setup_grup_obat_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pages/setup-data/setup-grup-obat/setup-grup-obat.component */ 32973);
/* harmony import */ var _pages_setup_data_setup_cara_pakai_obat_setup_cara_pakai_obat_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./pages/setup-data/setup-cara-pakai-obat/setup-cara-pakai-obat.component */ 42661);
/* harmony import */ var _pages_setup_data_setup_rute_pemberian_obat_setup_rute_pemberian_obat_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./pages/setup-data/setup-rute-pemberian-obat/setup-rute-pemberian-obat.component */ 30939);
/* harmony import */ var _pages_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./pages/setup-data/setup-label-pemakaian-obat/setup-label-pemakaian-obat.component */ 29012);
/* harmony import */ var _pages_setup_formularium_setup_formularium_setup_generik_setup_generik_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./pages/setup-formularium/setup-formularium/setup-generik/setup-generik.component */ 18797);
/* harmony import */ var _pages_transaksi_obat_transaksi_obat_irna_transaksi_obat_irna_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./pages/transaksi-obat/transaksi-obat-irna/transaksi-obat-irna.component */ 82266);
/* harmony import */ var _pages_transaksi_obat_transaksi_obat_irja_transaksi_obat_irja_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./pages/transaksi-obat/transaksi-obat-irja/transaksi-obat-irja.component */ 86160);
/* harmony import */ var _pages_refund_obat_refund_obat_irja_refund_obat_irja_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irja/refund-obat-irja.component */ 74865);
/* harmony import */ var _pages_refund_obat_refund_obat_irna_refund_obat_irna_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irna/refund-obat-irna.component */ 56059);
/* harmony import */ var _pages_transaksi_obat_transaksi_obat_irja_view_resep_irja_view_resep_irja_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./pages/transaksi-obat/transaksi-obat-irja/view-resep-irja/view-resep-irja.component */ 65912);
/* harmony import */ var _pages_transaksi_obat_input_resep_irja_input_resep_irja_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./pages/transaksi-obat/input-resep-irja/input-resep-irja.component */ 71024);
/* harmony import */ var _pages_transaksi_obat_transaksi_obat_irda_transaksi_obat_irda_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./pages/transaksi-obat/transaksi-obat-irda/transaksi-obat-irda.component */ 50037);
/* harmony import */ var _pages_refund_obat_refund_obat_irja_daftar_refund_obat_irja_daftar_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irja-daftar/refund-obat-irja-daftar.component */ 18175);
/* harmony import */ var _pages_refund_obat_refund_obat_irja_detail_refund_obat_irja_detail_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irja-detail/refund-obat-irja-detail.component */ 37032);
/* harmony import */ var _pages_refund_obat_refund_obat_irda_refund_obat_irda_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irda/refund-obat-irda.component */ 68425);
/* harmony import */ var _pages_refund_obat_refund_obat_irda_daftar_refund_obat_irda_daftar_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irda-daftar/refund-obat-irda-daftar.component */ 90554);
/* harmony import */ var _pages_refund_obat_refund_obat_irda_detail_refund_obat_irda_detail_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irda-detail/refund-obat-irda-detail.component */ 27286);
/* harmony import */ var _pages_refund_obat_refund_obat_irna_daftar_refund_obat_irna_daftar_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irna-daftar/refund-obat-irna-daftar.component */ 83043);
/* harmony import */ var _pages_refund_obat_refund_obat_irna_detail_refund_obat_irna_detail_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./pages/refund-obat/refund-obat-irna-detail/refund-obat-irna-detail.component */ 83033);
/* harmony import */ var ngx_socket_io__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ngx-socket-io */ 36212);
/* harmony import */ var src_environments_environment__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! src/environments/environment */ 529);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @angular/core */ 35366);
































const SocketFarmasi = {
    url: `${src_environments_environment__WEBPACK_IMPORTED_MODULE_26__.environment.webApiSocket}`, options: {
        "force new connection": true,
        "reconnectionAttempts": "Infinity",
        "timeout": 10000,
        "transports": ["websocket"]
    }
};
let PharmacyModule = /*@__PURE__*/ (() => {
    class PharmacyModule {
    }
    PharmacyModule.ɵfac = function PharmacyModule_Factory(t) { return new (t || PharmacyModule)(); };
    PharmacyModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_27__["ɵɵdefineNgModule"]({ type: PharmacyModule });
    PharmacyModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_27__["ɵɵdefineInjector"]({ imports: [[
                _angular_common__WEBPACK_IMPORTED_MODULE_28__.CommonModule,
                _angular_forms__WEBPACK_IMPORTED_MODULE_29__.FormsModule,
                _angular_forms__WEBPACK_IMPORTED_MODULE_29__.ReactiveFormsModule,
                _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__.SharedModule,
                _pharmacy_routing_module__WEBPACK_IMPORTED_MODULE_2__.PharmacyRoutingModule,
                ngx_socket_io__WEBPACK_IMPORTED_MODULE_30__.SocketIoModule.forRoot(SocketFarmasi)
            ]] });
    return PharmacyModule;
})();
(function () {
    (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_27__["ɵɵsetNgModuleScope"](PharmacyModule, { declarations: [_pages_Antrian_antrian_farmasi_antrian_farmasi_component__WEBPACK_IMPORTED_MODULE_1__.AntrianFarmasiComponent,
            _pages_setup_formularium_setup_formularium_setup_formularium_component__WEBPACK_IMPORTED_MODULE_3__.SetupFormulariumComponent,
            _pages_resep_racikan_resep_racikan_component__WEBPACK_IMPORTED_MODULE_4__.ResepRacikanComponent,
            _pages_setup_data_setup_tipe_outlet_setup_tipe_outlet_component__WEBPACK_IMPORTED_MODULE_5__.SetupTipeOutletComponent,
            _pages_setup_data_setup_outlet_setup_outlet_component__WEBPACK_IMPORTED_MODULE_6__.SetupOutletComponent,
            _pages_setup_data_setup_grup_obat_setup_grup_obat_component__WEBPACK_IMPORTED_MODULE_7__.SetupGrupObatComponent,
            _pages_setup_data_setup_cara_pakai_obat_setup_cara_pakai_obat_component__WEBPACK_IMPORTED_MODULE_8__.SetupCaraPakaiObatComponent,
            _pages_setup_data_setup_rute_pemberian_obat_setup_rute_pemberian_obat_component__WEBPACK_IMPORTED_MODULE_9__.SetupRutePemberianObatComponent,
            _pages_setup_data_setup_label_pemakaian_obat_setup_label_pemakaian_obat_component__WEBPACK_IMPORTED_MODULE_10__.SetupLabelPemakaianObatComponent,
            _pages_setup_formularium_setup_formularium_setup_generik_setup_generik_component__WEBPACK_IMPORTED_MODULE_11__.SetupGenerikComponent,
            _pages_transaksi_obat_transaksi_obat_irna_transaksi_obat_irna_component__WEBPACK_IMPORTED_MODULE_12__.TransaksiObatIrnaComponent,
            _pages_transaksi_obat_transaksi_obat_irja_transaksi_obat_irja_component__WEBPACK_IMPORTED_MODULE_13__.TransaksiObatIrjaComponent,
            _pages_refund_obat_refund_obat_irja_refund_obat_irja_component__WEBPACK_IMPORTED_MODULE_14__.RefundObatIrjaComponent,
            _pages_refund_obat_refund_obat_irna_refund_obat_irna_component__WEBPACK_IMPORTED_MODULE_15__.RefundObatIrnaComponent,
            _pages_transaksi_obat_transaksi_obat_irja_view_resep_irja_view_resep_irja_component__WEBPACK_IMPORTED_MODULE_16__.ViewResepIrjaComponent,
            _pages_transaksi_obat_input_resep_irja_input_resep_irja_component__WEBPACK_IMPORTED_MODULE_17__.InputResepIrjaComponent,
            _pages_transaksi_obat_transaksi_obat_irda_transaksi_obat_irda_component__WEBPACK_IMPORTED_MODULE_18__.TransaksiObatIrdaComponent,
            _pages_refund_obat_refund_obat_irja_daftar_refund_obat_irja_daftar_component__WEBPACK_IMPORTED_MODULE_19__.RefundObatIrjaDaftarComponent,
            _pages_refund_obat_refund_obat_irja_detail_refund_obat_irja_detail_component__WEBPACK_IMPORTED_MODULE_20__.RefundObatIrjaDetailComponent,
            _pages_refund_obat_refund_obat_irda_refund_obat_irda_component__WEBPACK_IMPORTED_MODULE_21__.RefundObatIrdaComponent,
            _pages_refund_obat_refund_obat_irda_daftar_refund_obat_irda_daftar_component__WEBPACK_IMPORTED_MODULE_22__.RefundObatIrdaDaftarComponent,
            _pages_refund_obat_refund_obat_irda_detail_refund_obat_irda_detail_component__WEBPACK_IMPORTED_MODULE_23__.RefundObatIrdaDetailComponent,
            _pages_refund_obat_refund_obat_irna_daftar_refund_obat_irna_daftar_component__WEBPACK_IMPORTED_MODULE_24__.RefundObatIrnaDaftarComponent,
            _pages_refund_obat_refund_obat_irna_detail_refund_obat_irna_detail_component__WEBPACK_IMPORTED_MODULE_25__.RefundObatIrnaDetailComponent], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_28__.CommonModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_29__.FormsModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_29__.ReactiveFormsModule,
            _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__.SharedModule,
            _pharmacy_routing_module__WEBPACK_IMPORTED_MODULE_2__.PharmacyRoutingModule, ngx_socket_io__WEBPACK_IMPORTED_MODULE_30__.SocketIoModule] });
})();


/***/ }),

/***/ 43795:
/*!******************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/services/formularium/setup-formularium/setup-formularium.service.ts ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupFormulariumService": () => (/* binding */ SetupFormulariumService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 47727);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 3393);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 27369);






let SetupFormulariumService = /*@__PURE__*/ (() => {
    class SetupFormulariumService {
        constructor(notificationService, httpOperationService) {
            this.notificationService = notificationService;
            this.httpOperationService = httpOperationService;
            this.API = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.FORMULARIUM.SETUP_FORMULARIUM;
            this.dataSource = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
        }
        /**
        * Service Untuk Mengisi dataScource
        * @setDataSource Void
        */
        setDataSource(id_generik) {
            this.onGetAll(id_generik).subscribe((result) => {
                this.dataSource.next(result.data);
            });
        }
        /**
         * Service Untuk Menampilkan Semua data
         * @onGetAll Observable<SetupPabrikModel>
        */
        onGetAll(id_generik) {
            return this.httpOperationService.defaultGetRequest(this.API.GET_BY_ID_GENERIK + '/' + id_generik);
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPostSave Observable<any>
         * @param ISetupPabrikModel
        */
        onPostSave(Data) {
            return this.httpOperationService.defaultPostRequest(this.API.INSERT, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPutEdit Observable<any>
         * @param ISetupPabrikModel
        */
        onPutEdit(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service menubah data menjadi active
         * @onPutToActive Observable<any>
         * @param ISetupPabrikModel
        */
        onPutToActive(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATETOACTIVE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk mwngubah data menjadi tidak aktif
         * @onPutToDeActive Observable<any>
         * @param ISetupPabrikModel
        */
        onPutToDeActive(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATETODEACTIVE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
    }
    SetupFormulariumService.ɵfac = function SetupFormulariumService_Factory(t) { return new (t || SetupFormulariumService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
    SetupFormulariumService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: SetupFormulariumService, factory: SetupFormulariumService.ɵfac, providedIn: 'root' });
    return SetupFormulariumService;
})();


/***/ }),

/***/ 64169:
/*!**********************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/services/formularium/setup-generik/setup-generik.service.ts ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupGenerikService": () => (/* binding */ SetupGenerikService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 47727);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 3393);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 27369);






let SetupGenerikService = /*@__PURE__*/ (() => {
    class SetupGenerikService {
        constructor(notificationService, httpOperationService) {
            this.notificationService = notificationService;
            this.httpOperationService = httpOperationService;
            this.API = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.FORMULARIUM.SETUP_GENERIK;
            this.dataSource = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
        }
        /**
        * Service Untuk Mengisi dataScource
        * @setDataSource Void
        */
        setDataSource() {
            this.onGetAll().subscribe((result) => {
                this.dataSource.next(result.data);
            });
        }
        /**
         * Service Untuk Menampilkan Semua data
         * @onGetAll Observable<SetupPabrikModel>
        */
        onGetAll() {
            return this.httpOperationService.defaultGetRequest(this.API.GET_ALL);
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPostSave Observable<any>
         * @param ISetupPabrikModel
        */
        onPostSave(Data) {
            return this.httpOperationService.defaultPostRequest(this.API.INSERT, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPutEdit Observable<any>
         * @param ISetupPabrikModel
        */
        onPutEdit(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service menubah data menjadi active
         * @onPutToActive Observable<any>
         * @param ISetupPabrikModel
        */
        onPutToActive(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATETOACTIVE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk mwngubah data menjadi tidak aktif
         * @onPutToDeActive Observable<any>
         * @param ISetupPabrikModel
        */
        onPutToDeActive(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATETODEACTIVE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
    }
    SetupGenerikService.ɵfac = function SetupGenerikService_Factory(t) { return new (t || SetupGenerikService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
    SetupGenerikService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: SetupGenerikService, factory: SetupGenerikService.ɵfac, providedIn: 'root' });
    return SetupGenerikService;
})();


/***/ }),

/***/ 30722:
/*!******************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/services/formularium/setup-jenis-formularium/setup-jenis-formularium.service.ts ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupJenisFormulariumService": () => (/* binding */ SetupJenisFormulariumService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 47727);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 3393);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 27369);






let SetupJenisFormulariumService = /*@__PURE__*/ (() => {
    class SetupJenisFormulariumService {
        constructor(notificationService, httpOperationService) {
            this.notificationService = notificationService;
            this.httpOperationService = httpOperationService;
            this.API = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.FORMULARIUM.SETUP_JENIS_FORMULARIUM;
            this.dataSource = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
        }
        /**
        * Service Untuk Mengisi dataScource
        * @setDataSource Void
        */
        setDataSource() {
            this.onGetAll().subscribe((result) => {
                this.dataSource.next(result.data);
            });
        }
        /**
         * Service Untuk Menampilkan Semua data
         * @onGetAll Observable<SetupPabrikModel>
        */
        onGetAll() {
            return this.httpOperationService.defaultGetRequest(this.API.GET_ALL);
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPostSave Observable<any>
         * @param ISetupPabrikModel
        */
        onPostSave(Data) {
            return this.httpOperationService.defaultPostRequest(this.API.INSERT, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPutEdit Observable<any>
         * @param ISetupPabrikModel
        */
        onPutEdit(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service menubah data menjadi active
         * @onPutToActive Observable<any>
         * @param ISetupPabrikModel
        */
        onPutToActive(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATETOACTIVE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk mwngubah data menjadi tidak aktif
         * @onPutToDeActive Observable<any>
         * @param ISetupPabrikModel
        */
        onPutToDeActive(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATETODEACTIVE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
    }
    SetupJenisFormulariumService.ɵfac = function SetupJenisFormulariumService_Factory(t) { return new (t || SetupJenisFormulariumService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
    SetupJenisFormulariumService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: SetupJenisFormulariumService, factory: SetupJenisFormulariumService.ɵfac, providedIn: 'root' });
    return SetupJenisFormulariumService;
})();


/***/ }),

/***/ 56846:
/*!********************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/services/formularium/setup-parameter-maksimal/setup-parameter-maksimal.service.ts ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupParameterMaksimalService": () => (/* binding */ SetupParameterMaksimalService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 47727);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 3393);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 27369);






let SetupParameterMaksimalService = /*@__PURE__*/ (() => {
    class SetupParameterMaksimalService {
        constructor(notificationService, httpOperationService) {
            this.notificationService = notificationService;
            this.httpOperationService = httpOperationService;
            this.API = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.FORMULARIUM.SETUP_PARAMETER_MAKSIMAL;
            this.dataSource = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
        }
        /**
        * Service Untuk Mengisi dataScource
        * @setDataSource Void
        */
        setDataSource() {
            this.onGetAll().subscribe((result) => {
                this.dataSource.next(result.data);
            });
        }
        /**
         * Service Untuk Menampilkan Semua data
         * @onGetAll Observable<SetupPabrikModel>
        */
        onGetAll() {
            return this.httpOperationService.defaultGetRequest(this.API.GET_ALL);
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPostSave Observable<any>
         * @param ISetupPabrikModel
        */
        onPostSave(Data) {
            return this.httpOperationService.defaultPostRequest(this.API.INSERT, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPutEdit Observable<any>
         * @param ISetupPabrikModel
        */
        onPutEdit(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service menubah data menjadi active
         * @onPutToActive Observable<any>
         * @param ISetupPabrikModel
        */
        onPutToActive(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATETOACTIVE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk mwngubah data menjadi tidak aktif
         * @onPutToDeActive Observable<any>
         * @param ISetupPabrikModel
        */
        onPutToDeActive(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATETODEACTIVE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
    }
    SetupParameterMaksimalService.ɵfac = function SetupParameterMaksimalService_Factory(t) { return new (t || SetupParameterMaksimalService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
    SetupParameterMaksimalService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: SetupParameterMaksimalService, factory: SetupParameterMaksimalService.ɵfac, providedIn: 'root' });
    return SetupParameterMaksimalService;
})();


/***/ }),

/***/ 55337:
/*!********************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/services/formularium/setup-peresepan-maksimal/setup-peresepan-maksimal.service.ts ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupPeresepanMaksimalService": () => (/* binding */ SetupPeresepanMaksimalService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 47727);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 3393);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 27369);






let SetupPeresepanMaksimalService = /*@__PURE__*/ (() => {
    class SetupPeresepanMaksimalService {
        constructor(notificationService, httpOperationService) {
            this.notificationService = notificationService;
            this.httpOperationService = httpOperationService;
            this.API = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.FORMULARIUM.SETUP_PERESEPAN_MAKSIMAL;
            this.dataSource = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
        }
        /**
        * Service Untuk Mengisi dataScource
        * @setDataSource Void
        */
        setDataSource() {
            this.onGetAll().subscribe((result) => {
                this.dataSource.next(result.data);
            });
        }
        /**
         * Service Untuk Menampilkan Semua data
         * @onGetAll Observable<SetupPabrikModel>
        */
        onGetAll() {
            return this.httpOperationService.defaultGetRequest(this.API.GET_ALL);
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPostSave Observable<any>
         * @param ISetupPabrikModel
        */
        onPostSave(Data) {
            return this.httpOperationService.defaultPostRequest(this.API.INSERT, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPutEdit Observable<any>
         * @param ISetupPabrikModel
        */
        onPutEdit(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service menubah data menjadi active
         * @onPutToActive Observable<any>
         * @param ISetupPabrikModel
        */
        onPutToActive(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATETOACTIVE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk mwngubah data menjadi tidak aktif
         * @onPutToDeActive Observable<any>
         * @param ISetupPabrikModel
        */
        onPutToDeActive(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATETODEACTIVE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
    }
    SetupPeresepanMaksimalService.ɵfac = function SetupPeresepanMaksimalService_Factory(t) { return new (t || SetupPeresepanMaksimalService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
    SetupPeresepanMaksimalService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: SetupPeresepanMaksimalService, factory: SetupPeresepanMaksimalService.ɵfac, providedIn: 'root' });
    return SetupPeresepanMaksimalService;
})();


/***/ }),

/***/ 95044:
/*!********************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/services/formularium/setup-sediaan-obat/setup-sediaan-obat.service.ts ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupSediaanObatService": () => (/* binding */ SetupSediaanObatService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 47727);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 3393);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 27369);






let SetupSediaanObatService = /*@__PURE__*/ (() => {
    class SetupSediaanObatService {
        constructor(notificationService, httpOperationService) {
            this.notificationService = notificationService;
            this.httpOperationService = httpOperationService;
            this.API = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.FORMULARIUM.SETUP_SEDIAAN_OBAT;
            this.dataSource = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
        }
        /**
        * Service Untuk Mengisi dataScource
        * @setDataSource Void
        */
        setDataSource() {
            this.onGetAll().subscribe((result) => {
                this.dataSource.next(result.data);
            });
        }
        /**
         * Service Untuk Menampilkan Semua data
         * @onGetAll Observable<SetupPabrikModel>
        */
        onGetAll() {
            return this.httpOperationService.defaultGetRequest(this.API.GET_ALL);
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPostSave Observable<any>
         * @param ISetupPabrikModel
        */
        onPostSave(Data) {
            return this.httpOperationService.defaultPostRequest(this.API.INSERT, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPutEdit Observable<any>
         * @param ISetupPabrikModel
        */
        onPutEdit(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service menubah data menjadi active
         * @onPutToActive Observable<any>
         * @param ISetupPabrikModel
        */
        onPutToActive(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATETOACTIVE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk mwngubah data menjadi tidak aktif
         * @onPutToDeActive Observable<any>
         * @param ISetupPabrikModel
        */
        onPutToDeActive(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATETODEACTIVE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
    }
    SetupSediaanObatService.ɵfac = function SetupSediaanObatService_Factory(t) { return new (t || SetupSediaanObatService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
    SetupSediaanObatService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: SetupSediaanObatService, factory: SetupSediaanObatService.ɵfac, providedIn: 'root' });
    return SetupSediaanObatService;
})();


/***/ }),

/***/ 62808:
/*!************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/services/formularium/setup-terapi-generik/setup-terapi-generik.service.ts ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupTerapiGenerikService": () => (/* binding */ SetupTerapiGenerikService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 47727);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 3393);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 27369);






let SetupTerapiGenerikService = /*@__PURE__*/ (() => {
    class SetupTerapiGenerikService {
        constructor(notificationService, httpOperationService) {
            this.notificationService = notificationService;
            this.httpOperationService = httpOperationService;
            this.API = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.FORMULARIUM.SETUP_TERAPI_GENERIK;
            this.dataSource = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
        }
        /**
        * Service Untuk Mengisi dataScource
        * @setDataSource Void
        */
        setDataSource(id_terapi) {
            this.onGetAll(id_terapi).subscribe((result) => {
                this.dataSource.next(result.data);
            });
        }
        /**
         * Service Untuk Menampilkan Semua data
         * @onGetAll Observable<SetupPabrikModel>
        */
        onGetAll(id_terapi) {
            return this.httpOperationService.defaultGetRequest(this.API.GET_BY_ID_TERAPI + '/' + id_terapi);
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPostSave Observable<any>
         * @param ISetupPabrikModel
        */
        onPostSave(Data) {
            return this.httpOperationService.defaultPostRequest(this.API.INSERT, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPutEdit Observable<any>
         * @param ISetupPabrikModel
        */
        onPutEdit(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service menubah data menjadi active
         * @onPutToActive Observable<any>
         * @param ISetupPabrikModel
        */
        onPutToActive(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATETOACTIVE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk mwngubah data menjadi tidak aktif
         * @onPutToDeActive Observable<any>
         * @param ISetupPabrikModel
        */
        onPutToDeActive(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATETODEACTIVE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
    }
    SetupTerapiGenerikService.ɵfac = function SetupTerapiGenerikService_Factory(t) { return new (t || SetupTerapiGenerikService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
    SetupTerapiGenerikService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: SetupTerapiGenerikService, factory: SetupTerapiGenerikService.ɵfac, providedIn: 'root' });
    return SetupTerapiGenerikService;
})();


/***/ }),

/***/ 88815:
/*!********************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/services/formularium/setup-terapi/setup-terapi.service.ts ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupTerapiService": () => (/* binding */ SetupTerapiService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 47727);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 3393);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 27369);






let SetupTerapiService = /*@__PURE__*/ (() => {
    class SetupTerapiService {
        constructor(notificationService, httpOperationService) {
            this.notificationService = notificationService;
            this.httpOperationService = httpOperationService;
            this.API = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.FORMULARIUM.SETUP_TERAPI;
            this.dataSource = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
        }
        /**
        * Service Untuk Mengisi dataScource
        * @setDataSource Void
        */
        setDataSource() {
            this.onGetAll().subscribe((result) => {
                this.dataSource.next(result.data);
            });
        }
        /**
         * Service Untuk Menampilkan Semua data
         * @onGetAll Observable<SetupPabrikModel>
        */
        onGetAll() {
            return this.httpOperationService.defaultGetRequest(this.API.GET_ALL);
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPostSave Observable<any>
         * @param ISetupPabrikModel
        */
        onPostSave(Data) {
            console.log(this.API);
            return this.httpOperationService.defaultPostRequest(this.API.INSERT, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPutEdit Observable<any>
         * @param ISetupPabrikModel
        */
        onPutEdit(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service menubah data menjadi active
         * @onPutToActive Observable<any>
         * @param ISetupPabrikModel
        */
        onPutToActive(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATETOACTIVE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk mwngubah data menjadi tidak aktif
         * @onPutToDeActive Observable<any>
         * @param ISetupPabrikModel
        */
        onPutToDeActive(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATETODEACTIVE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
    }
    SetupTerapiService.ɵfac = function SetupTerapiService_Factory(t) { return new (t || SetupTerapiService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
    SetupTerapiService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: SetupTerapiService, factory: SetupTerapiService.ɵfac, providedIn: 'root' });
    return SetupTerapiService;
})();


/***/ }),

/***/ 96861:
/*!****************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/services/refund-obat/refund-obat-irda/refund-obat-irda.service.ts ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RefundObatIrdaService": () => (/* binding */ RefundObatIrdaService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 47727);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 3393);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 27369);






let RefundObatIrdaService = /*@__PURE__*/ (() => {
    class RefundObatIrdaService {
        constructor(notificationService, httpOperationService) {
            this.notificationService = notificationService;
            this.httpOperationService = httpOperationService;
            this.API = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RETUR_PENJUALAN.RETUR_PENJUALAN_OBAT_IRDA;
            this.dataSource = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
            this.dataTransaksiObat = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
            this._dataDetail = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
            this.dataDetail$ = this._dataDetail.asObservable();
            this.sub_total_1 = 0;
            this.total_disc = 0;
            this.sub_total_2 = 0;
            this.total_tax = 0;
            this.total_transaksi = 0;
            this.jumlah_item = 0;
        }
        get dataDetail() {
            return this._dataDetail.getValue();
        }
        set dataDetail(val) {
            this._dataDetail.next(val);
        }
        /**
         * Service Untuk Menampilkan Semua data
         * @onGetAll Observable<SetupPabrikModel>
         */
        // onGetAll(): Observable<any> {
        //     return this.httpOperationService.defaultGetRequest(this.API.GET_ALL);
        // }
        onInitList() {
            this.dataSource.next([]);
        }
        /**
         * Service Untuk Menampilkan data header berdasarkan Id
         * @onGetAll Observable<SetupPabrikModel>
         */
        onGetById(Id) {
            return this.httpOperationService.defaultGetRequest(this.API.GET_BY_ID + '/' + Id);
        }
        getDetailPenjualan(id_outlet, id_register) {
            return this.httpOperationService.defaultGetRequest(this.API.GET_DETAIL_PENJUALAN_BY_ID_REGISTER + '/' + id_outlet + '/' + id_register);
        }
        /**
    
         * Service Untuk Menampilkan data berdasarkan dinamik filter
         * @onGetAll Observable<Model>
         */
        onGetAllByParams(req) {
            return this.httpOperationService.defaultPostRequestByDynamicFilter(this.API.GET_ALL_BY_PARAMS, req).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        onGetDataTransaksiObat(req) {
            this.httpOperationService.defaultPostRequestByDynamicFilter(this.API.GET_ALL_PENJUALAN_BELUM_TERBAYAR, req).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            })).subscribe((result) => {
                this.dataTransaksiObat.next(result.data);
            });
        }
        getDetail(id) {
            return this.httpOperationService.defaultGetRequest(this.API.GET_DETAIL_PENJUALAN_BY_HEADER_ID + '/' + id);
        }
        /**
         * Service Untuk Menampilkan data berdasarkan dinamik filter
         * @onGetAll Void
         */
        onGetAllByParamsSource(req) {
            this.onGetAllByParams(req).subscribe((result) => {
                if (result) {
                    this.dataSource.next(result.data);
                }
            });
        }
        /**
         * Service Untuk Menampilkan data detail Item
         * @setDetail Void
         */
        setDetail(id) {
            this.httpOperationService.defaultGetRequest(this.API.GET_DETAIL_BY_ID + '/' + id).subscribe((result) => {
                this.dataDetail = result.data;
            });
        }
        addDataDetail(detail) {
            this.dataDetail = [
                ...this.dataDetail,
                detail
            ];
            this.sum();
        }
        updateFromInline(index, data, rowData) {
            this.dataDetail[index] = data;
            this.sum();
        }
        removeDataDetail(index) {
            this.dataDetail.splice(index, 1);
            this.sum();
        }
        editBanyak(index, banyak) {
            this.dataDetail[index].qty_retur_penjualan_obat = banyak;
        }
        sum() {
            this.total_transaksi = 0;
            this.jumlah_item = this.dataDetail.sum('qty_retur_penjualan_obat');
        }
        Insert(Data) {
            return this.httpOperationService.defaultPostRequest(this.API.INSERT, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        validasiPersetujuan(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.INSERT, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        Reset() {
            this.dataTransaksiObat.next([]);
        }
        getSatuanDetail(id_item) {
            // let index = this.dataDetail.map((item) => { return item.id_item }).indexOf(id_item);
            // return this.dataDetail[index].satuans;
        }
        Validation(id) {
            return this.httpOperationService.defaultPutRequest(this.API.VALIDASI, { retur_penjualan_obat_id: id })
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        Cancel(id, reason) {
            return this.httpOperationService.defaultPutRequest(this.API.CANCEL, {
                retur_penjualan_obat_id: id,
                reason_canceled: reason
            })
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
    }
    RefundObatIrdaService.ɵfac = function RefundObatIrdaService_Factory(t) { return new (t || RefundObatIrdaService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
    RefundObatIrdaService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: RefundObatIrdaService, factory: RefundObatIrdaService.ɵfac, providedIn: 'root' });
    return RefundObatIrdaService;
})();


/***/ }),

/***/ 58446:
/*!****************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/services/refund-obat/refund-obat-irja/refund-obat-irja.service.ts ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RefundObatIrjaService": () => (/* binding */ RefundObatIrjaService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 47727);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 3393);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 27369);






let RefundObatIrjaService = /*@__PURE__*/ (() => {
    class RefundObatIrjaService {
        constructor(notificationService, httpOperationService) {
            this.notificationService = notificationService;
            this.httpOperationService = httpOperationService;
            this.API = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RETUR_PENJUALAN.RETUR_PENJUALAN_OBAT_IRJA;
            this.dataSource = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
            this.dataTransaksiObat = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
            this._dataDetail = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
            this.dataDetail$ = this._dataDetail.asObservable();
            this.sub_total_1 = 0;
            this.total_disc = 0;
            this.sub_total_2 = 0;
            this.total_tax = 0;
            this.total_transaksi = 0;
            this.jumlah_item = 0;
        }
        get dataDetail() {
            return this._dataDetail.getValue();
        }
        set dataDetail(val) {
            this._dataDetail.next(val);
        }
        /**
         * Service Untuk Menampilkan Semua data
         * @onGetAll Observable<SetupPabrikModel>
         */
        // onGetAll(): Observable<any> {
        //     return this.httpOperationService.defaultGetRequest(this.API.GET_ALL);
        // }
        onInitList() {
            this.dataSource.next([]);
        }
        /**
         * Service Untuk Menampilkan data header berdasarkan Id
         * @onGetAll Observable<SetupPabrikModel>
         */
        onGetById(Id) {
            return this.httpOperationService.defaultGetRequest(this.API.GET_BY_ID + '/' + Id);
        }
        /**
         * Service Untuk Menampilkan data berdasarkan dinamik filter
         * @onGetAll Observable<Model>
         */
        onGetAllByParams(req) {
            return this.httpOperationService.defaultPostRequestByDynamicFilter(this.API.GET_ALL_BY_PARAMS, req).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        onGetDataTransaksiObat(req) {
            this.httpOperationService.defaultPostRequestByDynamicFilter(this.API.GET_ALL_PENJUALAN_BELUM_TERBAYAR, req).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            })).subscribe((result) => {
                this.dataTransaksiObat.next(result.data);
            });
        }
        getDetail(id) {
            return this.httpOperationService.defaultGetRequest(this.API.GET_DETAIL_PENJUALAN_BY_HEADER_ID + '/' + id);
        }
        /**
         * Service Untuk Menampilkan data berdasarkan dinamik filter
         * @onGetAll Void
         */
        onGetAllByParamsSource(req) {
            this.onGetAllByParams(req).subscribe((result) => {
                if (result) {
                    this.dataSource.next(result.data);
                }
            });
        }
        /**
         * Service Untuk Menampilkan data detail Item
         * @setDetail Void
         */
        setDetail(id) {
            this.httpOperationService.defaultGetRequest(this.API.GET_DETAIL_BY_ID + '/' + id).subscribe((result) => {
                this.dataDetail = result.data;
            });
        }
        addDataDetail(detail) {
            this.dataDetail = [
                ...this.dataDetail,
                detail
            ];
            this.sum();
        }
        updateFromInline(index, data, rowData) {
            this.dataDetail[index] = data;
            this.sum();
        }
        removeDataDetail(index) {
            this.dataDetail.splice(index, 1);
            this.sum();
        }
        editBanyak(index, banyak) {
            this.dataDetail[index].qty_retur_penjualan_obat = banyak;
        }
        sum() {
            this.total_transaksi = 0;
            this.jumlah_item = this.dataDetail.sum('qty_retur_penjualan_obat');
        }
        Insert(Data) {
            return this.httpOperationService.defaultPostRequest(this.API.INSERT, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        validasiPersetujuan(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.INSERT, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        Reset() {
            this.dataTransaksiObat.next([]);
        }
        getSatuanDetail(id_item) {
            // let index = this.dataDetail.map((item) => { return item.id_item }).indexOf(id_item);
            // return this.dataDetail[index].satuans;
        }
        Validation(id) {
            return this.httpOperationService.defaultPutRequest(this.API.VALIDASI, { retur_penjualan_obat_id: id })
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        Cancel(id, reason) {
            return this.httpOperationService.defaultPutRequest(this.API.CANCEL, {
                retur_penjualan_obat_id: id,
                reason_canceled: reason
            })
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
    }
    RefundObatIrjaService.ɵfac = function RefundObatIrjaService_Factory(t) { return new (t || RefundObatIrjaService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
    RefundObatIrjaService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: RefundObatIrjaService, factory: RefundObatIrjaService.ɵfac, providedIn: 'root' });
    return RefundObatIrjaService;
})();


/***/ }),

/***/ 73940:
/*!****************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/services/refund-obat/refund-obat-irna/refund-obat-irna.service.ts ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RefundObatIrnaService": () => (/* binding */ RefundObatIrnaService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 47727);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 3393);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 27369);






let RefundObatIrnaService = /*@__PURE__*/ (() => {
    class RefundObatIrnaService {
        constructor(notificationService, httpOperationService) {
            this.notificationService = notificationService;
            this.httpOperationService = httpOperationService;
            this.API = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.RETUR_PENJUALAN.RETUR_PENJUALAN_OBAT_IRNA;
            this.dataSource = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
            this.dataTransaksiObat = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
            this._dataDetail = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
            this.dataDetail$ = this._dataDetail.asObservable();
            this.sub_total_1 = 0;
            this.total_disc = 0;
            this.sub_total_2 = 0;
            this.total_tax = 0;
            this.total_transaksi = 0;
            this.jumlah_item = 0;
        }
        get dataDetail() {
            return this._dataDetail.getValue();
        }
        set dataDetail(val) {
            this._dataDetail.next(val);
        }
        /**
         * Service Untuk Menampilkan Semua data
         * @onGetAll Observable<SetupPabrikModel>
         */
        // onGetAll(): Observable<any> {
        //     return this.httpOperationService.defaultGetRequest(this.API.GET_ALL);
        // }
        onInitList() {
            this.dataSource.next([]);
        }
        /**
         * Service Untuk Menampilkan data header berdasarkan Id
         * @onGetAll Observable<SetupPabrikModel>
         */
        onGetById(Id) {
            return this.httpOperationService.defaultGetRequest(this.API.GET_BY_ID + '/' + Id);
        }
        getDetailPenjualan(id_outlet, id_register) {
            return this.httpOperationService.defaultGetRequest(this.API.GET_DETAIL_PENJUALAN_BY_ID_REGISTER + '/' + id_outlet + '/' + id_register);
        }
        /**
      
         * Service Untuk Menampilkan data berdasarkan dinamik filter
         * @onGetAll Observable<Model>
         */
        onGetAllByParams(req) {
            return this.httpOperationService.defaultPostRequestByDynamicFilter(this.API.GET_ALL_BY_PARAMS, req).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        onGetDataTransaksiObat(req) {
            this.httpOperationService.defaultPostRequestByDynamicFilter(this.API.GET_ALL_PENJUALAN_BELUM_TERBAYAR, req).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            })).subscribe((result) => {
                this.dataTransaksiObat.next(result.data);
            });
        }
        getDetail(id) {
            return this.httpOperationService.defaultGetRequest(this.API.GET_DETAIL_PENJUALAN_BY_HEADER_ID + '/' + id);
        }
        /**
         * Service Untuk Menampilkan data berdasarkan dinamik filter
         * @onGetAll Void
         */
        onGetAllByParamsSource(req) {
            this.onGetAllByParams(req).subscribe((result) => {
                if (result) {
                    this.dataSource.next(result.data);
                }
            });
        }
        /**
         * Service Untuk Menampilkan data detail Item
         * @setDetail Void
         */
        setDetail(id) {
            this.httpOperationService.defaultGetRequest(this.API.GET_DETAIL_BY_ID + '/' + id).subscribe((result) => {
                this.dataDetail = result.data;
            });
        }
        addDataDetail(detail) {
            this.dataDetail = [
                ...this.dataDetail,
                detail
            ];
            this.sum();
        }
        updateFromInline(index, data, rowData) {
            this.dataDetail[index] = data;
            this.sum();
        }
        removeDataDetail(index) {
            this.dataDetail.splice(index, 1);
            this.sum();
        }
        editBanyak(index, banyak) {
            this.dataDetail[index].qty_retur_penjualan_obat = banyak;
        }
        sum() {
            this.total_transaksi = 0;
            this.jumlah_item = this.dataDetail.sum('qty_retur_penjualan_obat');
        }
        Insert(Data) {
            return this.httpOperationService.defaultPostRequest(this.API.INSERT, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        validasiPersetujuan(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.INSERT, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        Reset() {
            this.dataTransaksiObat.next([]);
        }
        getSatuanDetail(id_item) {
            // let index = this.dataDetail.map((item) => { return item.id_item }).indexOf(id_item);
            // return this.dataDetail[index].satuans;
        }
        Validation(id) {
            return this.httpOperationService.defaultPutRequest(this.API.VALIDASI, { retur_penjualan_obat_id: id })
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        Cancel(id, reason) {
            return this.httpOperationService.defaultPutRequest(this.API.CANCEL, {
                retur_penjualan_obat_id: id,
                reason_canceled: reason
            })
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
    }
    RefundObatIrnaService.ɵfac = function RefundObatIrnaService_Factory(t) { return new (t || RefundObatIrnaService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
    RefundObatIrnaService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: RefundObatIrnaService, factory: RefundObatIrnaService.ɵfac, providedIn: 'root' });
    return RefundObatIrnaService;
})();


/***/ }),

/***/ 37188:
/*!**********************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/services/resep-racikan/resep-racikan.service.ts ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ResepRacikanService": () => (/* binding */ ResepRacikanService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 35366);


let ResepRacikanService = /*@__PURE__*/ (() => {
    class ResepRacikanService {
        constructor() {
            this.ResepRacikan = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject([]);
            this.DetailResepRacikan = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject([]);
        }
        onGetResepRacikanDummy() {
            const ResepRacikan = [
                {
                    id_obat: 1, is_racikan: true, kode_obat: 'TES1', nama_obat: 'OBAT A', jumlah: 5, satuan: 'pcs', harga: 5000, diskon: 0, subtotal: 5000 * 5, detail_racikan: []
                },
                {
                    id_obat: 2, is_racikan: false, kode_obat: 'TES2', nama_obat: 'OBAT B', jumlah: 1, satuan: '', harga: 5000, diskon: 0, subtotal: 5000, detail_racikan: []
                },
                {
                    id_obat: 3, is_racikan: true, kode_obat: 'TES1', nama_obat: 'OBAT A', jumlah: 5, satuan: 'pcs', harga: 5000, diskon: 0, subtotal: 5000 * 5, detail_racikan: []
                },
                {
                    id_obat: 4, is_racikan: false, kode_obat: 'TES2', nama_obat: 'OBAT B', jumlah: 1, satuan: '', harga: 5000, diskon: 0, subtotal: 5000, detail_racikan: [
                        {
                            id_obat: 4, kode_obat: 'TES21', nama_obat: 'HOLIMOX 500 MG', satuan: '', satuan_terkecil: 'TABLET', dosis_obat: 0.5, dosis_yg_diinginkan: 0.5, jumlah: 1, harga: 2500, subtotal: 2500
                        },
                        {
                            id_obat: 4, kode_obat: 'TES22', nama_obat: 'AZOMAX 500 MG', satuan: '', satuan_terkecil: 'TABLET', dosis_obat: 0.5, dosis_yg_diinginkan: 0.5, jumlah: 1, harga: 2500, subtotal: 2500
                        }
                    ]
                },
            ];
            this.ResepRacikan.next(ResepRacikan);
            return this.ResepRacikan.asObservable();
        }
        ;
        onGetDetailResepRacikanDummy() {
            const DetailResepRacikan = [];
            this.ResepRacikan.value.map((item) => {
                DetailResepRacikan.push(...item.detail_racikan);
            });
            this.DetailResepRacikan.next(DetailResepRacikan);
            return this.DetailResepRacikan.asObservable();
        }
    }
    ResepRacikanService.ɵfac = function ResepRacikanService_Factory(t) { return new (t || ResepRacikanService)(); };
    ResepRacikanService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: ResepRacikanService, factory: ResepRacikanService.ɵfac, providedIn: 'root' });
    return ResepRacikanService;
})();


/***/ }),

/***/ 38404:
/*!*****************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/services/setup-data/setup-tipe-outlet/setup-tipe-outlet.service.ts ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SetupTipeOutletService": () => (/* binding */ SetupTipeOutletService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 47727);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 3393);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 27369);






let SetupTipeOutletService = /*@__PURE__*/ (() => {
    class SetupTipeOutletService {
        constructor(notificationService, httpOperationService) {
            this.notificationService = notificationService;
            this.httpOperationService = httpOperationService;
            this.API = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.SETUP_DATA.SETUP_TIPE_OUTLET;
            this.dataSource = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
        }
        /**
         * Service Untuk Mengisi dataScource
         * @setDataSource Void
        */
        setDataSource() {
            this.onGetAll().subscribe((result) => {
                this.dataSource.next(result.data);
            });
        }
        /**
         * Service Untuk Menampilkan Semua data
         * @onGetAll Observable<SetupPabrikModel>
        */
        onGetAll() {
            return this.httpOperationService.defaultGetRequest(this.API.GET_ALL);
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPostSave Observable<any>
         * @param ISetupPabrikModel
        */
        onPostSave(Data) {
            return this.httpOperationService.defaultPostRequest(this.API.INSERT, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        /**
         * Service Untuk Manyimpan data baru
         * @onPutEdit Observable<any>
         * @param ISetupPabrikModel
        */
        onPutEdit(Data) {
            return this.httpOperationService.defaultPutRequest(this.API.UPDATE, Data)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
    }
    SetupTipeOutletService.ɵfac = function SetupTipeOutletService_Factory(t) { return new (t || SetupTipeOutletService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_1__.NotificationService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_2__.HttpOperationService)); };
    SetupTipeOutletService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: SetupTipeOutletService, factory: SetupTipeOutletService.ɵfac, providedIn: 'root' });
    return SetupTipeOutletService;
})();


/***/ }),

/***/ 18542:
/*!*************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/services/transaksi-obat/transaksi-obat-irda/transaksi-obat-irda.service.ts ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TransaksiObatIrdaService": () => (/* binding */ TransaksiObatIrdaService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 47727);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 27369);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 3393);






let TransaksiObatIrdaService = /*@__PURE__*/ (() => {
    class TransaksiObatIrdaService {
        constructor(httpOperationService, notificationService) {
            this.httpOperationService = httpOperationService;
            this.notificationService = notificationService;
            this.API = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.TRANSAKSI_OBAT.TRANSAKSI_OBAT_IRDA;
            this.dataResep = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
        }
        Insert(resep_id) {
            return this.httpOperationService.defaultPostRequest(this.API.INSERT + '/' + resep_id, [])
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        setResep(Data) {
            this.dataResep.next(Data);
        }
        onGetPasienIrda(dynamicFilter) {
            return this.httpOperationService.defaultPostRequestByDynamicFilter(this.API.GET_PASIEN_IRDA, dynamicFilter)
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
    }
    TransaksiObatIrdaService.ɵfac = function TransaksiObatIrdaService_Factory(t) { return new (t || TransaksiObatIrdaService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_1__.HttpOperationService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_2__.NotificationService)); };
    TransaksiObatIrdaService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: TransaksiObatIrdaService, factory: TransaksiObatIrdaService.ɵfac, providedIn: 'root' });
    return TransaksiObatIrdaService;
})();


/***/ }),

/***/ 33840:
/*!*************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/services/transaksi-obat/transaksi-obat-irna/transaksi-obat-irna.service.ts ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TransaksiObatIrnaService": () => (/* binding */ TransaksiObatIrnaService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 78512);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 47727);
/* harmony import */ var src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/api/PHARMACY */ 55011);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 35366);
/* harmony import */ var src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/modules/shared/services/http-operation.service */ 27369);
/* harmony import */ var src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/modules/shared/services/notification.service */ 3393);






let TransaksiObatIrnaService = /*@__PURE__*/ (() => {
    class TransaksiObatIrnaService {
        constructor(httpOperationService, notificationService) {
            this.httpOperationService = httpOperationService;
            this.notificationService = notificationService;
            this.API = src_app_api_PHARMACY__WEBPACK_IMPORTED_MODULE_0__.PHARMACY.TRANSAKSI_OBAT.TRANSAKSI_OBAT_IRNA;
            this.dataResep = new rxjs__WEBPACK_IMPORTED_MODULE_3__.BehaviorSubject([]);
        }
        Insert(resep_id) {
            return this.httpOperationService.defaultPostRequest(this.API.INSERT + '/' + resep_id, [])
                .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)((error) => {
                this.notificationService.onShowToast(error.statusText, error.status + ' ' + error.statusText, {}, true);
            }));
        }
        setResep(Data) {
            this.dataResep.next(Data);
        }
    }
    TransaksiObatIrnaService.ɵfac = function TransaksiObatIrnaService_Factory(t) { return new (t || TransaksiObatIrnaService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_http_operation_service__WEBPACK_IMPORTED_MODULE_1__.HttpOperationService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](src_app_modules_shared_services_notification_service__WEBPACK_IMPORTED_MODULE_2__.NotificationService)); };
    TransaksiObatIrnaService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: TransaksiObatIrnaService, factory: TransaksiObatIrnaService.ɵfac, providedIn: 'root' });
    return TransaksiObatIrnaService;
})();


/***/ }),

/***/ 90777:
/*!******************************************************************************!*\
  !*** ./node_modules/ngx-socket-io/node_modules/socket.io-client/wrapper.mjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Manager": () => (/* binding */ Manager),
/* harmony export */   "Socket": () => (/* binding */ Socket),
/* harmony export */   "io": () => (/* reexport default export from named module */ _build_index_js__WEBPACK_IMPORTED_MODULE_0__),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _build_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./build/index.js */ 17037);


const Manager = _build_index_js__WEBPACK_IMPORTED_MODULE_0__.Manager;
const Socket = _build_index_js__WEBPACK_IMPORTED_MODULE_0__.Socket;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_build_index_js__WEBPACK_IMPORTED_MODULE_0__);


/***/ }),

/***/ 95129:
/*!**************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irda-daftar/json/grid.config.json ***!
  \**************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"field":"nomor_retur_penjualan_obat","headerText":"Nomor Refund","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"tanggal_retur_penjualan_obat","headerText":"Tanggal Refund","type":"Date","format":"dd/MM/yyyy","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_outlet","headerText":"Nama Outlet","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"keterangan_retur_penjualan_obat","headerText":"Keterangan","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"jumlah_item_retur","headerText":"Jumlah Item","type":"number","format":"","textAlign":"right","visible":true,"editType":"defaultEdit"},{"field":"status_transaksi","headerText":"Status","type":"string","format":"","textAlign":"right","visible":true,"editType":"defaultEdit"},{"field":"time_inputed","headerText":"Waktu Input","type":"Date","format":"dd/MM/yyyy","textAlign":"left","visible":true,"editType":"defaultEdit"}]}');

/***/ }),

/***/ 1584:
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irda-detail/json/detailItem.json ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"TrDetail":[{"allowEditing":false,"field":"retur_penjualan_obat_detail_id","headerText":"Id","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":false},{"allowEditing":false,"field":"no_urut","headerText":"No Urut","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":false},{"allowEditing":false,"field":"id_item","headerText":"Id Item","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":false},{"allowEditing":false,"field":"kode_item","headerText":"Kode Obat","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":true,"width":170},{"allowEditing":false,"field":"kode_item","headerText":"Kode Obat","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":true,"width":170},{"allowEditing":false,"field":"nama_item","headerText":"Nama Obat","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":true},{"allowEditing":false,"field":"batch_number","headerText":"Batch","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":true,"width":180},{"allowEditing":false,"field":"expired_date","headerText":"Expired","editType":"defaultEdit","type":"Date","format":"dd/MM/yyyy","textAlign":"left","headerTextAlign":"Center","visible":true,"width":200},{"allowEditing":true,"field":"qty_retur_penjualan_obat","headerText":"Banyak","editType":"defaultEdit","type":"","format":"N2","textAlign":"right","headerTextAlign":"Center","visible":true,"width":200}]}');

/***/ }),

/***/ 94421:
/*!******************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irda/json/LookupGridNoRegistrasi.json ***!
  \******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"no_register","headerText":"No Register","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"no_rekam_medis","headerText":"No RM","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_pasien","headerText":"Nama Pasien","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"gender","headerText":"Gender","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_debitur","headerText":"Debitur","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_dokter","headerText":"Dokter","type":"string","visible":true}],"filter":[{"field":"no_registrasi","filter":"like","title":"No Register"},{"field":"no_rm","filter":"like","title":"No RM"},{"field":"nama_pasien","filter":"like","title":"Nama PAsien"}]}');

/***/ }),

/***/ 55214:
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irda/json/gridPasien.config.json ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"field":"depo","headerText":"Depo","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"pasien","headerText":"Pasien","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"no_rm","headerText":"No Rm","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"no_register","headerText":"No Register","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"tanggal_masuk","headerText":"Tgl Masuk","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_pasien","headerText":"Nama Pasien","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"gender","headerText":"Sex","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_dokter","headerText":"Dokter","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_debitur","headerText":"Nama Debitur","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"}]}');

/***/ }),

/***/ 49755:
/*!******************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irda/json/lookupitem.json ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"kode_item","headerText":"Kode","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_item","headerText":"Nama Barang","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"barcode","headerText":"Barcode","type":"string","visible":true}],"filter":[{"field":"kode_item","filter":"like","title":"KODE"},{"field":"nama_item","filter":"like","title":"NAMA"},{"field":"nama_item","filter":"barcode","title":"BARCODE"}]}');

/***/ }),

/***/ 24719:
/*!**************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irja-daftar/json/grid.config.json ***!
  \**************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"field":"nomor_retur_penjualan_obat","headerText":"Nomor Refund","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"tanggal_retur_penjualan_obat","headerText":"Tanggal Refund","type":"Date","format":"dd/MM/yyyy","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nomor_penjualan_obat","headerText":"No Penjualan","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_outlet","headerText":"Nama Outlet","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"keterangan_retur_penjualan_obat","headerText":"Keterangan","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"jumlah_item_retur","headerText":"Jumlah Item","type":"number","format":"","textAlign":"right","visible":true,"editType":"defaultEdit"},{"field":"status_transaksi","headerText":"Status","type":"string","format":"","textAlign":"right","visible":true,"editType":"defaultEdit"},{"field":"time_inputed","headerText":"Waktu Input","type":"Date","format":"dd/MM/yyyy","textAlign":"left","visible":true,"editType":"defaultEdit"}]}');

/***/ }),

/***/ 90580:
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irja-detail/json/detailItem.json ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"TrDetail":[{"allowEditing":false,"field":"retur_penjualan_obat_detail_id","headerText":"Id","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":false},{"allowEditing":false,"field":"no_urut","headerText":"No Urut","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":false},{"allowEditing":false,"field":"id_item","headerText":"Id Item","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":false},{"allowEditing":false,"field":"kode_item","headerText":"Kode Obat","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":true,"width":170},{"allowEditing":false,"field":"nama_item","headerText":"Nama Obat","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":true},{"allowEditing":false,"field":"batch_number","headerText":"Batch","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":true,"width":180},{"allowEditing":false,"field":"expired_date","headerText":"Expired","editType":"defaultEdit","type":"Date","format":"dd/MM/yyyy","textAlign":"left","headerTextAlign":"Center","visible":true,"width":200},{"allowEditing":true,"field":"qty_retur_penjualan_obat","headerText":"Banyak","editType":"defaultEdit","type":"","format":"N2","textAlign":"right","headerTextAlign":"Center","visible":true,"width":200}]}');

/***/ }),

/***/ 64813:
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irja/json/gridPasien.config.json ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"field":"nomor_penjualan_obat","headerText":"No Bill","type":"string","format":"","textAlign":"left","visible":false,"editType":"defaultEdit"},{"field":"tanggal_penjualan_obat","headerText":"Tgl Bill","type":"string","format":"","textAlign":"left","visible":false,"editType":"defaultEdit"},{"field":"nama_outlet","headerText":"Depo","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"no_rekam_medis","headerText":"No Rm","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"no_register","headerText":"No Register","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"tgl_masuk","headerText":"Tgl Masuk","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_pasien","headerText":"Nama Pasien","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"gender","headerText":"Sex","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_dokter","headerText":"Dokter","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_debitur","headerText":"Nama Debitur","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"}]}');

/***/ }),

/***/ 62352:
/*!******************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irja/json/lookupitem.json ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"kode_item","headerText":"Kode","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_item","headerText":"Nama Barang","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"barcode","headerText":"Barcode","type":"string","visible":true}],"filter":[{"field":"kode_item","filter":"like","title":"KODE"},{"field":"nama_item","filter":"like","title":"NAMA"},{"field":"nama_item","filter":"barcode","title":"BARCODE"}]}');

/***/ }),

/***/ 23609:
/*!**************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irna-daftar/json/grid.config.json ***!
  \**************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"field":"nomor_retur_penjualan_obat","headerText":"Nomor Refund","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"tanggal_retur_penjualan_obat","headerText":"Tanggal Refund","type":"Date","format":"dd/MM/yyyy","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_outlet","headerText":"Nama Outlet","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"keterangan_retur_penjualan_obat","headerText":"Keterangan","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"jumlah_item_retur","headerText":"Jumlah Item","type":"number","format":"","textAlign":"right","visible":true,"editType":"defaultEdit"},{"field":"status_transaksi","headerText":"Status","type":"string","format":"","textAlign":"right","visible":true,"editType":"defaultEdit"},{"field":"time_inputed","headerText":"Waktu Input","type":"Date","format":"dd/MM/yyyy","textAlign":"left","visible":true,"editType":"defaultEdit"}]}');

/***/ }),

/***/ 86501:
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irna-detail/json/detailItem.json ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"TrDetail":[{"allowEditing":false,"field":"retur_penjualan_obat_detail_id","headerText":"Id","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":false},{"allowEditing":false,"field":"no_urut","headerText":"No Urut","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":false},{"allowEditing":false,"field":"id_item","headerText":"Id Item","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":false},{"allowEditing":false,"field":"kode_item","headerText":"Kode Obat","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":true,"width":170},{"allowEditing":false,"field":"kode_item","headerText":"Kode Obat","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":true,"width":170},{"allowEditing":false,"field":"nama_item","headerText":"Nama Obat","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":true},{"allowEditing":false,"field":"batch_number","headerText":"Batch","editType":"defaultEdit","type":"","format":"","textAlign":"left","headerTextAlign":"Center","visible":true,"width":180},{"allowEditing":false,"field":"expired_date","headerText":"Expired","editType":"defaultEdit","type":"Date","format":"dd/MM/yyyy","textAlign":"left","headerTextAlign":"Center","visible":true,"width":200},{"allowEditing":true,"field":"qty_retur_penjualan_obat","headerText":"Banyak","editType":"defaultEdit","type":"","format":"N2","textAlign":"right","headerTextAlign":"Center","visible":true,"width":200}]}');

/***/ }),

/***/ 85702:
/*!******************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irna/json/LookupGridNoRegistrasi.json ***!
  \******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"no_register","headerText":"No Register","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"no_rekam_medis","headerText":"No RM","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_pasien","headerText":"Nama Pasien","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"gender","headerText":"Gender","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_debitur","headerText":"Debitur","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_dokter","headerText":"Dokter","type":"string","visible":true}],"filter":[{"field":"no_registrasi","filter":"like","title":"No Register"},{"field":"no_rm","filter":"like","title":"No RM"},{"field":"nama_pasien","filter":"like","title":"Nama PAsien"}]}');

/***/ }),

/***/ 8493:
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irna/json/gridPasien.config.json ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"field":"depo","headerText":"Depo","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"pasien","headerText":"Pasien","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"no_rm","headerText":"No Rm","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"no_register","headerText":"No Register","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"tanggal_masuk","headerText":"Tgl Masuk","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_pasien","headerText":"Nama Pasien","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"gender","headerText":"Sex","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_dokter","headerText":"Dokter","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_debitur","headerText":"Nama Debitur","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"}]}');

/***/ }),

/***/ 47876:
/*!******************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/refund-obat/refund-obat-irna/json/lookupitem.json ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"kode_item","headerText":"Kode","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_item","headerText":"Nama Barang","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"barcode","headerText":"Barcode","type":"string","visible":true}],"filter":[{"field":"kode_item","filter":"like","title":"KODE"},{"field":"nama_item","filter":"like","title":"NAMA"},{"field":"nama_item","filter":"barcode","title":"BARCODE"}]}');

/***/ }),

/***/ 5652:
/*!***********************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/setup-data/setup-cara-pakai-obat/json/grid.config.json ***!
  \***********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"id_cara_pakai_obat","headerText":"Id","visible":false},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"kode_cara_pakai_obat","headerText":"Kode Cara Pakai Obat","visible":true},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"cara_pakai_obat","headerText":"Cara Pakai Obat","visible":true},{"allowEditing":true,"allowSorting":false,"allowFiltering":false,"editType":"booleanedit","field":"is_active","headerText":"Status Active","type":"boolean","displayAsCheckBox":true,"visible":true,"width":100}]}');

/***/ }),

/***/ 92232:
/*!*****************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/setup-data/setup-grup-obat/json/grid.config.json ***!
  \*****************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"id_grup_obat","headerText":"Id","visible":false},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"kode_grup_obat","headerText":"Kode Grup Obat","visible":true},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"nama_grup_obat","headerText":"Nama Grup Obat","visible":true},{"allowEditing":true,"allowSorting":false,"allowFiltering":false,"editType":"booleanedit","field":"is_active","headerText":"Status Active","type":"boolean","displayAsCheckBox":true,"visible":true,"width":100}]}');

/***/ }),

/***/ 60141:
/*!****************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/setup-data/setup-label-pemakaian-obat/json/grid.config.json ***!
  \****************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"id_label_pemakaian_obat","headerText":"Id","visible":false},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"kode_label_pemakaian_obat","headerText":"Kode Label","visible":true},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"nama_label_pemakaian_obat","headerText":"Nama Label","visible":true},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"berapa_kali_per_hari","headerText":"Berapa Kali Per Hari","visible":true},{"allowEditing":true,"allowSorting":false,"allowFiltering":false,"editType":"booleanedit","field":"is_active","headerText":"Status Active","type":"boolean","displayAsCheckBox":true,"visible":true,"width":100}]}');

/***/ }),

/***/ 84212:
/*!**************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/setup-data/setup-outlet/json/grid.config.json ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"id_outlet","headerText":"Id","visible":false},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"id_stockroom","headerText":"Id Stokroom","visible":true},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"kode_outlet","headerText":"Kode Outlet","visible":true},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"nama_outlet","headerText":"Outlet","visible":true},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"id_tipe_outlet","headerText":"Id Tipe Outlet","visible":true},{"allowEditing":true,"allowSorting":false,"allowFiltering":false,"editType":"booleanedit","field":"is_active","headerText":"Status Active","type":"boolean","displayAsCheckBox":true,"visible":true,"width":100}]}');

/***/ }),

/***/ 53106:
/*!***************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/setup-data/setup-rute-pemberian-obat/json/grid.config.json ***!
  \***************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"id_rute_pemberian_obat","headerText":"Id","visible":false},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"nama_rute_pemberian_obat","headerText":"Nama Rute Pemberian Obat","visible":true},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"rute_pasien","headerText":"Rute Pasien","visible":true},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"ordered","headerText":"Ordered","visible":true},{"allowEditing":false,"allowSorting":false,"allowFiltering":false,"editType":"booleanedit","field":"is_parenteral","headerText":"Parenteral","type":"boolean","displayAsCheckBox":true,"visible":true,"width":100},{"allowEditing":true,"allowSorting":false,"allowFiltering":false,"editType":"booleanedit","field":"is_active","headerText":"Status Active","type":"boolean","displayAsCheckBox":true,"visible":true,"width":100}]}');

/***/ }),

/***/ 20520:
/*!*******************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/setup-data/setup-tipe-outlet/json/grid.config.json ***!
  \*******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"id_tipe_outlet","headerText":"Id","visible":false},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"tipe_outlet","headerText":"Tipe Outlet","visible":true},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"keterangan","headerText":"Keterangan","visible":true}]}');

/***/ }),

/***/ 48544:
/*!********************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/setup-formularium/json/GridSetting.json ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridGenerik":{"columns":[{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"no_terapi_generik","headerText":"No","type":"string","visible":true,"width":100},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"nama_generik","headerText":"Nama Generik","type":"string","visible":true}]},"GridSediaan":{"columns":[{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"jenis_formularium","headerText":"F/NF","visible":true},{"allowEditing":false,"allowSorting":false,"editType":"numericEdit","field":"sediaan_obat","headerText":"Sediaan","type":"string","visible":true},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"nama_restriksi","headerText":"Restriksi","type":"string","visible":true},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"peresepan_maksimal","headerText":"peresepan_maksimal","type":"string","visible":true}],"DataSource":[{"no":1,"fornasi":"F","ket":"Tab 10 mg, Tab 20 mg"},{"no":2,"fornasi":"NF","ket":"Caps"}]},"GridKeterangan":{"columns":[{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"no","headerText":"No","type":"string","visible":true,"width":50},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"ket","headerText":"Keteranga","type":"string","visible":true}],"DataSource":[{"no":1,"ket":"Hanya untuk pemakaian pada tindakan anestesi atau perawatan di Rumah Sakit"},{"no":2,"ket":"untuk mengatasi nyeri kanker yang tidak respon terhadap analgetik non narkotik"},{"no":3,"ket":"nyeri pada serangan jantung."}]},"GridPeresepan":{"columns":[{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"no","headerText":"No","type":"string","visible":true,"width":50},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"ket","headerText":"Keteranga","type":"string","visible":true}],"DataSource":[{"no":1,"ket":"Tab lepas lambat 10 mg dan 15 mg: 60 tab/bln"}]},"GridItem":{"columns":[{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"no","headerText":"No","type":"string","visible":true,"width":50},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"ket","headerText":"Keteranga","type":"string","visible":true}],"DataSource":[{"no":1,"ket":"Mefinal Tab 500 mg"},{"no":2,"ket":"Ponstan Tab 500 mg"},{"no":3,"ket":"Lapistan Caps 500 mg"}]}}');

/***/ }),

/***/ 60192:
/*!****************************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/setup-formularium/setup-formularium/setup-generik/json/grid.config.json ***!
  \****************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"id_grup_obat","headerText":"Id","visible":false},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"kode_grup_obat","headerText":"Kode Grup Obat","visible":true},{"allowEditing":false,"allowSorting":true,"editType":"defaultEdit","field":"nama_grup_obat","headerText":"Nama Grup Obat","visible":true},{"allowEditing":true,"allowSorting":false,"allowFiltering":false,"editType":"booleanedit","field":"is_active","headerText":"Status Active","type":"boolean","displayAsCheckBox":true,"visible":true,"width":100}]}');

/***/ }),

/***/ 47394:
/*!********************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/transaksi-obat/input-resep-irja/json/GridResep.json ***!
  \********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridInputResep":{"columns":[{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"rx","headerText":"Rx","type":"string","visible":true,"width":30},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"no_urut","headerText":"No","visible":true,"width":30},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"kode_resep","headerText":"Kode Resep","visible":false,"width":50},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"nama_obat","headerText":"Nama Obat","visible":true,"width":150},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"satuan","headerText":"Satuan","visible":true,"width":70},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"qty_obat","headerText":"Qty","format":"N","textAlign":"Right","visible":true,"width":70},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"aturan_pakai","headerText":"Jumlah Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"keterangan_pakai","headerText":"Aturan Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"waktu_pakai","headerText":"Waktu Pakai","type":"string","visible":true,"width":120},{"allowEditing":false,"allowSorting":false,"editType":"defaultEdit","field":"catatan","headerText":"Catatan","type":"string","visible":true,"width":100}]},"GridHistoryResep":{"columns":[],"dataSource":[]}}');

/***/ }),

/***/ 10954:
/*!*********************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/transaksi-obat/input-resep-irja/json/lookupitem.json ***!
  \*********************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"set_racikan_id","headerText":"Id","type":"string","visible":false},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_obat","headerText":"Nama Racikan","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"qty_resep","headerText":"Qty","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"ket_label","headerText":"Label","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"ket_aturan","headerText":"Tambahan Aturan","type":"string","visible":true}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"kandungan_obat","headerText":"Kandungan"},{"field":"nama_satuan","headerText":"Satuan"},{"field":"qty_racikan","headerText":"Qty"}],"filter":[{"field":"nama_racikan","filter":"like","title":"Nama Racikan"}]}');

/***/ }),

/***/ 27917:
/*!******************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/transaksi-obat/input-resep-irja/json/lookuptemplateresep.json ***!
  \******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"set_racikan_id","headerText":"Id","type":"string","visible":false},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_template","headerText":"Nama Template Resep","type":"string","visible":true}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"qty_resep","headerText":"Qty"}],"filter":[{"field":"nama_racikan","filter":"like","title":"Nama Racikan"}]}');

/***/ }),

/***/ 55885:
/*!***********************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/transaksi-obat/input-resep-irja/json/transaksi-billing.config.json ***!
  \***********************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"LookupPasien":{"columns":[{"allowEditing":true,"allowSorting":true,"displayAsCheckBox":true,"editType":"booleanEdit","field":"cek","headerText":"CEK","visible":false,"width":150},{"allowEditing":true,"allowSorting":true,"editType":"numericEdit","field":"id_person","format":"N2","headerText":"PERSON ID","type":"number","visible":false,"width":150},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"no_register","headerText":"NO. REGISTER","type":"string","visible":true,"width":100},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_pasien","headerText":"NAMA PASIEN","type":"string","visible":true,"width":200},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"no_rekam_medis","headerText":"NO. RM","type":"string","visible":true,"width":100},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"tgl_admisi","headerText":"TGL. ADMISI","type":"Date","format":"dd/MM/yyyy","visible":true,"width":100},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_kelas","headerText":"KELAS","type":"string","visible":true,"width":70},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_debitur","headerText":"DEBITUR","type":"string","visible":true,"width":150}],"filter":[{"field":"p.no_identitas","filter":"like","title":"NO. IDENTITAS"},{"field":"tp.no_register","filter":"like","title":"NO. REGISTER"},{"field":"concat(p.nama_depan, \' \',p.nama_belakang)","filter":"like","title":"NAMA PASIEN"},{"field":"tp.no_rekam_medis","filter":"like","title":"NO. RM"}]}}');

/***/ }),

/***/ 9523:
/*!*******************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/transaksi-obat/transaksi-obat-irda/json/LookupGridRuangan.json ***!
  \*******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"id_poli","headerText":"Id","type":"string","visible":false},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"kode_poli","headerText":"Kode Ruangan","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_poli","headerText":"Nama Ruangan","type":"string","visible":true}],"filter":[{"field":"kode_poli","filter":"like","title":"Kode Ruangan"},{"field":"nama_ruangan","filter":"like","title":"Nama Ruangan"}]}');

/***/ }),

/***/ 75149:
/*!*******************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/transaksi-obat/transaksi-obat-irda/json/gridPasien.config.json ***!
  \*******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"field":"id_register","headerText":"Id","type":"number","format":"","textAlign":"left","visible":false,"editType":"defaultEdit"},{"field":"no_register","headerText":"No Register","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_pasien","headerText":"Nama Pasien","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_dokter","headerText":"Nama Dokter","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"}]}');

/***/ }),

/***/ 12074:
/*!******************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/transaksi-obat/transaksi-obat-irda/json/gridResep.config.json ***!
  \******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"field":"id_register","headerText":"Id","type":"number","format":"","textAlign":"left","visible":false,"editType":"defaultEdit"},{"field":"nomor_resep","headerText":"Nomor Resep","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_dokter","headerText":"Dokter","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"status_resep","headerText":"Status Resep","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"qty_racikan","headerText":"Qty","width":50},{"field":"harga_jual_apotek","headerText":"Harga","format":"N2","width":70},{"field":"total_harga","headerText":"Total Harga","textAlign":"Right","format":"N2","width":70}]}');

/***/ }),

/***/ 36914:
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/transaksi-obat/transaksi-obat-irja/json/grid.config.json ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"field":"id_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nomor_resep","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"id_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"id_dokter","headerText":"Pemesanan Id","type":"number","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"qty_racikan","headerText":"Qty","width":50}]}');

/***/ }),

/***/ 12369:
/*!*******************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/transaksi-obat/transaksi-obat-irna/json/LookupGridRuangan.json ***!
  \*******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"columns":[{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"id_poli","headerText":"Id","type":"string","visible":false},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"kode_poli","headerText":"Kode Ruangan","type":"string","visible":true},{"allowEditing":true,"allowSorting":true,"editType":"defaultEdit","field":"nama_poli","headerText":"Nama Ruangan","type":"string","visible":true}],"filter":[{"field":"kode_poli","filter":"like","title":"Kode Ruangan"},{"field":"nama_ruangan","filter":"like","title":"Nama Ruangan"}]}');

/***/ }),

/***/ 40951:
/*!*******************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/transaksi-obat/transaksi-obat-irna/json/gridPasien.config.json ***!
  \*******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"field":"id_register","headerText":"Id","type":"number","format":"","textAlign":"left","visible":false,"editType":"defaultEdit"},{"field":"nama_pasien","headerText":"Nama Pasien","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"bed_no","headerText":"Bed","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_dokter","headerText":"Nama Dokter","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"}]}');

/***/ }),

/***/ 49504:
/*!******************************************************************************************************!*\
  !*** ./src/app/modules/Pharmacy/pages/transaksi-obat/transaksi-obat-irna/json/gridResep.config.json ***!
  \******************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"GridColumns":[{"field":"id_register","headerText":"Id","type":"number","format":"","textAlign":"left","visible":false,"editType":"defaultEdit"},{"field":"nomor_resep","headerText":"Nomor Resep","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"nama_dokter","headerText":"Dokter","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"},{"field":"status_resep","headerText":"Status Resep","type":"string","format":"","textAlign":"left","visible":true,"editType":"defaultEdit"}],"columnsChild":[{"field":"nama_obat","headerText":"Nama Obat"},{"field":"qty_racikan","headerText":"Qty","width":100}]}');

/***/ })

}]);