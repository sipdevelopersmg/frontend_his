version: 2.1
orbs:
  node: circleci/node@5.0.2

jobs:
  build-development:
    machine:
      image: ubuntu-2004:current
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: Login to dockerhub
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: Build dockerfile
          command: |
            docker build --no-cache -t dockerhiscis/frontend-his:$CIRCLE_SHA1 .
      - run:
          name: Push Docker Image
          command: |
            docker push dockerhiscis/frontend-his:$CIRCLE_SHA1
            docker tag dockerhiscis/frontend-his:$CIRCLE_SHA1 dockerhiscis/frontend-his:latest
            docker push dockerhiscis/frontend-his:latest
      - add_ssh_keys:
          fingerprints:
            # - "82:92:b4:65:61:1d:5f:67:0b:63:63:6a:d1:09:a1:5e"
            # ssh -o StrictHostKeyChecking=no his-admin@134.209.102.123 "cd /home/his-admin/frontend-his/ && ./deploy.sh"
            - "ff:78:f1:c9:e9:45:cc:c8:ca:45:3b:3b:fb:74:5a:df"

      - run:
          name: Deploy app to development server
          command: |
            ssh -o StrictHostKeyChecking=no root@174.138.22.139 "cd /home/frontend-his-circle/ && docker-compose down && docker pull dockerhiscis/frontend-his:latest && docker-compose up -d"
  build-demo:
    machine:
      image: ubuntu-2004:current
    resource_class: xlarge
    steps:
      - run:
          name: validate branch and repo
          command: echo $CIRCLE_BRANCH && echo $CIRCLE_REPOSITORY_URL
      - run:
          name: checkout
          command: git clone -b "$CIRCLE_BRANCH" "$CIRCLE_REPOSITORY_URL" .
      - node/install:
          install-yarn: false
          node-version: "14.17.1"
      - run:
          name: list dir
          command: ls
      - run:
          name: verify node version
          command: node --version
      - run:
          name: install angular 12.0.1
          command: npm install -g @angular/cli@12.0.1
      - run:
          name: install package
          command: npm install
      - run:
          name: npm version patch --no-git-tag-version
          command: npm version patch --no-git-tag-version
      - run:
          name: node ./replace.build.js
          command: node ./replace.build.js
      - run:
          name: build angular
          command: ng build --configuration=production --output-hashing=all
      - run:
          name: Login to dockerhub
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: Build dockerfile
          command: |
            docker build --no-cache -t dockerhiscis/frontend-his:$CIRCLE_SHA1 .
      - run:
          name: Push Docker Image
          command: |
            docker push dockerhiscis/frontend-his:$CIRCLE_SHA1
            docker tag dockerhiscis/frontend-his:$CIRCLE_SHA1 dockerhiscis/frontend-his:demo-latest
            docker push dockerhiscis/frontend-his:demo-latest
      - add_ssh_keys:
          fingerprints:
            - "19:47:e4:cb:a9:7a:7b:80:7c:b1:20:49:9a:7f:8b:75"
            # - "33:d0:c1:51:52:fc:3e:18:e4:24:d3:61:87:d9:0c:fb"
            # ssh -o StrictHostKeyChecking=no his-admin@134.209.102.123 "cd /home/his-admin/frontend-his/ && ./deploy.sh"
            #- "ff:78:f1:c9:e9:45:cc:c8:ca:45:3b:3b:fb:74:5a:df"
            #ssh -o StrictHostKeyChecking=no root@174.138.22.139 "cd /home/frontend-his-circle/ && docker-compose down && docker pull dockerhiscis/frontend-his:latest && docker-compose up -d"

      - run:
          name: Deploy app to demo server
          command: |
            ssh -o StrictHostKeyChecking=no his-admin@128.199.236.81 "cd /home/his-admin/frontend-his/ && ./deploy.sh"
workflows:
  basic-workflow:
    jobs:
      - build-development:
          filters:
            branches:
              only:
                - development
      - build-demo:
          filters:
            branches:
              only:
                - demo
